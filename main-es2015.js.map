{"version":3,"sources":["./src/app/app.component.html","./src/app/games/hearts/hearts.component.html","./src/app/games/rikiki/rikiki.component.html","./src/app/home/home.component.html","./node_modules/tslib/tslib.es6.js","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/games/hearts/hearts.component.scss","./src/app/games/hearts/hearts.component.ts","./src/app/games/hearts/hearts.service.ts","./src/app/games/rikiki/rikiki.component.scss","./src/app/games/rikiki/rikiki.component.ts","./src/app/games/rikiki/rikiki.service.ts","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/table-parts/card/card.ts","./src/app/table-parts/card/cards.ts","./src/app/table-parts/deck/deck.ts","./src/app/table-parts/player/hearts-player.ts","./src/app/table-parts/player/player.ts","./src/app/table-parts/player/rikiki-player.ts","./src/app/table-parts/suit/suit.ts","./src/app/table-parts/suit/suits.ts","./src/app/table-parts/table/hearts-table.ts","./src/app/table-parts/table/rikiki-table.ts","./src/app/table-parts/table/table.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<router-outlet></router-outlet>\"","export default \"<mat-tab-group class=\\\"hearts-container\\\">\\r\\n  <mat-tab [label]=\\\"'PLAY' | translate\\\">\\r\\n    <div class=\\\"hearts-container__play-ground\\\">\\r\\n      <mat-card class=\\\"card-table-panel\\\">\\r\\n        <div class=\\\"flex-center\\\">\\r\\n          <div class=\\\"flex-center col-gap-6\\\">\\r\\n            <p\\r\\n              [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n              class=\\\"col-gap-1 text-semibold font-size-20\\\"\\r\\n            >{{ players.length ? players[1].getName() : '-' }}</p>\\r\\n            <img class=\\\"card-size\\\" [src]=\\\"cardUrls[1]\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"flex-col-space-between col-gap-6\\\">\\r\\n            <div class=\\\"flex-col-center\\\">\\r\\n              <p\\r\\n                [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n                class=\\\"flex-col-center card-size no-margin row-gap-1 text-semibold font-size-20\\\"\\r\\n              >{{ players.length ? players[2].getName() : '-' }}</p>\\r\\n              <img class=\\\"flex-col-center card-size\\\" [src]=\\\"cardUrls[2]\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"swap-direction-icon-wrapper\\\">\\r\\n              <img *ngIf=\\\"!endOf3CardsSelection\\\" class=\\\"swap-direction-icon\\\" [src]=\\\"swapDirectionImgUrl\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"flex-col-center my-card\\\">\\r\\n              <img class=\\\"card-size row-gap-1\\\" [src]=\\\"myCardUrl\\\"/>\\r\\n              <p\\r\\n                [class]=\\\"myTable ? 'text-white' : 'text-table-green'\\\"\\r\\n                class=\\\"flex-col-center card-size no-margin text-center text-semibold font-size-20\\\"\\r\\n              >{{ myTable ? myTable.getPlayer(0).getName() : '-'}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"flex-center\\\">\\r\\n            <img class=\\\"card-size col-gap-1\\\" [src]=\\\"cardUrls[3]\\\"/>\\r\\n            <p\\r\\n              [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n              class=\\\"text-semibold font-size-20\\\"\\r\\n            >{{ players.length ? players[3].getName() : '-' }}</p>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"my-cards-panel\\\">\\r\\n        <div class=\\\"flex-col-center\\\">\\r\\n          <p class=\\\"flex-center text-center text-semibold font-size-20\\\">\\r\\n            {{ 'MY_CARDS_PANEL.YOUR_CARDS' | translate }} ({{ myTable ? myTable.getPlayer(0).getName() : '-'}})\\r\\n          </p>\\r\\n          <div\\r\\n            [ngClass]=\\\"{'my-cards-panel_my-cards': myTable.getPlayer(0).hasCard()}\\\"\\r\\n            class=\\\"flex-center-end row-gap-2\\\"\\r\\n          >\\r\\n            <img *ngIf=\\\"!myTable?.getPlayer(0).hasCard()\\\" class=\\\"my-cards-panel_placeholder card-size\\\" [src]=\\\"placeholderCardImgUrl\\\"/>\\r\\n            <div *ngFor=\\\"let card of myTable?.getPlayer(0).getCards(); let idx=index\\\">\\r\\n              <div class=\\\"my-cards-panel_card-wrapper\\\">\\r\\n                <img\\r\\n                  [id]=\\\"'my-card-' + card.printCard()\\\"\\r\\n                  [ngClass]=\\\"{'my-card-in-hand': !endOf3CardsSelection}\\\"\\r\\n                  class=\\\"card-size\\\"\\r\\n                  [src]=\\\"convertCardToImgUrl(card)\\\"\\r\\n                  (click)=\\\"selectedCard(card)\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"my-cards-panel_info\\\">\\r\\n            <p\\r\\n              [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n              class=\\\"flex-center no-margin text-center font-size-20\\\"\\r\\n              [innerHTML]=\\\"allMessage.msg | translate: allMessage.translateParams\\\"\\r\\n            ></p>\\r\\n            <p\\r\\n              [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n              class=\\\"flex-center no-margin text-center font-size-14\\\"\\r\\n              [innerHTML]=\\\"allMessage.subMsg | translate: allMessage.translateParams\\\"\\r\\n            ></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"control-panel\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"control-panel_first-half flex-space-between\\\">\\r\\n            <div>\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"endOfGame || endOfRound || endOf3CardsSelection || selectedCardsToSwap.length !== 3\\\"\\r\\n                (click)=\\\"swapCards()\\\"\\r\\n              >{{ 'CONTROL_PANEL.SUBMIT_3_CARDS_SELECTION' | translate }}</button>\\r\\n            </div>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"confirmStand()\\\"\\r\\n              [disabled]=\\\"endOfGame || endOfRound || !endOf3CardsSelection || !endOfSelection\\\"\\r\\n            >{{ 'CONTROL_PANEL.CONFIRM_STAND' | translate }}</button>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"newRound()\\\"\\r\\n              [disabled]=\\\"endOfGame || !endOfRound\\\"\\r\\n            >{{ 'CONTROL_PANEL.NEXT_ROUND' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"control-panel_second-half flex-end\\\">\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"newGame()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'CONTROL_PANEL.NEW_GAME' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"score-board flex-center\\\">\\r\\n        <div class=\\\"score-board-header flex-center\\\">\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.NAME' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.REALIZED' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.SCORE' | translate }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"score-board-row flex-center\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">\\r\\n          <div class=\\\"flex-center text-semibold\\\">{{ player.getName() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-center\\\">{{ player.getReal() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-right\\\">{{ player.getScore() }}</div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab [label]=\\\"'HISTORY' | translate\\\">\\r\\n    <mat-card class=\\\"hearts-container__history history-score-board flex-center\\\">\\r\\n      <div class=\\\"history-score-board-header flex-center\\\">\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_PER_ROUND' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_STARTER' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col history-score-board-header-name flex-center text-bold\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">{{ player.getName() }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_TAKER' | translate }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"flex-col-center\\\" *ngFor=\\\"let record of history\\\">\\r\\n        <div *ngIf=\\\"record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col flex-center text-semibold\\\">{{ record.cardRow.turnPerRound }}</div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.trunStarter }}</div>\\r\\n          <div class=\\\"history-score-board-col flex-center text-bold\\\" *ngFor=\\\"let cardUrl of record.cardRow.cardUrls\\\">\\r\\n            <img class=\\\"flex-center history-card-size\\\" [src]=\\\"cardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.turnTaker }}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\">\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.REAL' | translate }}</div>\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.SCORE' | translate }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center\\\">\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\" *ngFor=\\\"let player of record.scoreRow.players\\\">\\r\\n            <div class=\\\"flex-center\\\">{{ player.getReal() }}</div>\\r\\n            <div class=\\\"flex-center\\\">{{ player.getScore() }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<mat-tab-group class=\\\"rikiki-container\\\">\\r\\n  <mat-tab [label]=\\\"'SETTINGS' | translate\\\">\\r\\n    <mat-card class=\\\"rikiki-container__settings-panel\\\">\\r\\n      <div class=\\\"flex-col-start\\\">\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              routerLink=\\\"/home\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n            >{{ 'SETTINGS_PANEL.GO_HOME' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-gap-1\\\">\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"leaveGame()\\\"\\r\\n              [disabled]=\\\"endOfGame\\\"\\r\\n            >{{ 'SETTINGS_PANEL.LEAVE_CURRENT_GAME' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.NR_OF_PLAYERS' | translate }}:</div>\\r\\n          <div class=\\\"flex-end\\\">\\r\\n            <mat-slider\\r\\n              class=\\\"col-gap-2\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              [step]=\\\"1\\\"\\r\\n              [tickInterval]=\\\"1\\\"\\r\\n              [thumbLabel]=\\\"true\\\"\\r\\n              [vertical]=\\\"false\\\"\\r\\n              [invert]=\\\"false\\\"\\r\\n              [min]=\\\"3\\\"\\r\\n              [max]=\\\"nrOfPlayersMax\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n              [(ngModel)]=\\\"nrOfPlayersTemp\\\"\\r\\n            ></mat-slider>\\r\\n            <div class=\\\"col-gap-1\\\">\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"setNrOfPlayers()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.NR_OF_ROUNDS' | translate }}:</div>\\r\\n          <div class=\\\"flex-end\\\">\\r\\n            <mat-slider\\r\\n              class=\\\"col-gap-2\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              [step]=\\\"1\\\"\\r\\n              [tickInterval]=\\\"1\\\"\\r\\n              [thumbLabel]=\\\"true\\\"\\r\\n              [vertical]=\\\"false\\\"\\r\\n              [invert]=\\\"false\\\"\\r\\n              [min]=\\\"3\\\"\\r\\n              [max]=\\\"nrOfRoundsMax\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n              [(ngModel)]=\\\"nrOfRoundsTemp\\\"\\r\\n            ></mat-slider>\\r\\n            <div class=\\\"col-gap-1\\\">\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"setNrOfRounds()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.START_PLAYER' | translate }}:</div>\\r\\n          <div class=\\\"flex-end\\\">\\r\\n            <mat-slider\\r\\n              class=\\\"col-gap-2\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              [step]=\\\"1\\\"\\r\\n              [tickInterval]=\\\"1\\\"\\r\\n              [thumbLabel]=\\\"true\\\"\\r\\n              [vertical]=\\\"false\\\"\\r\\n              [invert]=\\\"false\\\"\\r\\n              [min]=\\\"1\\\"\\r\\n              [max]=\\\"nrOfPlayersMax\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n              [(ngModel)]=\\\"starterIdxTemp\\\"\\r\\n            ></mat-slider>\\r\\n            <div class=\\\"col-gap-1\\\">\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"setStarter()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n  <mat-tab [label]=\\\"'PLAY' | translate\\\">\\r\\n    <div class=\\\"rikiki-container__play-ground\\\">\\r\\n      <mat-card class=\\\"card-table-panel flex\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"card-table-panel_first-half flex-col-center\\\">\\r\\n            <p class=\\\"flex-col-center card-size no-margin text-center text-bold text-white font-size-16\\\">{{ 'CARD_TABLE_PANEL.TRUMP_CARD' | translate }}</p>\\r\\n            <img class=\\\"card-size\\\" [src]=\\\"trumpCardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"card-table-panel_second-half flex-center\\\">\\r\\n            <div class=\\\"flex-col-center\\\">\\r\\n              <div class=\\\"card-table-other-players flex-center row-gap-2\\\">\\r\\n                <div *ngFor=\\\"let cardUrl of cardUrls; let idx=index\\\">\\r\\n                  <p\\r\\n                    [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin col-gap-6 text-semibold font-size-20\\\"\\r\\n                  >{{ players.length ? players[idx].getName() : '-' }}</p>\\r\\n                  <img class=\\\"flex-col-center card-size col-gap-6\\\" [src]=\\\"cardUrl\\\"/>\\r\\n                  <p\\r\\n                    [class]=\\\"players.length && idx === dealerIdx ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin text-bold\\\"\\r\\n                  >\\r\\n                    {{ idx === dealerIdx ? 'Dealer' : '-' }}\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"trump-and-my-selected-card row-gap-2\\\">\\r\\n                <div class=\\\"flex-col-center-top my-card\\\">\\r\\n                  <img class=\\\"card-size\\\" [src]=\\\"myCardUrl\\\"/>\\r\\n                  <p\\r\\n                    [class]=\\\"myTable ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin text-center text-semibold font-size-20\\\"\\r\\n                  >{{ myTable ? myTable.getPlayer(0).getName() : '-'}}</p>\\r\\n                  <p\\r\\n                    [class]=\\\"dealerIdx === 0 ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin text-bold\\\"\\r\\n                  >\\r\\n                    {{ dealerIdx === 0 ? 'Dealer' : '-' }}\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"my-cards-panel\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"my-cards-panel__first-half flex-col-center\\\">\\r\\n            <p class=\\\"flex-col-center card-size no-margin text-center text-bold text-white font-size-16\\\">{{ 'MY_CARDS_PANEL.ROUND' | translate }}</p>\\r\\n            <p class=\\\"no-margin text-bold color-primary font-size-64\\\">{{ relativeRound }}</p>\\r\\n          </div>\\r\\n          <div class=\\\"my-cards-panel__second-half flex-col-center\\\">\\r\\n            <p class=\\\"flex-center text-center text-semibold font-size-20\\\">{{ 'MY_CARDS_PANEL.YOUR_CARDS' | translate }} ({{ myTable ? myTable.getPlayer(0).getName() : '-'}})</p>\\r\\n            <div class=\\\"my-cards-panel__second-half_my-cards flex-center row-gap-2\\\">\\r\\n              <img *ngIf=\\\"!myTable || !myTable.getPlayer(0).hasCard()\\\" class=\\\"card-size\\\" [src]=\\\"placeholderCardImgUrl\\\"/>\\r\\n              <div *ngFor=\\\"let card of myTable?.getPlayer(0).getCards(); let idx=index\\\">\\r\\n                <img\\r\\n                  [ngClass]=\\\"{'margin-left-1': idx === 0, 'my-card-in-hand': !endOfSelection}\\\"\\r\\n                  class=\\\"card-size col-gap-2\\\"\\r\\n                  [src]=\\\"round === 1 ? cardBackImgUrl : convertCardToImgUrl(card)\\\"\\r\\n                  (click)=\\\"selectedCard(idx)\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"my-cards-panel__second-half_info\\\">\\r\\n              <p\\r\\n                [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n                class=\\\"flex-center no-margin text-center font-size-20\\\"\\r\\n                [translate]=\\\"allMessage.msg\\\"\\r\\n                [translateParams]=\\\"allMessage.translateParams\\\"\\r\\n              ></p>\\r\\n              <p\\r\\n                [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n                class=\\\"flex-center no-margin text-center font-size-14\\\"\\r\\n                [translate]=\\\"allMessage.subMsg\\\"\\r\\n                [translateParams]=\\\"allMessage.translateParams\\\"\\r\\n              ></p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"control-panel\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"control-panel_first-half flex-space-between\\\">\\r\\n            <div >\\r\\n              <mat-slider\\r\\n                class=\\\"col-gap-2\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                [step]=\\\"1\\\"\\r\\n                [tickInterval]=\\\"1\\\"\\r\\n                [thumbLabel]=\\\"true\\\"\\r\\n                [vertical]=\\\"false\\\"\\r\\n                [invert]=\\\"false\\\"\\r\\n                [min]=\\\"playerBetMin\\\"\\r\\n                [max]=\\\"playerBetMax\\\"\\r\\n                [disabled]=\\\"endOfGame || endOfRound || endOfBet\\\"\\r\\n                [(ngModel)]=\\\"playerBet\\\"\\r\\n              ></mat-slider>\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"endOfGame || endOfRound || endOfBet\\\"\\r\\n                (click)=\\\"bet()\\\"\\r\\n              >{{ 'CONTROL_PANEL.SUBMIT_BET' | translate }}</button>\\r\\n            </div>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"confirmStand()\\\"\\r\\n              [disabled]=\\\"endOfGame || endOfRound || !endOfBet || !endOfSelection\\\"\\r\\n            >{{ 'CONTROL_PANEL.CONFIRM_STAND' | translate }}</button>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"newRound()\\\"\\r\\n              [disabled]=\\\"endOfGame || !endOfRound\\\"\\r\\n            >{{ 'CONTROL_PANEL.NEXT_ROUND' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"control-panel_second-half flex-end\\\">\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"newGame()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'CONTROL_PANEL.NEW_GAME' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"score-board flex-center\\\">\\r\\n        <div class=\\\"score-board-header flex-center\\\">\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.NAME' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.ACTUAL_BET' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.REALIZED' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.SCORE' | translate }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"score-board-row flex-center\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">\\r\\n          <div class=\\\"flex-center text-semibold\\\">{{ player.getName() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-center\\\">{{ player.getBet() === -1 ? '-' : player.getBet() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-center\\\">{{ player.getReal() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-right\\\">{{ player.getScore() }}</div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab [label]=\\\"'HISTORY' | translate\\\">\\r\\n    <mat-card class=\\\"rikiki-container__history history-score-board flex-center\\\">\\r\\n      <div class=\\\"history-score-board-header flex-center\\\">\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_PER_ROUND' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_STARTER' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col history-score-board-header-name flex-center text-bold\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">{{ player.getName() }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_TAKER' | translate }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"flex-col-center\\\" *ngFor=\\\"let record of history\\\">\\r\\n        <div *ngIf=\\\"record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col flex-center text-semibold\\\">{{ record.cardRow.turnPerRound }}</div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.trunStarter }}</div>\\r\\n          <div class=\\\"history-score-board-col flex-center text-bold\\\" *ngFor=\\\"let cardUrl of record.cardRow.cardUrls\\\">\\r\\n            <img class=\\\"flex-center history-card-size\\\" [src]=\\\"cardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.turnTaker }}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\">\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.BET' | translate }}</div>\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.REAL' | translate }}</div>\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.SCORE' | translate }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center\\\">\\r\\n            <img class=\\\"flex-center history-card-size\\\" [src]=\\\"record.scoreRow.trumpCardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\" *ngFor=\\\"let player of record.scoreRow.players\\\">\\r\\n            <div class=\\\"flex-center\\\">{{ player.getBet() }}</div>\\r\\n            <div class=\\\"flex-center\\\">{{ player.getReal() }}</div>\\r\\n            <div class=\\\"flex-center\\\">{{ player.getScore() }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<div class=\\\"home-container\\\">\\r\\n  <mat-card class=\\\"home-container__settings-panel\\\">\\r\\n    <div class=\\\"flex-col-start\\\">\\r\\n      <div class=\\\"home-container__settings-panel_row flex-space-between row-gap-2\\\">\\r\\n        <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.SELECT_LANGUAGE' | translate }}:</div>\\r\\n        <div class=\\\"flex-end\\\">\\r\\n          <div class=\\\"col-gap-2 text-bold font-size-16\\\">{{ 'SETTINGS_PANEL.LANG_HU' | translate }}</div>\\r\\n          <mat-slide-toggle\\r\\n            class=\\\"col-gap-2\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [checked]=\\\"currLang === 'en'\\\"\\r\\n            (change)=\\\"langChange($event.checked ? 'en' : 'hu')\\\"\\r\\n          ></mat-slide-toggle>\\r\\n          <div class=\\\"col-gap-2 text-bold font-size-16\\\">{{ 'SETTINGS_PANEL.LANG_EN' | translate }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"home-container__settings-panel_row flex-space-between row-gap-2\\\">\\r\\n        <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.ENTER_YOUR_NAME' | translate }}:</div>\\r\\n        <div class=\\\"flex-end\\\">\\r\\n          <input\\r\\n            class=\\\"player-name col-gap-3\\\"\\r\\n            type=\\\"text\\\"\\r\\n            maxlength=\\\"5\\\"\\r\\n            [(ngModel)]=\\\"playerNameTemp\\\"\\r\\n          >\\r\\n          <div class=\\\"col-gap-1\\\">\\r\\n            <button\\r\\n              class=\\\"font-size-16\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"setPlayerName()\\\"\\r\\n            >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"home-container__settings-panel_row flex-space-between\\\">\\r\\n        <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.SELECT_GAME' | translate }}:</div>\\r\\n        <div class=\\\"flex-end\\\">\\r\\n          <div class=\\\"col-gap-2\\\">\\r\\n            <button\\r\\n              class=\\\"font-size-16\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"goToRikiki()\\\"\\r\\n            >{{ 'RIKIKI' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-gap-1\\\">\\r\\n            <button\\r\\n              class=\\\"font-size-16\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"goToHearts()\\\"\\r\\n            >{{ 'HEARTS' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeartsComponent } from './games/hearts/hearts.component';\r\nimport { RikikiComponent } from './games/rikiki/rikiki.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'rikiki',\r\n    component: RikikiComponent,\r\n  },\r\n  {\r\n    path: 'hearts',\r\n    component: HeartsComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      onSameUrlNavigation: 'reload',\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  /* TODO's\r\n  * kivezetni a material-t\r\n  * saját tailwind szerü class-ok gyártása\r\n  */\r\n\r\n  private readonly defaultLang = 'hu';\r\n\r\n  constructor(\r\n    private localStorage: LocalStorageService,\r\n    private translate: TranslateService\r\n  ) {\r\n    const currLang = this.localStorage.retrieve('lang');\r\n    this.translate.setDefaultLang(currLang || this.defaultLang);\r\n    if (!currLang) {\r\n      this.localStorage.store('lang', this.defaultLang);\r\n    }\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport hu from '@angular/common/locales/hu';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RikikiComponent } from './games/rikiki/rikiki.component';\r\nimport { HeartsComponent } from './games/hearts/hearts.component';\r\n\r\nimport { RikikiService } from './games/rikiki/rikiki.service';\r\nimport { HeartsService } from './games/hearts/hearts.service';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nregisterLocaleData(hu, 'hu');\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RikikiComponent,\r\n    HeartsComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxWebstorageModule.forRoot({\r\n      prefix: 'app-',\r\n      caseSensitive: true,\r\n    }),\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [RikikiService, HeartsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","export default \".hearts-container__play-ground .card-table-panel,\\n.hearts-container__play-ground .my-cards-panel {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n}\\n.hearts-container__play-ground .control-panel {\\n  margin: 0 auto;\\n  min-width: 820px;\\n  max-width: 820px;\\n}\\n.hearts-container__play-ground .score-board {\\n  margin: 0 auto;\\n  min-width: 400px;\\n  max-width: 400px;\\n}\\n.hearts-container__play-ground .card-table-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 100px;\\n  border-top-right-radius: 100px;\\n  border-bottom-left-radius: 0;\\n  border-bottom-right-radius: 0;\\n  min-height: 356px;\\n  max-height: 356px;\\n  padding: 16px 16px 0px 16px;\\n}\\n.hearts-container__play-ground .card-table-panel .swap-direction-icon-wrapper {\\n  height: 70px;\\n}\\n.hearts-container__play-ground .card-table-panel .swap-direction-icon {\\n  width: 60px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n.hearts-container__play-ground .my-cards-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n  border-bottom-left-radius: 100px;\\n  border-bottom-right-radius: 100px;\\n  min-height: 240px;\\n  max-height: 240px;\\n  padding: 0px 16px 16px 16px;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards {\\n  height: 130px;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards .my-card-in-hand:hover {\\n  cursor: pointer;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards .lifted {\\n  margin-bottom: 1rem;\\n}\\n.hearts-container__play-ground .my-cards-panel_info {\\n  min-height: 40px;\\n}\\n.hearts-container__play-ground .control-panel {\\n  padding: 0px 16px;\\n}\\n.hearts-container__play-ground .control-panel_first-half {\\n  flex: 0 1 75%;\\n}\\n.hearts-container__play-ground .control-panel_second-half {\\n  flex: auto;\\n}\\n.hearts-container__play-ground .control-panel,\\n.hearts-container__play-ground .score-board {\\n  background-color: var(--primary-lighter-color);\\n}\\n.hearts-container__play-ground .card-table-other-players {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.hearts-container__play-ground .card-table-other-players div:nth-child(1) {\\n  display: none;\\n}\\n.hearts-container__play-ground .card-table-other-players div:nth-child(2) {\\n  margin-left: 3rem;\\n}\\n.hearts-container__play-ground .my-card {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.hearts-container__play-ground .card-size {\\n  width: 80px;\\n}\\n.hearts-container__play-ground .my-cards-panel_placeholder {\\n  margin-left: 6px;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards {\\n  margin-right: 34px;\\n}\\n.hearts-container__play-ground .my-cards-panel_card-wrapper {\\n  width: 40px;\\n}\\n.hearts-container__play-ground .mat-slider-horizontal {\\n  min-width: 100px;\\n}\\n.hearts-container__play-ground .score-board-header,\\n.hearts-container__play-ground .score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__play-ground .score-board-header div:nth-child(n+2),\\n.hearts-container__play-ground .score-board-row div:nth-child(n+2) {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__play-ground .score-board-header div {\\n  height: 36px;\\n}\\n.hearts-container__play-ground .score-board-header div,\\n.hearts-container__play-ground .score-board-row div {\\n  width: 80px;\\n  padding: 4px 8px;\\n  text-align: center;\\n}\\n.hearts-container__history {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n  background-color: var(--primary-lighter-color);\\n}\\n.hearts-container__history .history-score-board-header-name {\\n  height: 36px;\\n}\\n.hearts-container__history .history-score-board-header,\\n.hearts-container__history .history-score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__history .history-score-board-header div:nth-child(n+2).history-score-board-col,\\n.hearts-container__history .history-score-board-row div:nth-child(n+2).history-score-board-col {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__history .history-score-board-col {\\n  width: 60px;\\n  padding: 4px 8px;\\n}\\n.hearts-container__history .history-score-board-col-height {\\n  height: 56px;\\n}\\n.hearts-container__history .history-card-size {\\n  width: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, ElementRef } from '@angular/core';\r\nimport { Suit } from '../../table-parts/suit/suit';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { HeartsPlayer } from '../../table-parts/player/hearts-player';\r\nimport { HeartsTable } from '../../table-parts/table/hearts-table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HeartsService } from './hearts.service';\r\nimport { TurnHistoryRow } from 'src/app/interfaces/turn-history-row.interface';\r\nimport { SortedCards } from 'src/app/interfaces/sorted-cards.interface';\r\nimport { suits } from 'src/app/table-parts/suit/suits';\r\nimport { clubTwo, isSpecificCard, isSpecificCardIncluded, nullCard, spadeQueen } from 'src/app/table-parts/card/cards';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'app-hearts',\r\n  templateUrl: 'hearts.component.html',\r\n  styleUrls: ['hearts.component.scss'],\r\n})\r\nexport class HeartsComponent {\r\n\r\n  /* TODO's\r\n  * game init-ben nem kell új asztal és a játékosok neve és száma sem változik\r\n  * megtanítani, hogy fogja meg a hot tricket\r\n  */\r\n\r\n  private readonly imgUrlPrefix = 'assets/images/';\r\n  private readonly imgUrlSuffix = '.svg';\r\n  private readonly defaultMsg = { type: '', msg: ' ', subMsg: ' ', translateParams: {} };\r\n  private readonly deckSize = 52;\r\n  private readonly playerNames: string[] = ['West', 'North', 'East'];\r\n  private readonly nrOfPlayers = 4;\r\n  private readonly swapDirections = [0, 1, 3, 2];\r\n\r\n  public placeholderCardImgUrl = `${this.imgUrlPrefix}card_placeholder${this.imgUrlSuffix}`;\r\n  public cardBackImgUrl = `${this.imgUrlPrefix}card_back_2${this.imgUrlSuffix}`;\r\n  public swapDirectionImgUrl = `${this.imgUrlPrefix}arrow_0${this.imgUrlSuffix}`;\r\n  public players: HeartsPlayer[] = [];\r\n  public cardUrls: string[] = [];\r\n  public myCardUrl = this.placeholderCardImgUrl;\r\n\r\n  public allMessage = this.defaultMsg;\r\n  public history: TurnHistoryRow[] = [];\r\n  public myTable = new HeartsTable(this.nrOfPlayers);\r\n  public round: number;\r\n\r\n  public endOfGame = true;\r\n  public endOfRound = true;\r\n  public endOf3CardsSelection = true;\r\n  public selectedCardsToSwap: Card[] = [];\r\n  public endOfSelection = true;\r\n\r\n  private playerName = history.state.data?.playerName;\r\n\r\n  private swapDirectionIdx: number;\r\n  private lastPlayerIdx: number;\r\n  private playerIdx: number;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private translate: TranslateService,\r\n    private heartsService: HeartsService,\r\n  ) {\r\n    this.leaveGame();\r\n  }\r\n\r\n  convertCardToImgUrl(card: Card) {\r\n    return `${this.imgUrlPrefix}${card.printCard()}${this.imgUrlSuffix}`;\r\n  }\r\n\r\n  leaveGame() {\r\n    this.myCardUrl = this.placeholderCardImgUrl;\r\n    this.allMessage = this.defaultMsg;\r\n    this.endOfGame = true;\r\n    this.endOfRound = true;\r\n    this.endOf3CardsSelection = true;\r\n    this.endOfSelection = true;\r\n    this.initGame();\r\n  }\r\n\r\n  newGame() {\r\n    this.endOfGame = false;\r\n    this.initGame();\r\n    this.newRound();\r\n  }\r\n\r\n  newRound() {\r\n    this.round += 1;\r\n    this.myTable.resetHeartsBroken();\r\n    this.endOfRound = false;\r\n    this.selectedCardsToSwap = [];\r\n    this.swapDirectionIdx = this.round % 4;\r\n    this.swapDirectionImgUrl = `${this.imgUrlPrefix}arrow_${this.swapDirectionIdx}${this.imgUrlSuffix}`;\r\n\r\n    this.showTableCards();\r\n\r\n    // pont számlálók beállítása\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const player = this.players[i];\r\n      player.resetReal();\r\n    }\r\n\r\n    // az összes kártya kiosztása a négy játékos között\r\n    let playerIdx = 0;\r\n    for (let i = 0; i < this.deckSize; ++i) {\r\n      playerIdx = i % 4;\r\n      this.myTable.getPlayer(playerIdx).addCard(this.myTable.getCardFromDeck());\r\n    }\r\n    // kártyák sorba rendezése\r\n    this.myTable.getPlayer(0).sortPlayerCards();\r\n\r\n    // 3 kártya választása cseréhez\r\n    if (this.swapDirectionIdx) {\r\n      this.select3CardToSwap();\r\n    } else {\r\n      this.endOf3CardsSelection = false;\r\n      for (let i = 0; i < 3; i++) {\r\n        this.selectedCardsToSwap.push(nullCard);\r\n      }\r\n      this.allMessage = {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.NO_SWAP',\r\n        subMsg: ' ',\r\n        translateParams: {}\r\n      };\r\n    }\r\n  }\r\n\r\n  swapCards() {\r\n    this.endOf3CardsSelection = true;\r\n    if (this.swapDirectionIdx) {\r\n      for (let i = 0; i < this.selectedCardsToSwap.length; i++) {\r\n        this.heartsService.moveToSwap(this.myTable.getPlayer(0), this.selectedCardsToSwap[i]);\r\n      }\r\n      const swapDirection = this.swapDirections[this.swapDirectionIdx];\r\n\r\n      // kiválasztott kártyák cseréje\r\n      for (let i = 0; i < this.nrOfPlayers; i++) {\r\n        const playerWhoGive = this.myTable.getPlayer(i);\r\n        const playerWhoRecieves = this.myTable.getPlayer((i + swapDirection) % 4);\r\n        const cardsOfPlayerWhoGive = playerWhoGive.getCardsToSwap();\r\n        for (let j = 0; j < cardsOfPlayerWhoGive.length; j++) {\r\n          const cardToGive = cardsOfPlayerWhoGive[j];\r\n          playerWhoRecieves.addCard(cardToGive);\r\n        }\r\n      }\r\n\r\n      // kártyák sorba rendezése\r\n      this.myTable.getPlayer(0).sortPlayerCards();\r\n    }\r\n    this.selectedCardsToSwap = [];\r\n\r\n    this.setStarterAndPlayTurn();\r\n  }\r\n\r\n  checkSelectedCard(\r\n    playerIsStarter: boolean,\r\n    selectedCard: Card,\r\n    playerCards: SortedCards,\r\n    playerCardsLength: number,\r\n    firstCardSuit: number\r\n  ): { isSelectedValid: boolean, hasFirstCardSuit?: boolean, invalidSuitSelection?: string } {\r\n    const selectedCardSuit = selectedCard.getSuit();\r\n    const isOnlyHearts = playerCards.hearts.length === playerCardsLength;\r\n    const isOnlyHeartsAndSpadeQueen =\r\n      playerCards.hearts.length === (playerCardsLength - 1) && isSpecificCardIncluded(playerCards.spades, spadeQueen);\r\n    const heartsAndSpadeQueenException = isOnlyHearts || (isOnlyHeartsAndSpadeQueen && isSpecificCard(selectedCard, spadeQueen));\r\n    const notHeartsOrSpadeQueenSelected = selectedCardSuit !== Suit.HEART && !isSpecificCard(selectedCard, spadeQueen);\r\n    const clubTwoselected = (playerCardsLength === 13 && isSpecificCard(selectedCard, clubTwo));\r\n\r\n    if (playerIsStarter) {\r\n      if (playerIsStarter\r\n        && (clubTwoselected\r\n          || (playerCardsLength < 13\r\n            && (this.myTable.isHeartsBroken()\r\n              || (!this.myTable.isHeartsBroken() && (notHeartsOrSpadeQueenSelected || heartsAndSpadeQueenException)))))) {\r\n        return { isSelectedValid: true };\r\n      }\r\n\r\n      if (playerCardsLength === 13 && !clubTwoselected) {\r\n        return { isSelectedValid: false, hasFirstCardSuit: false, invalidSuitSelection: 'clubTwo' };\r\n      }\r\n    } else {\r\n      const openSuit = suits[firstCardSuit - 1];\r\n      const hasFirstCardSuit = playerCards[openSuit].length;\r\n      // ha kezdő szín lett választva\r\n      if (selectedCardSuit === firstCardSuit\r\n        // vagy nincs kezdő színű kártyája és nem szív színű kártya vagy pikk dáma lett választva\r\n        || !hasFirstCardSuit && notHeartsOrSpadeQueenSelected\r\n        // vagy csak szív színű kártyák vannak vagy 12 szív színű kártya és a pikk Q, ilyenkor pikk Q-t kell választani\r\n        || heartsAndSpadeQueenException\r\n        // vagy nincs kezdő színű kártyája és nem az első kör van\r\n        || !hasFirstCardSuit && playerCardsLength < 13) {\r\n        return { isSelectedValid: true };\r\n      }\r\n\r\n      if (hasFirstCardSuit && selectedCardSuit !== firstCardSuit) {\r\n        return { isSelectedValid: false, hasFirstCardSuit };\r\n      }\r\n    }\r\n\r\n    if (selectedCardSuit === Suit.HEART || isSpecificCard(selectedCard, spadeQueen)) {\r\n      return { isSelectedValid: false, hasFirstCardSuit: false, invalidSuitSelection: 'hearts' };\r\n    }\r\n\r\n    return { isSelectedValid: true };\r\n  }\r\n\r\n  selectedCard(selectedCard: Card) {\r\n    if (!this.endOfSelection) {\r\n      const player = this.myTable.getPlayer(0);\r\n      const playerCards = player.getSortedCards();\r\n      const playerCardsLength = player.getSortedCardsLength();\r\n      const firstCardSuit = this.myTable.getFirstCard().getSuit();\r\n      const checkedCards = this.checkSelectedCard(player.isStarter(), selectedCard, playerCards, playerCardsLength, firstCardSuit);\r\n      if (checkedCards.isSelectedValid) {\r\n        this.myTable.getPlayer(0).removeCard(selectedCard);\r\n        this.myTable.putCardOnTable(0, selectedCard);\r\n        this.handleRound();\r\n        this.setPlayersTurn();\r\n        this.endOfSelection = true;\r\n        this.allMessage = this.defaultMsg;\r\n      } else {\r\n        if (checkedCards.hasFirstCardSuit) {\r\n          const suitNames = ['CLUB', 'DIAMOND', 'HEART', 'SPADE'];\r\n          this.translate.get(suitNames[firstCardSuit - 1])\r\n            .subscribe((translation) => {\r\n              this.allMessage = {\r\n                type: 'error',\r\n                msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n                subMsg: 'MY_CARDS_PANEL.MESSAGES.SELECT_FIRST_CARD_SUIT',\r\n                translateParams: { suit: translation }\r\n              };\r\n            });\r\n        } else if (checkedCards.invalidSuitSelection) {\r\n          if (checkedCards.invalidSuitSelection === 'clubTwo') {\r\n            this.allMessage = {\r\n              type: 'error',\r\n              msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n              subMsg: 'MY_CARDS_PANEL.MESSAGES.START_WITH_CLUB_TWO',\r\n              translateParams: {}\r\n            };\r\n          } else if (checkedCards.invalidSuitSelection === 'hearts') {\r\n            this.allMessage = {\r\n              type: 'error',\r\n              msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n              subMsg: 'MY_CARDS_PANEL.MESSAGES.HEARTS_NOT_BROKEN',\r\n              translateParams: {}\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!this.endOf3CardsSelection && this.swapDirectionIdx) {\r\n      const alreadySelectedToSwap = this.selectedCardsToSwap.includes(selectedCard);\r\n      if (alreadySelectedToSwap) {\r\n        this.selectedCardsToSwap =\r\n          this.selectedCardsToSwap.filter((selectedCardToSwap) => selectedCardToSwap !== selectedCard);\r\n          this.toggleSelectedCard(selectedCard);\r\n      } else if (!alreadySelectedToSwap && this.selectedCardsToSwap.length < 3) {\r\n        this.selectedCardsToSwap.push(selectedCard);\r\n        this.toggleSelectedCard(selectedCard);\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmStand() {\r\n    this.endOfSelection = false;\r\n    if (this.myTable.getPlayer(0).hasCard()) {\r\n      this.showTableCards();\r\n      this.askPlayerToSelectCard();\r\n    }\r\n    if (!this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      this.setScore();\r\n      let isScoreLimit = false;\r\n      for (let i = 0; !isScoreLimit && i < this.nrOfPlayers; ++i) {\r\n        isScoreLimit = this.myTable.getPlayer(i).getScore() > 99;\r\n      }\r\n      this.addToHistory();\r\n      this.endOfSelection = true;\r\n      this.endOfRound = true;\r\n      this.shuffle();\r\n      if (isScoreLimit) {\r\n        this.endOfGame = true;\r\n        this.findWinner();\r\n      }\r\n    }\r\n  }\r\n\r\n  private initGame() {\r\n    this.cardUrls = [];\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      this.cardUrls[i] = this.placeholderCardImgUrl;\r\n    }\r\n    if (this.playerName) {\r\n      this.myTable.getPlayer(0).setName(this.playerName);\r\n    }\r\n    for (let i = 1; i < this.nrOfPlayers; ++i) {\r\n      this.myTable.getPlayer(i).setName(this.playerNames[i - 1]);\r\n    }\r\n    this.players = this.myTable.getPlayers();\r\n    // pont számlálók beállítása\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const player = this.players[i];\r\n      player.resetScore();\r\n      player.resetReal();\r\n    }\r\n    this.round = 0;\r\n    this.swapDirectionIdx = 1;\r\n    this.swapDirectionImgUrl = `${this.imgUrlPrefix}arrow_${this.swapDirectionIdx}${this.imgUrlSuffix}`;\r\n    this.history = [];\r\n  }\r\n\r\n  private shuffle() {\r\n    this.myTable.shuffleDeck();\r\n  }\r\n\r\n  private setPlayersCardsToSwap() {\r\n    for (let i = 1; i < this.nrOfPlayers; ++i) {\r\n      this.heartsService.select3CardToSwap(this.myTable.getPlayer(i));\r\n    }\r\n  }\r\n\r\n  private askPlayerToSelect3CardsToSwap() {\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_3_CARD_TO_SWAP',\r\n      subMsg: ' ',\r\n      translateParams: {}\r\n    };\r\n  }\r\n\r\n  private select3CardToSwap() {\r\n      this.endOf3CardsSelection = false;\r\n      this.setPlayersCardsToSwap();\r\n      this.askPlayerToSelect3CardsToSwap();\r\n  }\r\n\r\n  private toggleSelectedCard(card: Card) {\r\n    const selectedCardImg = this.element.nativeElement.querySelector(`#my-card-${card.printCard()}`);\r\n    selectedCardImg.classList.toggle('lifted');\r\n  }\r\n\r\n  private handleRound() {\r\n    // ha pont annyi kártya van lent ahány játékos, akkor ebben a körben mindenki letette a lapját\r\n    if (this.myTable.nrOfCardsOnTable() === this.nrOfPlayers) {\r\n      const starterIdx = (this.playerIdx + 1) % this.nrOfPlayers;\r\n      this.showTableCards();\r\n      // aki viszi a kört, az lesz a kezdő\r\n      this.playerIdx = this.myTable.findTurnTaker();\r\n      this.myTable.getPlayer(this.playerIdx).addReal(this.myTable.getCardPoints());\r\n      this.addToHistory(true, starterIdx);\r\n      this.myTable.removeCardsFromTable();\r\n      this.myTable.setStarterAndLastPlayer(this.playerIdx);\r\n      this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    } else {\r\n      ++this.playerIdx;\r\n      this.playerIdx %= this.nrOfPlayers;\r\n    }\r\n  }\r\n\r\n  private setPlayersTurn() {\r\n    while (this.playerIdx !== 0 && this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      // ha a játékosnak több kártyája van\r\n      if (this.myTable.getPlayer(this.playerIdx).getCards().length > 1) {\r\n        const selectedCard = this.heartsService.selectCardAI(this.myTable, this.playerIdx);\r\n        console.log(this.myTable, this.playerIdx, selectedCard);\r\n        this.myTable.getPlayer(this.playerIdx).removeCard(selectedCard);\r\n        this.myTable.putCardOnTable(this.playerIdx, selectedCard);\r\n      } else {\r\n        // ha a játékosnak csak egy kártyája maradt, akkor azt azonnal leteszi\r\n        this.myTable.putCardOnTable(\r\n          this.playerIdx,\r\n          this.myTable.getPlayer(this.playerIdx).removeCardByIdx(0) // TODO: removeLastCard()\r\n        );\r\n      }\r\n      this.handleRound();\r\n    }\r\n  }\r\n\r\n  private askPlayerToSelectCard() {\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_CARD',\r\n      subMsg: ' ',\r\n      translateParams: {}\r\n    };\r\n  }\r\n\r\n  private playTurn() {\r\n    this.endOfSelection = false;\r\n    this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    for (let i = 1; i < this.nrOfPlayers; i++) {\r\n      const player = this.myTable.getPlayer(i);\r\n      const playerCards = cloneDeep(player.getSortedCards());\r\n      console.log(player.getName(), playerCards);\r\n    }\r\n    if (this.playerIdx !== 0) {\r\n      this.setPlayersTurn();\r\n    }\r\n    this.showTableCards();\r\n    this.askPlayerToSelectCard();\r\n  }\r\n\r\n  private setStarterAndPlayTurn() {\r\n    // kezdő kiválasztása\r\n    let hasPlayerClub2 = false;\r\n    for (let i = 0; !hasPlayerClub2 && i < this.nrOfPlayers; i++) {\r\n      const player = this.myTable.getPlayer(i);\r\n      hasPlayerClub2 = !!player.getSortedCards().clubs.filter((card) => card.getRank() === 2).length;\r\n      if (hasPlayerClub2) {\r\n        player.setStarter(true);\r\n        this.playerIdx = i;\r\n      }\r\n    }\r\n\r\n    this.myTable.setStarterAndLastPlayer(this.playerIdx);\r\n\r\n    this.playTurn();\r\n  }\r\n\r\n  private showTableCards() {\r\n    const cardsOnTable = this.myTable.checkCardSlotsOnTable();\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      if (i === 0) {\r\n        this.myCardUrl = cardsOnTable[0]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[0])\r\n          : this.placeholderCardImgUrl;\r\n      } else {\r\n        this.cardUrls[i] = cardsOnTable[i]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[i])\r\n          : this.placeholderCardImgUrl;\r\n      }\r\n    }\r\n  }\r\n\r\n  private addToHistory(isCardRow = false, starterIdx = 0) {\r\n    const trunStarter = this.myTable.getPlayer(starterIdx);\r\n    let cardUrls: string[] = [];\r\n    if (isCardRow) {\r\n      cardUrls = cloneDeep(this.cardUrls);\r\n      cardUrls.splice(0, 1, this.convertCardToImgUrl(this.myTable.checkCardSlotsOnTable()[0]));\r\n    }\r\n\r\n    this.history.push({\r\n      isCardRow,\r\n      cardRow: isCardRow\r\n        ? {\r\n          turnPerRound: `${13 - trunStarter.getSortedCardsLength()}/${this.round}`,\r\n          trunStarter: trunStarter.getName(),\r\n          cardUrls: cardUrls,\r\n          turnTaker: this.myTable.getPlayer(this.playerIdx).getName(),\r\n        }\r\n        : {},\r\n      scoreRow: isCardRow\r\n        ? {}\r\n        : {\r\n          players: cloneDeep(this.myTable.getPlayers())\r\n        }\r\n    });\r\n  }\r\n\r\n  private setScore() {\r\n    // pont számlálók beállítása\r\n    let hotTrickByPlayerIdx = -1;\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const player = this.myTable.getPlayer(i);\r\n      if (player.getReal() === 26) {\r\n        hotTrickByPlayerIdx = i;\r\n      }\r\n    }\r\n    if (hotTrickByPlayerIdx === -1) {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        const player = this.myTable.getPlayer(i);\r\n        player.setScore();\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        const player = this.myTable.getPlayer(i);\r\n        player.resetReal();\r\n        if (hotTrickByPlayerIdx !== i) {\r\n          player.addReal(26);\r\n        }\r\n        player.setScore();\r\n      }\r\n    }\r\n  }\r\n\r\n  private findWinner() {\r\n    const players = this.myTable.getPlayers();\r\n    let winnerIdx = 0;\r\n    let winner = players[winnerIdx];\r\n    for (let i = 1; i < players.length; i++) {\r\n      if (players[i].getScore() < winner.getScore()) {\r\n        winner = players[i];\r\n        winnerIdx = i;\r\n      }\r\n    }\r\n\r\n    this.allMessage = winnerIdx === 0\r\n      ? {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.YOU_WON',\r\n        subMsg: ' ',\r\n        translateParams: {}\r\n      }\r\n      : {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.ANOTHER_WON',\r\n        subMsg: ' ',\r\n        translateParams: { winner: winner.getName() }\r\n      };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NrOfSuits } from 'src/app/interfaces/nr-of-suits.interface';\r\nimport { SortedCards } from 'src/app/interfaces/sorted-cards.interface';\r\nimport {\r\n  clubTwo,\r\n  isSpecificCard,\r\n  isSpecificCardIncluded,\r\n  nullCard,\r\n  spadeAce,\r\n  spadeKing,\r\n  spadeQueen\r\n} from 'src/app/table-parts/card/cards';\r\nimport { Suit } from 'src/app/table-parts/suit/suit';\r\nimport { suits } from 'src/app/table-parts/suit/suits';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { HeartsPlayer } from '../../table-parts/player/hearts-player';\r\nimport { HeartsTable } from '../../table-parts/table/hearts-table';\r\n\r\n@Injectable()\r\nexport class HeartsService {\r\n\r\n  private readonly suitSwapPriority = [suits[2], suits[0], suits[1], suits[3]];\r\n  private readonly throwOutPriority = [suits[2], suits[3], suits[1], suits[0]];\r\n\r\n  constructor() {}\r\n\r\n  moveToSwap (player: HeartsPlayer, cardToSwap: Card) {\r\n    player.removeCard(cardToSwap);\r\n    player.addCardToSwap(cardToSwap);\r\n  }\r\n\r\n  select3CardToSwap(player: HeartsPlayer) {\r\n    const playerCards: SortedCards = player.getSortedCards();\r\n    const takeAllStrategy = this.chooseTakeAllStrategy(playerCards);\r\n\r\n    if (takeAllStrategy) {\r\n      player.setStartegyTakeAll(true);\r\n\r\n      this.chooseLowCardsToSwap(player, playerCards);\r\n    } else {\r\n      this.chooseHighCardsToSwap(player, playerCards);\r\n    }\r\n  }\r\n\r\n  selectCardAI(myTable: HeartsTable, playerIdx: number): Card {\r\n    const players = myTable.getPlayers();\r\n    const cardsOnTable = myTable.checkCardsOnTable();\r\n    const pointCardsOnTable = cardsOnTable.filter((card) => {\r\n      return card.getSuit() === Suit.HEART || isSpecificCard(card, spadeQueen);\r\n    });\r\n    const player = myTable.getPlayer(playerIdx);\r\n    const playerCards = player.getSortedCards();\r\n    const clubs = playerCards.clubs;\r\n    const clubsLength = playerCards.clubs.length;\r\n    const diamonds = playerCards.diamonds;\r\n    const diamondsLength = playerCards.diamonds.length;\r\n    const spades = playerCards.spades;\r\n    const spadesLength = playerCards.spades.length;\r\n    const hearts = playerCards.hearts;\r\n    const heartsLength = playerCards.hearts.length;\r\n    const sortedCardsLength = player.getSortedCardsLength();\r\n    const hasSpadeQueen = spadesLength ? isSpecificCardIncluded(spades, spadeQueen) : false;\r\n    const haveOthersPoints = this.checkOthersPoints(players, playerIdx);\r\n    const isStrategyTakeAll = this.checkStartegyTakeAll(player, haveOthersPoints);\r\n    let selectedCard = nullCard;\r\n\r\n    // ha első kör van\r\n    if (sortedCardsLength === 13) {\r\n      if (player.isStarter()) {\r\n        selectedCard = clubTwo;\r\n      } else {\r\n        // ha van treff\r\n        if (clubsLength) {\r\n          selectedCard = isStrategyTakeAll ? clubs[0] : clubs[clubsLength - 1];\r\n        // ha mindent vinni akar\r\n        } else if (isStrategyTakeAll) {\r\n          // ha van káró és pikkből kisebb mint pikk Q válassza a legkisebb kárót vagy pikket\r\n          if (diamondsLength && spadesLength && spades[0].getRank() < spadeQueen.getRank()) {\r\n            const firstDiamond = diamonds[0];\r\n            const firstSpade = spades[0];\r\n            selectedCard = firstDiamond.getRank() <= firstSpade.getRank()\r\n              ? firstDiamond\r\n              : firstSpade;\r\n          // ha van káró válassza a legkisebbet\r\n          } else if (diamondsLength) {\r\n            selectedCard = diamonds[0];\r\n          // ha csak pikk van válassza a legkisebbet a pikk Q-án kívül vagy ha csak a pikk Q van akkor azt\r\n          } else if (spadesLength) {\r\n            const lastSpade = spades[0];\r\n            selectedCard = isSpecificCard(selectedCard, lastSpade)\r\n              ? spadesLength > 1\r\n                ? spades[1]\r\n                : lastSpade\r\n              : lastSpade;\r\n          // ha csak szív van akkor a legnagyobbat (alig van esély erre az esetre és itt biztosan nem is fog vinni semmit)\r\n          } else {\r\n            selectedCard = hearts[heartsLength - 1];\r\n          }\r\n        // ha nincs treff és nem akar mindent vinni\r\n        } else {\r\n          const lastSpade = spadesLength ? spades[spadesLength - 1] : nullCard;\r\n          const isSpadeObligatory = !diamondsLength && lastSpade.getRank() > 0;\r\n          // ha kötelező pikket tenni (nincs káró) válassza a legnagyobbat, vagy ha van nála nagyobb, mint pikk Q\r\n          if (isSpadeObligatory || (!hasSpadeQueen && lastSpade.getRank() > spadeQueen.getRank())) {\r\n            selectedCard = isSpecificCard(selectedCard, lastSpade)\r\n              ? spadesLength > 1\r\n                ? spades[spadesLength - 2]\r\n                : lastSpade\r\n              : lastSpade;\r\n          // ha van káró válassza a legnagyobbat\r\n          } else if (diamondsLength) {\r\n            selectedCard = diamonds[diamondsLength - 1];\r\n          // ha csak szív van akkor a legnagyobbat (alig van esély erre az esetre és itt biztosan nem is fog vinni semmit)\r\n          } else {\r\n            selectedCard = hearts[heartsLength - 1];\r\n          }\r\n        }\r\n      }\r\n    // ha nem az első kör van\r\n    } else {\r\n      let firstCard = nullCard;\r\n      let openSuit = '';\r\n      let suitsFromOpenSuit: Card[] = [];\r\n      let lastCardFromOpenSuit = nullCard;\r\n      let suitsOnTable: Card[] = [];\r\n      // az asztalon lévő legnagyobb kártya értéke az adott színben\r\n      let highestCardRankOnTable = 0;\r\n      if (!myTable.isTableEmpty()) {\r\n        firstCard = myTable.getFirstCard();\r\n        openSuit = suits[firstCard.getSuit() - 1];\r\n        suitsFromOpenSuit = playerCards[openSuit];\r\n        lastCardFromOpenSuit = suitsFromOpenSuit[suitsFromOpenSuit.length - 1];\r\n        suitsOnTable = cardsOnTable.filter((card) => card.getSuit() === firstCard.getSuit())\r\n          .sort((a, b) => (a.getRank() > b.getRank()) ? 1 : -1);\r\n        highestCardRankOnTable = suitsOnTable[suitsOnTable.length - 1].getRank();\r\n      }\r\n\r\n      // ha mindent akar vinni\r\n      if (isStrategyTakeAll) {\r\n        // ha a játékos kezdő\r\n        if (player.isStarter()) {\r\n          if (hasSpadeQueen) {\r\n            selectedCard = spadeQueen;\r\n          } else {\r\n            selectedCard = player.findHighestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART, Suit.SPADE]);\r\n            /* if (heartsLength) {\r\n              selectedCard = hearts[heartsLength - 1];\r\n            } else {\r\n              selectedCard = player.findHighestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.SPADE]);\r\n            } */\r\n          }\r\n        // ha a játékos nem kezdő\r\n        } else {\r\n          // ha van a nyitó színben lapja\r\n          if (suitsFromOpenSuit.length) {\r\n            if (player.isLast()) {\r\n              selectedCard = this.findHigherThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable);\r\n            } else {\r\n              selectedCard = lastCardFromOpenSuit;\r\n            }\r\n          // ha nincs a nyitó színben lapja\r\n          } else {\r\n            if (pointCardsOnTable && (hasSpadeQueen || heartsLength)) {\r\n              selectedCard = hasSpadeQueen\r\n                ? spadeQueen\r\n                : hearts[heartsLength - 1];\r\n              player.setStartegyTakeAll(false);\r\n            } else {\r\n              if (clubsLength || diamondsLength) {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND]);\r\n              } else if (spadesLength) {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.SPADE]);\r\n                if (isSpecificCard(selectedCard, spadeQueen)) {\r\n                  player.setStartegyTakeAll(false);\r\n                }\r\n              } else {\r\n                selectedCard = hearts[heartsLength - 1];\r\n                player.setStartegyTakeAll(false);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      // ha nem akar mindent vinni\r\n      } else {\r\n        // ha nála van a pikk Q\r\n        if (hasSpadeQueen) {\r\n          // ha a játékos kezdő\r\n          if (player.isStarter()) {\r\n            if (spadesLength !== sortedCardsLength) {\r\n              if (!myTable.isHeartsBroken()) {\r\n                // ha van pikken kívüli színe, akkor nyisson a legkisebb értékű lapjával\r\n                if (clubsLength || diamondsLength) {\r\n                  selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND]);\r\n                // ha csak pikk és szívszínű kártyák maradtak\r\n                } else if (spadesLength > 1) {\r\n                  selectedCard = isSpecificCard(spades[0], spadeQueen)\r\n                    ? spades[1]\r\n                    : spades[0];\r\n                } else if (spadesLength === 1) {\r\n                  selectedCard = spadeQueen;\r\n                } else {\r\n                  selectedCard = hearts[0];\r\n                }\r\n              } else {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART]);\r\n              }\r\n            } else {\r\n              selectedCard = spadesLength > 1 && isSpecificCard(spades[0], spadeQueen)\r\n                ? spades[1]\r\n                : spades[0];\r\n            }\r\n          // ha a játékos nem kezdő\r\n          } else {\r\n            // ha nincs a nyitó színben lapja és nem pikk a kezdő szín\r\n            // vagy a pikk K,A ki lett játszva,\r\n            // vagy pikk a kezdő szín és csak pikk Q van nála, akkor pikk Q-t tesz\r\n            if (!suitsFromOpenSuit.length\r\n              || isSpecificCardIncluded(cardsOnTable, spadeAce)\r\n              || isSpecificCardIncluded(cardsOnTable, spadeKing)\r\n              || firstCard.getSuit() === Suit.SPADE && spadesLength === 1) {\r\n              selectedCard = spadeQueen;\r\n            // ha pikk a kezdő szín és minimum kettő van,\r\n            // és van benne pont, válassza azasztalon lévő legnagyobbtól számított első kisebbet (de ne a pikk Q-t)\r\n            // vagy nincs benne pont és válassza a legnagyobbat (de ne a pikk Q-t),\r\n            } else if (firstCard.getSuit() === Suit.SPADE && spadesLength > 1) {\r\n              selectedCard = pointCardsOnTable.length\r\n                ? this.findLowerThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable)\r\n                : isSpecificCard(lastCardFromOpenSuit, spadeQueen)\r\n                  ? spades[spadesLength - 2]\r\n                  : lastCardFromOpenSuit;\r\n            // ha van a nyitó színben lapja és nem pikk a kezdő szín\r\n            } else if (suitsFromOpenSuit.length) {\r\n              selectedCard = this.selectOpenSuitCard(\r\n                !!pointCardsOnTable.length,\r\n                highestCardRankOnTable,\r\n                suitsFromOpenSuit,\r\n                lastCardFromOpenSuit,\r\n                player.isLast()\r\n              );\r\n            }\r\n          }\r\n        // ha nincs nála a pikk Q\r\n        } else {\r\n          // ha kezdő nyisson a legkisebbel vagy ha még nincs pikk Q akkor attól kisebb pikkel\r\n          if (player.isStarter()) {\r\n            const spadeHighs = (isSpecificCardIncluded(spades, spadeKing) ? 1 : 0) + (isSpecificCardIncluded(spades, spadeAce) ? 1 : 0);\r\n            // ha a pikk Q még nincs kijátszva és van kisebb pikkje\r\n            if (!myTable.isSpadeQueenOut() && ((spadesLength - spadeHighs) > 1)) {\r\n              selectedCard = this.findLowerThanOpenSuitCard(spades, spades[spadesLength - 1], spadeQueen.getRank());\r\n            // ha a pikk Q kijátszva vagy nincs csak nagyobb pikkje, akkor nyisson a legkisebb értékű lapjával\r\n            } else  {\r\n              if (!myTable.isHeartsBroken()) {\r\n                // ha van pikken kívüli színe, akkor nyisson a legkisebb értékű lapjával\r\n                if (clubsLength || diamondsLength) {\r\n                  selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND]);\r\n                // ha csak pikk és szívszínű kártyák maradtak\r\n                } else if (spadesLength > 1) {\r\n                  selectedCard = spades[0];\r\n                } else {\r\n                  selectedCard = hearts[0];\r\n                }\r\n              } else {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART, Suit.SPADE]);\r\n              }\r\n            }\r\n          // ha a játékos nem kezdő\r\n          } else {\r\n            // ha van a nyitó színben lapja\r\n            if (suitsFromOpenSuit.length) {\r\n              selectedCard = this.selectOpenSuitCard(\r\n                !!pointCardsOnTable.length,\r\n                highestCardRankOnTable,\r\n                suitsFromOpenSuit,\r\n                lastCardFromOpenSuit,\r\n                player.isLast()\r\n              );\r\n            // ha nincs a nyitó színben lapja\r\n            } else {\r\n              // tehet pikk K,A-t, legnagyobb szívet, legnagyobb színt\r\n              if (isSpecificCardIncluded(spades, spadeAce)) {\r\n                selectedCard = spadeAce;\r\n              } else if (isSpecificCardIncluded(spades, spadeKing)) {\r\n                selectedCard = spadeKing;\r\n              } else {\r\n                for (let i = 0; selectedCard === nullCard && i < this.throwOutPriority.length; i++) {\r\n                  const suit = this.throwOutPriority[i];\r\n                  const suitCards = playerCards[suit];\r\n                  const suitCardsLength = suitCards.length;\r\n\r\n                  if (suitCardsLength) {\r\n                    selectedCard = suitCards[suitCardsLength - 1];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (selectedCard === nullCard) {\r\n      console.error(`${player.getName()} did not select any card!`);\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n\r\n  private checkOthersPoints(players: HeartsPlayer[], playerIdx: number): boolean {\r\n    let allOthersPointsInTurn = 0;\r\n    for (let i = 0; i < players.length; i++) {\r\n      if (i !== playerIdx) {\r\n        const playerPointsInTurn = players[i].getReal();\r\n        if (playerPointsInTurn) {\r\n          allOthersPointsInTurn += playerPointsInTurn;\r\n        }\r\n      }\r\n    }\r\n\r\n    return !!allOthersPointsInTurn;\r\n  }\r\n\r\n  private checkStartegyTakeAll(player: HeartsPlayer, haveOthersPoints: boolean): boolean {\r\n    let isStrategyTakeAll = player.isStartegyTakeAll();\r\n    if (haveOthersPoints) {\r\n      isStrategyTakeAll = false;\r\n      player.setStartegyTakeAll(false);\r\n    } else if (player.getReal() >= 13) {\r\n      isStrategyTakeAll = true;\r\n      player.setStartegyTakeAll(true);\r\n    }\r\n\r\n    return isStrategyTakeAll;\r\n  }\r\n\r\n  private hasAllHeartHighCards(hearts: Card[]): boolean {\r\n    if (hearts.length < 4) {\r\n      return false;\r\n    }\r\n\r\n    // ha szívből megvan a J,Q,K,A\r\n    return hearts[hearts.length - 1].getRank() === 14\r\n      && hearts[hearts.length - 2].getRank() === 13\r\n      && hearts[hearts.length - 3].getRank() === 12\r\n      && hearts[hearts.length - 4].getRank() === 11;\r\n  }\r\n\r\n  // ha megvan a pikk Q és a szív J,Q,K,A, akkor próbálhat all in-re menni\r\n  private chooseTakeAllStrategy(playerCards: SortedCards): boolean {\r\n    const spades = playerCards.spades;\r\n    const spadesLength = spades.length;\r\n    const hasSpadeQueen = spadesLength ? isSpecificCardIncluded(spades, spadeQueen) : false;\r\n\r\n    return hasSpadeQueen\r\n      ? this.hasAllHeartHighCards(playerCards.hearts)\r\n      : false;\r\n  }\r\n\r\n  private swapLowestCards(player: HeartsPlayer, remainNrOfSuitsToSwap: number, suitsToSwap: number[]) {\r\n    for (let i = 0; i < remainNrOfSuitsToSwap; i++) {\r\n      const lowestCard = player.findLowestCardInSortedCards(suitsToSwap);\r\n      this.moveToSwap(player, lowestCard);\r\n    }\r\n  }\r\n\r\n  // kiválogatja a legkisebb lapokat, amiket el kell dobni\r\n  private chooseLowCardsToSwap(player: HeartsPlayer, playerCards: SortedCards) {\r\n    const clubsLength = playerCards.clubs.length;\r\n    const diamondsLength = playerCards.diamonds.length;\r\n    const spadesLength = playerCards.spades.length;\r\n    const hearts = playerCards.hearts;\r\n    const heartsLength = playerCards.hearts.length;\r\n\r\n    let nrOfHeartsToSwap = 0;\r\n    if (heartsLength < 8) {\r\n      for (let i = 0; i < hearts.length - 3; i++) {\r\n        if (hearts[i].getRank() < 9) {\r\n          nrOfHeartsToSwap += 1;\r\n        }\r\n      }\r\n    }\r\n    let remainNrOfSuitsToSwap = 3;\r\n\r\n    if (nrOfHeartsToSwap > 0) {\r\n      remainNrOfSuitsToSwap -= nrOfHeartsToSwap;\r\n      this.cardsToSwapBySuit(player, hearts, nrOfHeartsToSwap, true);\r\n    }\r\n    // A maradék színekből a legkisebbeket\r\n    if (remainNrOfSuitsToSwap > 0) {\r\n      this.swapLowestCards(player, remainNrOfSuitsToSwap, [Suit.CLUB, Suit.DIAMOND, Suit.SPADE]);\r\n    }\r\n    // ha a maradék három színből nem lenne meg a maradék cserélendő pl.: maradék 3, szíven kívüli színek 2\r\n    const lastNrOfSuitsToSwap = remainNrOfSuitsToSwap - clubsLength - diamondsLength - spadesLength;\r\n    if (lastNrOfSuitsToSwap > 0) {\r\n      this.swapLowestCards(player, lastNrOfSuitsToSwap, [Suit.HEART]);\r\n    }\r\n  }\r\n\r\n  private highCardsToThrow(cardsBySuit: Card[], cardRanksToHold: number[]): number {\r\n    const cardsLength = cardsBySuit.length;\r\n    let cardsToHold = 0;\r\n    for (let i = 0; i < cardsLength && i < 3; i++) {\r\n      const cardRank = cardsBySuit[i].getRank();\r\n      if (cardRanksToHold.includes(cardRank)) {\r\n        cardsToHold += 1;\r\n      }\r\n    }\r\n\r\n    return cardsLength - cardsToHold;\r\n  }\r\n\r\n  private cardsToSwapBySuit(player: HeartsPlayer, cardsBySuit: Card[], nrOfSuitsToSwap: number, low: boolean) {\r\n      let i = low ? 0 : cardsBySuit.length - 1;\r\n      for (i; low ? i < nrOfSuitsToSwap : i >= (cardsBySuit.length - nrOfSuitsToSwap); low ? i++ : i--) {\r\n        const cardToSwap = cardsBySuit[i];\r\n        this.moveToSwap(player, cardToSwap);\r\n      }\r\n  }\r\n\r\n  private swapRemainNrOfSuits(\r\n    player: HeartsPlayer,\r\n    sortedPlayerCards: SortedCards,\r\n    suitsToSwap: string[],\r\n    remainNrOfSuits: number,\r\n  ) {\r\n    let remainToSwap = remainNrOfSuits;\r\n    for (let i = 0; remainToSwap > 0 && i < suitsToSwap.length; i++) {\r\n      const suit = suitsToSwap[i];\r\n      const suitCards = sortedPlayerCards[suit];\r\n      const suitCardsLength = suitCards.length;\r\n      const cardsToHold = [ 2, 3 ];\r\n      const highCardsToThrow = this.highCardsToThrow(suitCards, cardsToHold);\r\n      if (highCardsToThrow\r\n        && (suit !== suits[2]\r\n          || (suit === suits[2] && (suitCardsLength <= 5 || suitCardsLength >= 11)))) {\r\n          const nrOfSuitToSwap = highCardsToThrow >= remainNrOfSuits\r\n            ? remainNrOfSuits\r\n            : highCardsToThrow;\r\n          this.cardsToSwapBySuit(player, suitCards, nrOfSuitToSwap, false);\r\n          remainToSwap -= nrOfSuitToSwap;\r\n      }\r\n    }\r\n    if (remainToSwap > 0) {\r\n      this.swapRemainNrOfSuits(player, sortedPlayerCards, this.suitSwapPriority, remainToSwap);\r\n    }\r\n  }\r\n\r\n  private swapNrOfSuits(\r\n    player: HeartsPlayer,\r\n    sortedPlayerCards: SortedCards,\r\n    suitsFromRemove: string[],\r\n    highCardsToThrow: NrOfSuits,\r\n  ) {\r\n    let swappedNrOfSuits = 0;\r\n    if (suitsFromRemove.length) {\r\n      for (let i = 0; i < this.suitSwapPriority.length; i++) {\r\n        if (swappedNrOfSuits < 3) {\r\n          const suitToSwap = this.suitSwapPriority[i];\r\n          let nrOfSuitsToSwap = 3 - swappedNrOfSuits;\r\n\r\n          if (suitsFromRemove.includes(suitToSwap)) {\r\n            const nrOfSuit = highCardsToThrow[suitToSwap];\r\n\r\n            nrOfSuitsToSwap = nrOfSuitsToSwap >= nrOfSuit\r\n              ? nrOfSuit\r\n              : nrOfSuitsToSwap;\r\n            this.cardsToSwapBySuit(player, sortedPlayerCards[suitToSwap], nrOfSuitsToSwap, false);\r\n            swappedNrOfSuits += nrOfSuitsToSwap;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (swappedNrOfSuits < 3) {\r\n      const remainNrOfSuits = 3 - swappedNrOfSuits;\r\n      const suitsToSwap = this.suitSwapPriority.filter(suit => !suitsFromRemove.includes(suit));\r\n      this.swapRemainNrOfSuits(player, sortedPlayerCards, suitsToSwap, remainNrOfSuits);\r\n    }\r\n  }\r\n\r\n  // ha egy színből van 3 vagy kevesebb azt cserélje szín prioritás szerint, a 2,3,4-es kártyákat tartsa meg\r\n  private chooseHighCardsToSwap(player: HeartsPlayer, sortedPlayerCards: SortedCards) {\r\n    const cardsToHold = [ 2, 3, 4 ];\r\n    const highCardsToThrow: NrOfSuits = {\r\n      clubs: this.highCardsToThrow(sortedPlayerCards.clubs, cardsToHold),\r\n      diamonds: this.highCardsToThrow(sortedPlayerCards.diamonds, cardsToHold),\r\n      hearts: this.highCardsToThrow(sortedPlayerCards.hearts, cardsToHold),\r\n      spades: this.highCardsToThrow(sortedPlayerCards.spades, cardsToHold),\r\n    };\r\n    const suitsFromRemove: string[] = [];\r\n\r\n    Object.keys(highCardsToThrow).forEach(suit => {\r\n      if (highCardsToThrow[suit] && highCardsToThrow[suit] <= 3) {\r\n        suitsFromRemove.push(suit);\r\n      }\r\n    });\r\n\r\n    this.swapNrOfSuits(player, sortedPlayerCards, suitsFromRemove, highCardsToThrow);\r\n  }\r\n\r\n  private findHigherThanOpenSuitCard(suitsFromOpenSuit: Card[], lastCardFromOpenSuit: Card, highestCardRankOnTable: number): Card {\r\n    let selectedCard = suitsFromOpenSuit[0];\r\n    if (suitsFromOpenSuit.length > 1 && lastCardFromOpenSuit.getRank() > highestCardRankOnTable) {\r\n        selectedCard = lastCardFromOpenSuit;\r\n        for (let i = suitsFromOpenSuit.length - 1; i >= 0; i--) {\r\n          const nextCard = suitsFromOpenSuit[i];\r\n          if (nextCard.getRank() > highestCardRankOnTable) {\r\n            selectedCard = nextCard;\r\n          }\r\n        }\r\n\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n\r\n  private findLowerThanOpenSuitCard(suitsFromOpenSuit: Card[], lastCardFromOpenSuit: Card, highestCardRankOnTable: number): Card {\r\n    let selectedCard = lastCardFromOpenSuit;\r\n    if (lastCardFromOpenSuit.getRank() > highestCardRankOnTable) {\r\n        let lowerRankFound = false;\r\n        for (let i = suitsFromOpenSuit.length - 1; !lowerRankFound && i >= 0; i--) {\r\n          const nextCard = suitsFromOpenSuit[i];\r\n          if (nextCard.getRank() < highestCardRankOnTable || i === 0) {\r\n            selectedCard = nextCard;\r\n            lowerRankFound = true;\r\n          }\r\n        }\r\n\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n\r\n  private selectOpenSuitCard (\r\n    hasPointCardsOnTable: boolean,\r\n    highestCardRankOnTable: number,\r\n    suitsFromOpenSuit: Card[],\r\n    lastCardFromOpenSuit: Card,\r\n    isLast: boolean,\r\n  ): Card {\r\n    let selectedCard = nullCard;\r\n\r\n    // ha a játékos utolsó\r\n    // és van az asztalon pontot érő kártya próbáljon kisebbet tenni, ha nem tud a legnagyobbat\r\n    // vagy nincs az asztalon pontot érő kártya és a legnagyobbat teszi\r\n    if (isLast) {\r\n      selectedCard = hasPointCardsOnTable\r\n        ? this.findLowerThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable)\r\n        : lastCardFromOpenSuit;\r\n    // ha a játékos nem utolsó\r\n    } else {\r\n      // tegye a kintlévőknél kisebbet, ha tudja, ha nem a legnagyobbat\r\n      selectedCard = this.findLowerThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable);\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n}\r\n","export default \".rikiki-container {\\n  background-color: black;\\n}\\n.rikiki-container__settings-panel {\\n  width: 468px;\\n  margin: 200px auto;\\n  background-color: var(--primary-lighter-color);\\n}\\n.rikiki-container__settings-panel_row {\\n  width: 100%;\\n  height: 48px;\\n}\\n.rikiki-container__settings-panel_row .player-name {\\n  width: 108px;\\n  background-color: var(--primary-lighter-color);\\n  outline: none;\\n}\\n.rikiki-container__play-ground .card-table-panel,\\n.rikiki-container__play-ground .my-cards-panel {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n}\\n.rikiki-container__play-ground .control-panel {\\n  margin: 0 auto;\\n  min-width: 820px;\\n  max-width: 820px;\\n}\\n.rikiki-container__play-ground .score-board {\\n  margin: 0 auto;\\n  min-width: 400px;\\n  max-width: 400px;\\n}\\n.rikiki-container__play-ground .card-table-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 100px;\\n  border-top-right-radius: 100px;\\n  border-bottom-left-radius: 0;\\n  border-bottom-right-radius: 0;\\n  min-height: 356px;\\n  max-height: 356px;\\n  padding: 16px 16px 0px 16px;\\n}\\n.rikiki-container__play-ground .card-table-panel_first-half {\\n  flex: 0 1 10%;\\n}\\n.rikiki-container__play-ground .card-table-panel_second-half {\\n  flex: 0 1 90%;\\n}\\n.rikiki-container__play-ground .my-cards-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n  border-bottom-left-radius: 100px;\\n  border-bottom-right-radius: 100px;\\n  min-height: 240px;\\n  max-height: 240px;\\n  padding: 0px 16px 16px 16px;\\n}\\n.rikiki-container__play-ground .my-cards-panel__first-half {\\n  flex: 0 1 10%;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half {\\n  flex: 0 1 90%;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half_my-cards .margin-left-1 {\\n  margin-left: 1rem;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half_my-cards .my-card-in-hand:hover {\\n  cursor: pointer;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half_info {\\n  min-height: 40px;\\n}\\n.rikiki-container__play-ground .control-panel {\\n  padding: 0px 16px;\\n}\\n.rikiki-container__play-ground .control-panel_first-half {\\n  flex: 0 1 75%;\\n}\\n.rikiki-container__play-ground .control-panel_second-half {\\n  flex: auto;\\n}\\n.rikiki-container__play-ground .control-panel,\\n.rikiki-container__play-ground .score-board {\\n  background-color: var(--primary-lighter-color);\\n}\\n.rikiki-container__play-ground .card-table-other-players {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.rikiki-container__play-ground .card-table-other-players div:nth-child(1) {\\n  display: none;\\n}\\n.rikiki-container__play-ground .card-table-other-players div:nth-child(2) {\\n  margin-left: 3rem;\\n}\\n.rikiki-container__play-ground .mat-slider-horizontal {\\n  min-width: 100px;\\n}\\n.rikiki-container__play-ground .card-size {\\n  width: 80px;\\n}\\n.rikiki-container__play-ground .my-card {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.rikiki-container__play-ground .score-board-header,\\n.rikiki-container__play-ground .score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__play-ground .score-board-header div:nth-child(n+2),\\n.rikiki-container__play-ground .score-board-row div:nth-child(n+2) {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__play-ground .score-board-header div {\\n  height: 36px;\\n}\\n.rikiki-container__play-ground .score-board-header div,\\n.rikiki-container__play-ground .score-board-row div {\\n  width: 80px;\\n  padding: 4px 8px;\\n  text-align: center;\\n}\\n.rikiki-container__history {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n  background-color: var(--primary-lighter-color);\\n}\\n.rikiki-container__history .history-score-board-header-name {\\n  height: 36px;\\n}\\n.rikiki-container__history .history-score-board-header,\\n.rikiki-container__history .history-score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__history .history-score-board-header div:nth-child(n+2).history-score-board-col,\\n.rikiki-container__history .history-score-board-row div:nth-child(n+2).history-score-board-col {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__history .history-score-board-col {\\n  width: 60px;\\n  padding: 4px 8px;\\n}\\n.rikiki-container__history .history-score-board-col-height {\\n  height: 56px;\\n}\\n.rikiki-container__history .history-card-size {\\n  width: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2FtZXMvcmlraWtpL0M6XFxnaXRcXGNhcmQtZ2FtZXMvc3JjXFxhcHBcXGdhbWVzXFxyaWtpa2lcXHJpa2lraS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZ2FtZXMvcmlraWtpL3Jpa2lraS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNJLHVCQUFBO0FDSEo7QURLSTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtFQUNBLDhDQUFBO0FDSFI7QURLUTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FDSFo7QURLWTtFQUNJLFlBQUE7RUFDQSw4Q0FBQTtFQUNBLGFBQUE7QUNIaEI7QURTUTs7RUFFSSxjQUFBO0VBQ0Esc0NBMUJNO0VBMkJOLHNDQTNCTTtBQ29CbEI7QURVUTtFQUNJLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDUlo7QURXUTtFQUNJLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDVFo7QURZUTtFQUNJLG9DQUFBO0VBQ0EsNkJBQUE7RUFDQSw4QkFBQTtFQUNBLDRCQUFBO0VBQ0EsNkJBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsMkJBQUE7QUNWWjtBRFlZO0VBQ0ksYUFBQTtBQ1ZoQjtBRFlZO0VBQ0ksYUFBQTtBQ1ZoQjtBRGVRO0VBQ0ksb0NBQUE7RUFDQSx5QkFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxpQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSwyQkFBQTtBQ2JaO0FEZVk7RUFDSSxhQUFBO0FDYmhCO0FEZVk7RUFDSSxhQUFBO0FDYmhCO0FEZ0JvQjtFQUNJLGlCQUFBO0FDZHhCO0FEaUJ3QjtFQUNJLGVBQUE7QUNmNUI7QURvQmdCO0VBQ0ksZ0JBQUE7QUNsQnBCO0FEd0JRO0VBQ0ksaUJBQUE7QUN0Qlo7QUR3Qlk7RUFDSSxhQUFBO0FDdEJoQjtBRHdCWTtFQUNJLFVBQUE7QUN0QmhCO0FEMEJROztFQUVJLDhDQUFBO0FDeEJaO0FENEJRO0VBQ0ksMkJBQUE7QUMxQlo7QUQyQlk7RUFDSSxhQUFBO0FDekJoQjtBRDJCWTtFQUNJLGlCQUFBO0FDekJoQjtBRDZCUTtFQUNJLGdCQUFBO0FDM0JaO0FEOEJRO0VBQ0ksV0FBQTtBQzVCWjtBRCtCUTtFQUNJLDJCQUFBO0FDN0JaO0FEZ0NROztFQUVJLHdCQUFBO0VBQ0EsMEJBQUE7RUFDQSxpQ0FBQTtBQzlCWjtBRCtCWTs7RUFDSSxzQkFBQTtFQUNBLHdCQUFBO0VBQ0EsaUNBQUE7QUM1QmhCO0FEZ0NRO0VBQ0ksWUFBQTtBQzlCWjtBRGlDUTs7RUFFSSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQy9CWjtBRG1DSTtFQUNJLGNBQUE7RUFDQSxzQ0FoS1U7RUFpS1Ysc0NBaktVO0VBa0tWLDhDQUFBO0FDakNSO0FEbUNRO0VBQ0ksWUFBQTtBQ2pDWjtBRG9DUTs7RUFFSSx3QkFBQTtFQUNBLDBCQUFBO0VBQ0EsaUNBQUE7QUNsQ1o7QURtQ1k7O0VBQ0ksc0JBQUE7RUFDQSx3QkFBQTtFQUNBLGlDQUFBO0FDaENoQjtBRG9DUTtFQUNJLFdBQUE7RUFDQSxnQkFBQTtBQ2xDWjtBRHFDUTtFQUNJLFlBQUE7QUNuQ1o7QURzQ1E7RUFDSSxXQUFBO0FDcENaIiwiZmlsZSI6InNyYy9hcHAvZ2FtZXMvcmlraWtpL3Jpa2lraS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRwYW5lbC1wYWRkaW5nOiAxNjtcclxuJG1heC1nYW1lLXNjcmVlbjogMTAyNDtcclxuJG1heC1yZW5kZXItYXJlYTogY2FsYygoI3skbWF4LWdhbWUtc2NyZWVufSAtIDIgKiAjeyRwYW5lbC1wYWRkaW5nfSkgKiAxcHgpO1xyXG5cclxuLnJpa2lraS1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcblxyXG4gICAgJl9fc2V0dGluZ3MtcGFuZWwge1xyXG4gICAgICAgIHdpZHRoOiA0NjhweDtcclxuICAgICAgICBtYXJnaW46IDIwMHB4IGF1dG87XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcclxuXHJcbiAgICAgICAgJl9yb3cge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0OHB4O1xyXG5cclxuICAgICAgICAgICAgLnBsYXllci1uYW1lIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDhweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHRlci1jb2xvcik7XHJcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3BsYXktZ3JvdW5kIHtcclxuICAgICAgICAuY2FyZC10YWJsZS1wYW5lbCxcclxuICAgICAgICAubXktY2FyZHMtcGFuZWwge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgbWluLXdpZHRoOiAkbWF4LXJlbmRlci1hcmVhO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6ICRtYXgtcmVuZGVyLWFyZWE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY29udHJvbC1wYW5lbCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDgyMHB4O1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDgyMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNjb3JlLWJvYXJkIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogNDAwcHg7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgLmNhcmQtdGFibGUtcGFuZWwge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10YWJsZS1ncmVlbik7XHJcbiAgICAgICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwMHB4O1xyXG4gICAgICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTAwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAzNTZweDtcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogMzU2cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHggMTZweCAwcHggMTZweDtcclxuICAgIFxyXG4gICAgICAgICAgICAmX2ZpcnN0LWhhbGYge1xyXG4gICAgICAgICAgICAgICAgZmxleDogMCAxIDEwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmX3NlY29uZC1oYWxmIHtcclxuICAgICAgICAgICAgICAgIGZsZXg6IDAgMSA5MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgLm15LWNhcmRzLXBhbmVsIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGFibGUtZ3JlZW4pO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTAwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMDBweDtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogMjQwcHg7XHJcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDI0MHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwcHggMTZweCAxNnB4IDE2cHg7XHJcblxyXG4gICAgICAgICAgICAmX19maXJzdC1oYWxmIHtcclxuICAgICAgICAgICAgICAgIGZsZXg6IDAgMSAxMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJl9fc2Vjb25kLWhhbGYge1xyXG4gICAgICAgICAgICAgICAgZmxleDogMCAxIDkwJTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgJl9teS1jYXJkcyB7XHJcbiAgICAgICAgICAgICAgICAgICAgLm1hcmdpbi1sZWZ0LTEge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLm15LWNhcmQtaW4taGFuZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICZfaW5mbyB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgLmNvbnRyb2wtcGFuZWwge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwcHggMTZweDtcclxuICAgIFxyXG4gICAgICAgICAgICAmX2ZpcnN0LWhhbGYge1xyXG4gICAgICAgICAgICAgICAgZmxleDogMCAxIDc1JTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmX3NlY29uZC1oYWxmIHtcclxuICAgICAgICAgICAgICAgIGZsZXg6IGF1dG87XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAuY29udHJvbC1wYW5lbCxcclxuICAgICAgICAuc2NvcmUtYm9hcmQge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0ZXItY29sb3IpO1xyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAgICAgLmNhcmQtdGFibGUtb3RoZXItcGxheWVycyB7XHJcbiAgICAgICAgICAgIGZsZXg6IDAgMSBjYWxjKDEwMCUgLSA5NnB4KTtcclxuICAgICAgICAgICAgZGl2Om50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRpdjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDNyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLm1hdC1zbGlkZXItaG9yaXpvbnRhbCB7XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgLmNhcmQtc2l6ZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAubXktY2FyZCB7XHJcbiAgICAgICAgICAgIGZsZXg6IDAgMSBjYWxjKDEwMCUgLSA5NnB4KTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAuc2NvcmUtYm9hcmQtaGVhZGVyLFxyXG4gICAgICAgIC5zY29yZS1ib2FyZC1yb3cge1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xyXG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbiAgICAgICAgICAgIGRpdjpudGgtY2hpbGQobiArIDIpIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1zdHlsZTogc29saWQ7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zY29yZS1ib2FyZC1oZWFkZXIgZGl2IHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNjb3JlLWJvYXJkLWhlYWRlciBkaXYsXHJcbiAgICAgICAgLnNjb3JlLWJvYXJkLXJvdyBkaXYge1xyXG4gICAgICAgICAgICB3aWR0aDogODBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19oaXN0b3J5IHtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICBtaW4td2lkdGg6ICRtYXgtcmVuZGVyLWFyZWE7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkbWF4LXJlbmRlci1hcmVhO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHRlci1jb2xvcik7XHJcblxyXG4gICAgICAgIC5oaXN0b3J5LXNjb3JlLWJvYXJkLWhlYWRlci1uYW1lIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNnB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmhpc3Rvcnktc2NvcmUtYm9hcmQtaGVhZGVyLFxyXG4gICAgICAgIC5oaXN0b3J5LXNjb3JlLWJvYXJkLXJvdyB7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxuICAgICAgICAgICAgZGl2Om50aC1jaGlsZChuICsgMikuaGlzdG9yeS1zY29yZS1ib2FyZC1jb2wge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgIC5oaXN0b3J5LXNjb3JlLWJvYXJkLWNvbCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA0cHggOHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmhpc3Rvcnktc2NvcmUtYm9hcmQtY29sLWhlaWdodCB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTZweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5oaXN0b3J5LWNhcmQtc2l6ZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIucmlraWtpLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuLnJpa2lraS1jb250YWluZXJfX3NldHRpbmdzLXBhbmVsIHtcbiAgd2lkdGg6IDQ2OHB4O1xuICBtYXJnaW46IDIwMHB4IGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHRlci1jb2xvcik7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWxfcm93IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDhweDtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19zZXR0aW5ncy1wYW5lbF9yb3cgLnBsYXllci1uYW1lIHtcbiAgd2lkdGg6IDEwOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0ZXItY29sb3IpO1xuICBvdXRsaW5lOiBub25lO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5jYXJkLXRhYmxlLXBhbmVsLFxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5teS1jYXJkcy1wYW5lbCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtaW4td2lkdGg6IGNhbGMoKDEwMjQgLSAyICogMTYpICogMXB4KTtcbiAgbWF4LXdpZHRoOiBjYWxjKCgxMDI0IC0gMiAqIDE2KSAqIDFweCk7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLmNvbnRyb2wtcGFuZWwge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWluLXdpZHRoOiA4MjBweDtcbiAgbWF4LXdpZHRoOiA4MjBweDtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuc2NvcmUtYm9hcmQge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWluLXdpZHRoOiA0MDBweDtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuY2FyZC10YWJsZS1wYW5lbCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRhYmxlLWdyZWVuKTtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTAwcHg7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMDBweDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gIG1pbi1oZWlnaHQ6IDM1NnB4O1xuICBtYXgtaGVpZ2h0OiAzNTZweDtcbiAgcGFkZGluZzogMTZweCAxNnB4IDBweCAxNnB4O1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5jYXJkLXRhYmxlLXBhbmVsX2ZpcnN0LWhhbGYge1xuICBmbGV4OiAwIDEgMTAlO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5jYXJkLXRhYmxlLXBhbmVsX3NlY29uZC1oYWxmIHtcbiAgZmxleDogMCAxIDkwJTtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAubXktY2FyZHMtcGFuZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10YWJsZS1ncmVlbik7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxMDBweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDEwMHB4O1xuICBtaW4taGVpZ2h0OiAyNDBweDtcbiAgbWF4LWhlaWdodDogMjQwcHg7XG4gIHBhZGRpbmc6IDBweCAxNnB4IDE2cHggMTZweDtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAubXktY2FyZHMtcGFuZWxfX2ZpcnN0LWhhbGYge1xuICBmbGV4OiAwIDEgMTAlO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5teS1jYXJkcy1wYW5lbF9fc2Vjb25kLWhhbGYge1xuICBmbGV4OiAwIDEgOTAlO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5teS1jYXJkcy1wYW5lbF9fc2Vjb25kLWhhbGZfbXktY2FyZHMgLm1hcmdpbi1sZWZ0LTEge1xuICBtYXJnaW4tbGVmdDogMXJlbTtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAubXktY2FyZHMtcGFuZWxfX3NlY29uZC1oYWxmX215LWNhcmRzIC5teS1jYXJkLWluLWhhbmQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLm15LWNhcmRzLXBhbmVsX19zZWNvbmQtaGFsZl9pbmZvIHtcbiAgbWluLWhlaWdodDogNDBweDtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuY29udHJvbC1wYW5lbCB7XG4gIHBhZGRpbmc6IDBweCAxNnB4O1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5jb250cm9sLXBhbmVsX2ZpcnN0LWhhbGYge1xuICBmbGV4OiAwIDEgNzUlO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5jb250cm9sLXBhbmVsX3NlY29uZC1oYWxmIHtcbiAgZmxleDogYXV0bztcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuY29udHJvbC1wYW5lbCxcbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuc2NvcmUtYm9hcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0ZXItY29sb3IpO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5jYXJkLXRhYmxlLW90aGVyLXBsYXllcnMge1xuICBmbGV4OiAwIDEgY2FsYygxMDAlIC0gOTZweCk7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLmNhcmQtdGFibGUtb3RoZXItcGxheWVycyBkaXY6bnRoLWNoaWxkKDEpIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuY2FyZC10YWJsZS1vdGhlci1wbGF5ZXJzIGRpdjpudGgtY2hpbGQoMikge1xuICBtYXJnaW4tbGVmdDogM3JlbTtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAubWF0LXNsaWRlci1ob3Jpem9udGFsIHtcbiAgbWluLXdpZHRoOiAxMDBweDtcbn1cbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuY2FyZC1zaXplIHtcbiAgd2lkdGg6IDgwcHg7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLm15LWNhcmQge1xuICBmbGV4OiAwIDEgY2FsYygxMDAlIC0gOTZweCk7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLnNjb3JlLWJvYXJkLWhlYWRlcixcbi5yaWtpa2ktY29udGFpbmVyX19wbGF5LWdyb3VuZCAuc2NvcmUtYm9hcmQtcm93IHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xuICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpO1xufVxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5zY29yZS1ib2FyZC1oZWFkZXIgZGl2Om50aC1jaGlsZChuKzIpLFxuLnJpa2lraS1jb250YWluZXJfX3BsYXktZ3JvdW5kIC5zY29yZS1ib2FyZC1yb3cgZGl2Om50aC1jaGlsZChuKzIpIHtcbiAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDtcbiAgYm9yZGVyLWxlZnQtc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLnNjb3JlLWJvYXJkLWhlYWRlciBkaXYge1xuICBoZWlnaHQ6IDM2cHg7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLnNjb3JlLWJvYXJkLWhlYWRlciBkaXYsXG4ucmlraWtpLWNvbnRhaW5lcl9fcGxheS1ncm91bmQgLnNjb3JlLWJvYXJkLXJvdyBkaXYge1xuICB3aWR0aDogODBweDtcbiAgcGFkZGluZzogNHB4IDhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnJpa2lraS1jb250YWluZXJfX2hpc3Rvcnkge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWluLXdpZHRoOiBjYWxjKCgxMDI0IC0gMiAqIDE2KSAqIDFweCk7XG4gIG1heC13aWR0aDogY2FsYygoMTAyNCAtIDIgKiAxNikgKiAxcHgpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0ZXItY29sb3IpO1xufVxuLnJpa2lraS1jb250YWluZXJfX2hpc3RvcnkgLmhpc3Rvcnktc2NvcmUtYm9hcmQtaGVhZGVyLW5hbWUge1xuICBoZWlnaHQ6IDM2cHg7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9faGlzdG9yeSAuaGlzdG9yeS1zY29yZS1ib2FyZC1oZWFkZXIsXG4ucmlraWtpLWNvbnRhaW5lcl9faGlzdG9yeSAuaGlzdG9yeS1zY29yZS1ib2FyZC1yb3cge1xuICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xMik7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9faGlzdG9yeSAuaGlzdG9yeS1zY29yZS1ib2FyZC1oZWFkZXIgZGl2Om50aC1jaGlsZChuKzIpLmhpc3Rvcnktc2NvcmUtYm9hcmQtY29sLFxuLnJpa2lraS1jb250YWluZXJfX2hpc3RvcnkgLmhpc3Rvcnktc2NvcmUtYm9hcmQtcm93IGRpdjpudGgtY2hpbGQobisyKS5oaXN0b3J5LXNjb3JlLWJvYXJkLWNvbCB7XG4gIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7XG4gIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTIpO1xufVxuLnJpa2lraS1jb250YWluZXJfX2hpc3RvcnkgLmhpc3Rvcnktc2NvcmUtYm9hcmQtY29sIHtcbiAgd2lkdGg6IDYwcHg7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG59XG4ucmlraWtpLWNvbnRhaW5lcl9faGlzdG9yeSAuaGlzdG9yeS1zY29yZS1ib2FyZC1jb2wtaGVpZ2h0IHtcbiAgaGVpZ2h0OiA1NnB4O1xufVxuLnJpa2lraS1jb250YWluZXJfX2hpc3RvcnkgLmhpc3RvcnktY2FyZC1zaXplIHtcbiAgd2lkdGg6IDQwcHg7XG59Il19 */\"","import { Component } from '@angular/core';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { RikikiPlayer } from '../../table-parts/player/rikiki-player';\r\nimport { RikikiTable } from '../../table-parts/table/rikiki-table';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { RikikiService } from './rikiki.service';\r\nimport { TurnHistoryRow } from 'src/app/interfaces/turn-history-row.interface';\r\n\r\n@Component({\r\n  selector: 'app-rikiki',\r\n  templateUrl: 'rikiki.component.html',\r\n  styleUrls: ['rikiki.component.scss'],\r\n})\r\nexport class RikikiComponent {\r\n\r\n  /* TODO's\r\n  * refaktorálni a kártya választásokat a rendezett kártya lista alapján\r\n  */\r\n\r\n  private readonly imgUrlPrefix = 'assets/images/';\r\n  private readonly imgUrlSuffix = '.svg';\r\n  private readonly defaultMsg = { type: '', msg: ' ', subMsg: ' ', translateParams: {} };\r\n  private readonly deckSize = 52;\r\n  private readonly playerNames: string[] = ['Eve', 'Luke', 'Jane', 'Sam', 'Tim', 'Tom'];\r\n  public readonly nrOfPlayersMax = 7;\r\n\r\n  public placeholderCardImgUrl = `${this.imgUrlPrefix}card_placeholder${this.imgUrlSuffix}`;\r\n  public cardBackImgUrl = `${this.imgUrlPrefix}card_back_2${this.imgUrlSuffix}`;\r\n  public players: RikikiPlayer[] = [];\r\n  public cardUrls: string[] = [];\r\n  public myCardUrl = this.placeholderCardImgUrl;\r\n  public trumpCardUrl = this.placeholderCardImgUrl;\r\n\r\n  public allMessage = this.defaultMsg;\r\n  public history: TurnHistoryRow[] = [];\r\n  public myTable: RikikiTable;\r\n  public round: number;\r\n  public relativeRound: number;\r\n  public playerBet: number;\r\n  public playerBetMin = 0;\r\n  public playerBetMax = 1;\r\n\r\n  public dealerIdx: number;\r\n  public endOfGame = true;\r\n  public endOfRound = true;\r\n  public endOfBet = true;\r\n  public endOfSelection = true;\r\n\r\n  public nrOfPlayersTemp: number;\r\n  public nrOfRoundsTemp: number;\r\n  public nrOfRoundsMax = 9;\r\n  public starterIdxTemp: number;\r\n  public starterIdxMax: number;\r\n\r\n  private nrOfPlayers = 3;\r\n  private nrOfRounds = 3;\r\n  private starterIdx = 1;\r\n  private playerName = history.state.data?.playerName;\r\n\r\n  private trumpCard: Card;\r\n  private roundInc: boolean;\r\n  private turnInRound: number;\r\n  private betTotal: number;\r\n  private playerIdx: number;\r\n  private lastPlayerIdx: number;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private rikikiService: RikikiService,\r\n  ) {\r\n    this.nrOfPlayersTemp = this.nrOfPlayers;\r\n    this.nrOfRoundsTemp = this.nrOfRounds;\r\n    this.starterIdxTemp = this.starterIdx;\r\n    this.leaveGame();\r\n  }\r\n\r\n  setNrOfPlayers() {\r\n    this.nrOfPlayers = this.nrOfPlayersTemp;\r\n    const maxRounds = Math.floor(this.deckSize / this.nrOfPlayers);\r\n    this.nrOfRoundsMax =  maxRounds > 9 ? 9 : maxRounds;\r\n    this.nrOfRoundsTemp = this.nrOfRounds;\r\n    this.starterIdxTemp = this.starterIdx;\r\n  }\r\n\r\n  setNrOfRounds() {\r\n    this.nrOfRounds = this.nrOfRoundsTemp;\r\n    this.nrOfPlayersTemp = this.nrOfPlayers;\r\n    this.starterIdxTemp = this.starterIdx;\r\n  }\r\n\r\n  setStarter() {\r\n    this.starterIdx = this.starterIdxTemp;\r\n    this.nrOfPlayersTemp = this.nrOfPlayers;\r\n    this.nrOfRoundsTemp = this.nrOfRounds;\r\n  }\r\n\r\n  convertCardToImgUrl(card: Card) {\r\n    return `${this.imgUrlPrefix}${card.printCard()}${this.imgUrlSuffix}`;\r\n  }\r\n\r\n  leaveGame() {\r\n    this.myCardUrl = this.placeholderCardImgUrl;\r\n    this.trumpCardUrl = this.placeholderCardImgUrl;\r\n    this.allMessage = this.defaultMsg;\r\n    this.playerBet = 0;\r\n    this.dealerIdx = 0;\r\n    this.endOfGame = true;\r\n    this.endOfRound = true;\r\n    this.endOfBet = true;\r\n    this.endOfSelection = true;\r\n    this.playerBetMax = this.round;\r\n    this.initGame();\r\n  }\r\n\r\n  newGame() {\r\n    this.endOfGame = false;\r\n    this.initGame();\r\n    this.newRound();\r\n  }\r\n\r\n  newRound() {\r\n    this.endOfRound = false;\r\n    ++this.relativeRound;\r\n    this.playerBet = 0;\r\n    this.playerBetMax = this.round;\r\n    this.trumpCardUrl = this.placeholderCardImgUrl;\r\n    this.showTableCards();\r\n    // az adott körben kezdő játékos (osztó) váltása\r\n    const starterPlayerIdx = (this.round - 1 + this.starterIdx - 1) % this.nrOfPlayers;\r\n    this.dealerIdx = (starterPlayerIdx - 1 + this.nrOfPlayers) % this.nrOfPlayers;\r\n    this.myTable.setStarterAndLastPlayer(starterPlayerIdx);\r\n\r\n    // fogadás és megvalósulás számlálók inicializálása\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        this.myTable.getPlayer(i).setBet(-1);\r\n        this.myTable.getPlayer(i).resetReal();\r\n    }\r\n\r\n    // minden játékos kap egy kártyát, annyiszor amennyi kör van\r\n    for (let i = 1; i <= this.round; ++i) {\r\n        for (let j = 0; j < this.nrOfPlayers; ++j) {\r\n            this.myTable.getPlayer(j).addCard(this.myTable.getCardFromDeck());\r\n        }\r\n    }\r\n    // kártyák sorba rendezése\r\n    if (this.round > 1) {\r\n      this.myTable.getPlayer(0).sortPlayerCards();\r\n    }\r\n    // adu kártya húzása\r\n    this.trumpCard = this.myTable.getTrumpCard();\r\n    this.trumpCardUrl = this.convertCardToImgUrl(this.trumpCard);\r\n\r\n    this.setBets(starterPlayerIdx);\r\n  }\r\n\r\n  bet() {\r\n    if (this.playerBet === this.round - this.myTable.getBetTotal() && this.myTable.getPlayer(0).isLast()) {\r\n      this.allMessage = {\r\n        type: 'error',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.INVALID_BET_MSG',\r\n        subMsg: 'MY_CARDS_PANEL.MESSAGES.INVALID_BET_SUBMSG',\r\n        translateParams: { playerBet: this.playerBet, round: this.round}\r\n      };\r\n    } else {\r\n      this.allMessage = this.defaultMsg;\r\n      this.myTable.getPlayer(0).setBet(this.playerBet);\r\n      this.setBetTotalAndNextPlayer();\r\n      this.setPlayersBet();\r\n      this.endOfBet = true;\r\n      this.playTurn();\r\n    }\r\n  }\r\n\r\n  checkSelectedCard(\r\n    selectedCardIdx: number,\r\n    playerCards: Card[],\r\n    trumpCardSuit: number,\r\n    firstCardSuit: number\r\n  ): { isSelectedValid: boolean, hasFirstCardSuit?: boolean, hasTrumpCardSuit?: boolean } {\r\n    const selectedCardSuit = playerCards[selectedCardIdx].getSuit();\r\n\r\n    // TODO firstCardSuti lehet, hogy 0, mert a firstCard még nullCard, mert kezdő a játékos, mégis működik?! Kivizsgálni!\r\n    if (selectedCardSuit === firstCardSuit) {\r\n      return { isSelectedValid: true };\r\n    }\r\n\r\n    let hasFirstCardSuit = false;\r\n    let hasTrumpCardSuit = false;\r\n    for (let i = 0; (!hasFirstCardSuit || !hasTrumpCardSuit) && i < playerCards.length; i++) {\r\n      const playerCardSuit = playerCards[i].getSuit();\r\n      if (!hasFirstCardSuit) {\r\n        hasFirstCardSuit = playerCardSuit === firstCardSuit;\r\n      }\r\n      if (!hasTrumpCardSuit) {\r\n        hasTrumpCardSuit = playerCardSuit === trumpCardSuit;\r\n      }\r\n    }\r\n\r\n    if (hasFirstCardSuit && selectedCardSuit !== firstCardSuit) {\r\n      return { isSelectedValid: false, hasFirstCardSuit, hasTrumpCardSuit };\r\n    }\r\n\r\n    if (hasTrumpCardSuit && selectedCardSuit !== trumpCardSuit) {\r\n      return { isSelectedValid: false, hasFirstCardSuit, hasTrumpCardSuit };\r\n    }\r\n\r\n    return { isSelectedValid: true };\r\n  }\r\n\r\n  selectedCard(selectedCardIdx: number) {\r\n    if (!this.endOfSelection) {\r\n      const player = this.myTable.getPlayer(0);\r\n      const playerCards = player.getCards();\r\n      if (selectedCardIdx <= this.round && selectedCardIdx <= playerCards.length) {\r\n        const trumpCardSuit = this.trumpCard.getSuit();\r\n        const firstCardSuit = this.myTable.getFirstCard().getSuit();\r\n        const checkedCards = this.checkSelectedCard(selectedCardIdx, playerCards, trumpCardSuit, firstCardSuit);\r\n        if (playerCards.length === 1 || player.isStarter() || checkedCards.isSelectedValid) {\r\n          this.myTable.putCardOnTable(this.playerIdx, player.removeCardByIdx(selectedCardIdx));\r\n          this.handleRound();\r\n          this.setPlayersTurn();\r\n          this.endOfSelection = true;\r\n          this.allMessage = this.defaultMsg;\r\n        } else {\r\n          const isObligatedSuitTrump =\r\n            firstCardSuit === trumpCardSuit || checkedCards.hasTrumpCardSuit && !checkedCards.hasFirstCardSuit;\r\n          if (isObligatedSuitTrump) {\r\n            this.allMessage = {\r\n              type: 'error',\r\n              msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n              subMsg: 'MY_CARDS_PANEL.MESSAGES.SELECT_TRUMP_CARD_SUIT',\r\n              translateParams: {}\r\n            };\r\n          } else {\r\n            const suits = ['CLUB', 'DIAMOND', 'HEART', 'SPADE'];\r\n            this.translate.get(suits[firstCardSuit - 1])\r\n              .subscribe((translation) => {\r\n                this.allMessage = {\r\n                  type: 'error',\r\n                  msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n                  subMsg: 'MY_CARDS_PANEL.MESSAGES.SELECT_FIRST_CARD_SUIT',\r\n                  translateParams: { suit: translation }\r\n                };\r\n              });\r\n          }\r\n        }\r\n      } else {\r\n        this.allMessage = {\r\n          type: 'error',\r\n          msg: 'MY_CARDS_PANEL.MESSAGES.INVALID_SELECTION',\r\n          subMsg: ' ',\r\n          translateParams: { selectedCardIdx: selectedCardIdx }\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmStand() {\r\n    this.endOfSelection = false;\r\n    if (this.myTable.getPlayer(0).hasCard()) {\r\n      this.showTableCards();\r\n      this.askPlayerToSelectCard();\r\n    }\r\n    if (!this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        this.myTable.getPlayer(i).setScore();\r\n      }\r\n      this.addToHistory();\r\n      this.endOfSelection = true;\r\n      this.endOfRound = true;\r\n      this.shuffle();\r\n      if (this.roundInc && this.round < this.nrOfRounds) {\r\n        ++this.round;\r\n      } else if (this.roundInc && this.round === this.nrOfRounds) {\r\n        ++this.starterIdx;\r\n        this.roundInc = false;\r\n      } else if (this.round > 1) {\r\n        --this.round;\r\n      } else if (this.round <= 1) {\r\n        this.endOfGame = true;\r\n        this.findWinner();\r\n      }\r\n    }\r\n  }\r\n\r\n  private initGame() {\r\n    this.cardUrls = [];\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      this.cardUrls[i] = this.placeholderCardImgUrl;\r\n    }\r\n    this.relativeRound = 0;\r\n    this.roundInc = true;\r\n    this.myTable = new RikikiTable(this.nrOfPlayers);\r\n    if (this.playerName) {\r\n      this.myTable.getPlayer(0).setName(this.playerName);\r\n    }\r\n    for (let i = 1; i < this.nrOfPlayers; ++i) {\r\n      this.myTable.getPlayer(i).setName(this.playerNames[i - 1]);\r\n    }\r\n    this.players = this.myTable.getPlayers();\r\n    this.round = 1;\r\n    this.history = [];\r\n  }\r\n\r\n  private shuffle() {\r\n    this.myTable.addCardToDeck(this.trumpCard);\r\n    this.myTable.shuffleDeck();\r\n  }\r\n\r\n  private sortPlayerCards() {\r\n    this.myTable.getPlayer(0).getCards()\r\n      .sort((a, b) => (\r\n        a.getSuit() > b.getSuit()\r\n          ? 1\r\n          : (a.getSuit() === b.getSuit())\r\n            ? ((a.getRank() > b.getRank()) ? 1 : -1)\r\n            : -1\r\n      ));\r\n  }\r\n\r\n  private setBetTotalAndNextPlayer() {\r\n    this.betTotal += this.myTable.getPlayer(this.playerIdx).getBet();\r\n    this.myTable.setBetTotal(this.betTotal);\r\n    ++this.turnInRound;\r\n    this.playerIdx = (this.turnInRound - 1 + this.starterIdx - 1) % this.nrOfPlayers;\r\n  }\r\n\r\n  private setPlayersBet() {\r\n    while (this.playerIdx !== 0 && this.myTable.getPlayer(this.playerIdx).getBet() < 0) {\r\n      this.myTable.getPlayer(this.playerIdx)\r\n        .setBet(\r\n          this.rikikiService.betAI(\r\n            this.myTable,\r\n            this.trumpCard,\r\n            this.nrOfPlayers,\r\n            this.round,\r\n            this.playerIdx,\r\n          )\r\n        );\r\n      this.setBetTotalAndNextPlayer();\r\n    }\r\n  }\r\n\r\n  private askPlayerToBet() {\r\n    const invalidBet = this.round - this.betTotal >= 0;\r\n    const invalidBetText = this.myTable.getPlayer(0).isLast() && invalidBet\r\n      ? 'MY_CARDS_PANEL.MESSAGES.CHOOSE_VALID_BET_SUBMSG'\r\n      : ' ';\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_VALID_BET_MSG',\r\n      subMsg: invalidBetText,\r\n      translateParams: { roundMinusBetTotal: this.round - this.betTotal }\r\n    };\r\n  }\r\n\r\n  private setBets(starterPlayerIdx: number) {\r\n    this.endOfBet = false;\r\n    this.turnInRound = this.round;\r\n    this.betTotal = 0;\r\n    this.playerIdx = starterPlayerIdx;\r\n    if (this.playerIdx !== 0) {\r\n      this.setPlayersBet();\r\n    }\r\n    if (this.round === 1) {\r\n      this.showTableCards(true);\r\n    }\r\n    this.askPlayerToBet();\r\n  }\r\n\r\n  private handleRound() {\r\n    // ha pont annyi kártya van lent ahány játékos, akkor ebben a körben mindenki letette a lapját\r\n    if (this.myTable.nrOfCardsOnTable() === this.nrOfPlayers) {\r\n      const starterIdx = (this.playerIdx + 1) % this.nrOfPlayers;\r\n      this.showTableCards();\r\n      this.askPlayerToSelectCard();\r\n      // aki viszi a kört, az lesz a kezdő\r\n      this.playerIdx = this.myTable.findHighestCardOnTable(this.trumpCard.getSuit());\r\n      this.myTable.getPlayer(this.playerIdx).addReal(1);\r\n      this.addToHistory(true, starterIdx);\r\n      this.myTable.removeCardsFromTable();\r\n      this.myTable.setStarterAndLastPlayer(this.playerIdx);\r\n      this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    } else {\r\n      ++this.playerIdx;\r\n      this.playerIdx %= this.nrOfPlayers;\r\n    }\r\n  }\r\n\r\n  private setPlayersTurn() {\r\n    while (this.playerIdx !== 0 && this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      // ha a játékosnak több kártyája van\r\n      if (this.myTable.getPlayer(this.playerIdx).getCards().length > 1) {\r\n        const selectedCard = this.rikikiService.selectCardAI(this.myTable, this.trumpCard, this.round, this.playerIdx);\r\n        this.myTable.putCardOnTable(\r\n          this.playerIdx,\r\n          this.myTable.getPlayer(this.playerIdx).removeCardByIdx(selectedCard)\r\n        );\r\n      } else {\r\n        // ha a játékosnak csak egy kártyája maradt, akkor azt azonnal leteszi\r\n        this.myTable.putCardOnTable(\r\n          this.playerIdx,\r\n          this.myTable.getPlayer(this.playerIdx).removeCardByIdx(0)\r\n        );\r\n      }\r\n      this.handleRound();\r\n    }\r\n  }\r\n\r\n  private askPlayerToSelectCard() {\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_CARD',\r\n      subMsg: ' ',\r\n      translateParams: {}\r\n    };\r\n  }\r\n\r\n  private playTurn() {\r\n    this.endOfSelection = false;\r\n    this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    if (this.playerIdx !== 0) {\r\n      this.setPlayersTurn();\r\n    }\r\n    // ha a játékosnak több kártyája van\r\n    // TODO this.playerIdx mindig 0-ra értendő\r\n    const playerCardsLength = this.myTable.getPlayer(this.playerIdx).getCards().length;\r\n    if (playerCardsLength > 1) {\r\n      this.showTableCards();\r\n    }\r\n    this.askPlayerToSelectCard();\r\n  }\r\n\r\n  private showTableCards(peek = false) {\r\n    let cardsOnTable: Card[] = [];\r\n\r\n    if (peek) {\r\n      const players = this.myTable.getPlayers().slice(1);\r\n      for (let i = 0; i < players.length; i++) {\r\n        cardsOnTable[i + 1] = players[i].getCards()[0];\r\n      }\r\n    } else {\r\n      cardsOnTable = this.myTable.checkCardSlotsOnTable();\r\n    }\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      if (i === 0) {\r\n        this.myCardUrl = cardsOnTable[0]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[0])\r\n          : this.placeholderCardImgUrl;\r\n      } else {\r\n        this.cardUrls[i] = cardsOnTable[i]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[i])\r\n          : this.placeholderCardImgUrl;\r\n      }\r\n    }\r\n  }\r\n\r\n  private addToHistory(isCardRow = false, starterIdx = 0) {\r\n    let turn = this.myTable.getPlayer(0).getCards().length;\r\n    turn = this.round === 1 ? 1 : this.round - turn;\r\n\r\n    let cardUrls: string[] = [];\r\n    if (isCardRow) {\r\n      cardUrls = cloneDeep(this.cardUrls);\r\n      cardUrls.splice(0, 1, this.convertCardToImgUrl(this.myTable.checkCardSlotsOnTable()[0]));\r\n    }\r\n\r\n    this.history.push({\r\n      isCardRow,\r\n      cardRow: isCardRow\r\n        ? {\r\n          turnPerRound: `${turn}/${this.round}`,\r\n          trunStarter: this.myTable.getPlayer(starterIdx).getName(),\r\n          cardUrls: cardUrls,\r\n          turnTaker: this.myTable.getPlayer(this.playerIdx).getName(),\r\n        }\r\n        : {},\r\n      scoreRow: isCardRow\r\n        ? {}\r\n        : {\r\n          trumpCardUrl: this.trumpCardUrl,\r\n          players: cloneDeep(this.myTable.getPlayers())\r\n        }\r\n    });\r\n  }\r\n\r\n  private findWinner() {\r\n    const players = this.myTable.getPlayers();\r\n    let winnerIdx = 0;\r\n    let winner = players[winnerIdx];\r\n    for (let i = 1; i < players.length; i++) {\r\n      if (players[i].getScore() > winner.getScore()) {\r\n        winner = players[i];\r\n        winnerIdx = i;\r\n      }\r\n    }\r\n\r\n    this.allMessage = winnerIdx === 0\r\n      ? {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.YOU_WON',\r\n        subMsg: ' ',\r\n        translateParams: {}\r\n      }\r\n      : {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.ANOTHER_WON',\r\n        subMsg: ' ',\r\n        translateParams: { winner: winner.getName() }\r\n      };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { suits } from 'src/app/table-parts/suit/suits';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { RikikiPlayer } from '../../table-parts/player/rikiki-player';\r\nimport { RikikiTable } from '../../table-parts/table/rikiki-table';\r\n\r\n@Injectable()\r\nexport class RikikiService {\r\n\r\n  constructor() {}\r\n\r\n  private betAIRound1(\r\n    myTable: RikikiTable,\r\n    nrOfPlayers: number,\r\n    bettingPlayerIdx: number,\r\n    bettingPlayer: RikikiPlayer,\r\n    totalBets: number,\r\n    trumpCardSuit: number,\r\n    bettingPlayerLast: boolean\r\n  ): number {\r\n    let bet: number;\r\n    if (bettingPlayerLast) {\r\n      if (totalBets === 1) {\r\n        return 1; // az összfogadás nem egyezhet a körszámmal\r\n      } else if (totalBets === 0) {\r\n        return 0; // az összfogadás nem egyezhet a körszámmal\r\n      }\r\n    }\r\n\r\n    bet = -1;\r\n    for (let playerIdx = 0; bet !== 0 && playerIdx < nrOfPlayers; ++playerIdx) {\r\n      if (playerIdx !== bettingPlayerIdx\r\n        && trumpCardSuit === myTable.getPlayer(playerIdx).getCards()[0].getSuit()) {\r\n        bet = 0; // van másnál adu\r\n      }\r\n    }\r\n\r\n    if (bet < 0) {\r\n      const seenBigSuits: number[] = []; // adun kívüli más színben lévő nagy lapok (nincs másnál adu)\r\n      for (let playerIdx = 0; playerIdx < nrOfPlayers; ++playerIdx) {\r\n        if (playerIdx !== bettingPlayerIdx\r\n          && myTable.getPlayer(playerIdx).getCards()[0].getRank() > 9) {\r\n          const otherPlayerSuit = myTable.getPlayer(playerIdx).getCards()[0].getSuit();\r\n          if (!seenBigSuits.includes(otherPlayerSuit)) {\r\n            seenBigSuits.push(otherPlayerSuit);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (seenBigSuits.length === 3) {\r\n        bet = 0;\r\n      } else if (bettingPlayer.isStarter()) {\r\n        bet = 1; // nincs másnál adu vagy adun kívüli három különböző színben lévő nagy lapok és a játékos az első fogadó\r\n      } else {\r\n        for (let playerIdx = 0; playerIdx < nrOfPlayers; ++playerIdx) {\r\n          if (playerIdx !== bettingPlayerIdx\r\n            && myTable.getPlayer(playerIdx).isStarter()\r\n            && myTable.getPlayer(playerIdx).getBet() === 0) {\r\n            // nincs másnál adu vagy adun kívüli három különböző színben lévő nagy lapok\r\n            // és az első játékos nem fogadott magára\r\n            bet = 1;\r\n          }\r\n        }\r\n\r\n        if (bet < 0) {\r\n          bet = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    return bet;\r\n  }\r\n\r\n  private betAIRound2(\r\n    myTable: RikikiTable,\r\n    nrOfPlayers: number,\r\n    round: number,\r\n    bettingPlayerCards: Card[],\r\n    totalBets: number,\r\n    trumpCardSuit: number,\r\n    bettingPlayerLast: boolean\r\n  ): number {\r\n    let bet = 0;\r\n    const cardsIn = [true, true];\r\n    let totalCardsOut = 0;\r\n    let highTrumpCards = 0;\r\n    let lowTrumpCards = 0;\r\n\r\n    // adu kártya keresés\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()) {\r\n        if (bettingPlayerCards[i].getRank() > 9) {\r\n          ++bet;\r\n          ++highTrumpCards;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        } else if (bettingPlayerCards[i].getRank() <= 9) {\r\n          if (lowTrumpCards === 0) {\r\n            ++bet;\r\n          }\r\n          ++lowTrumpCards;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // ha van még fogadható lap, akkor ha van egy magas adu és mellette egy magas lap, akkor plusz egy ütés\r\n    if (totalCardsOut !== 2) {\r\n      for (let i = 0; i < round; ++i) {\r\n        if (cardsIn[i]\r\n          && highTrumpCards > 0\r\n          && bettingPlayerCards[i].getRank() > 10) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // ha a fogadás idáig nulla, akkor két nem adu színű magas lapra, ha az összegük nagyobb mint 23\r\n    // pl. minimum J + Q kombó, akkor a fogadás 1\r\n    if (bet === 0\r\n      && bettingPlayerCards[0].getRank() >= 11\r\n      && bettingPlayerCards[1].getRank() >= 11\r\n      && bettingPlayerCards[0].getRank() + bettingPlayerCards[1].getRank() > 23) {\r\n      ++bet;\r\n      // az összfogadás nem egyezhet a körszámmal ezért vissza kell vonni egy ütést\r\n      if (bettingPlayerLast && totalBets === 1) {\r\n        --bet;\r\n      }\r\n    } else if (totalCardsOut === 2) {\r\n      if (bettingPlayerLast) {\r\n        // két magas vagy egy magas és egy alacsony adura vagy egy magas adura és egy magas lapra a fogadás 2 volt,\r\n        // de az összfogadás 0 és az összegük nem egyezhet a körszámmal\r\n        if (totalBets === 0 && lowTrumpCards !== 2) {\r\n          --bet;\r\n        } else if (totalBets === 1 && lowTrumpCards === 2) {\r\n        // két alacsony adura a fogadás 1 volt, de az összfogadás is 1 és az összegük nem egyezhet a körszámmal\r\n          ++bet;\r\n        }\r\n      }\r\n    } else {\r\n      // ha legalább egy adu van\r\n      if (totalCardsOut === 1) {\r\n        // egy alacsony adu esetén a fogadás 1, de ha megelőzi 2-es fogadás, akkor 0-t fogad\r\n        if (lowTrumpCards === 1) {\r\n          for (let i = 0; i < nrOfPlayers; ++i) {\r\n            if (myTable.getPlayer(i).getBet() === 2) {\r\n              --bet;\r\n            }\r\n          }\r\n        }\r\n        // egy magas adu esetén a fogadás 1\r\n        // vagy egy alacsony adu esetén, ha nem előzi meg 2-es fogadás, akkor a fogadás 1\r\n        // de az összfogadás is 1 és az összegük nem egyezhet a körszámmal\r\n        if (bettingPlayerLast && totalBets === 1 && bet === 1) {\r\n          if (highTrumpCards > 0) {\r\n            ++bet;\r\n          } else {\r\n            --bet;\r\n          }\r\n        }\r\n      }\r\n      // rossz lapok vagy alacsony adura fogadás visszavonása (megelőzi 2-es fogadás) esetén a fogadás 0,\r\n      // de az összfogadás 2 és az összegük nem egyezhet a körszámmal\r\n      if (bettingPlayerLast && totalBets === 2 && bet === 0) {\r\n        ++bet;\r\n      }\r\n    }\r\n\r\n    return bet;\r\n  }\r\n\r\n  private betAIRound3OrHigher(\r\n    nrOfPlayers: number,\r\n    round: number,\r\n    bettingPlayerCards: Card[],\r\n    bettingPlayerLast: boolean,\r\n    totalBets: number,\r\n    trumpCardSuit: number\r\n  ): number {\r\n    const cardsIn: boolean[] = [];\r\n    let bet = 0;\r\n    let kings = 0;\r\n    let totalCardsOut = 0;\r\n    let highTrumpCards = 0;\r\n    let middleTrumpCards = 0;\r\n    let lowTrumpCards = 0;\r\n\r\n    for (let i = 0; i < round; i++) {\r\n      cardsIn.push(true);\r\n    }\r\n\r\n    // adu kártya keresés\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()\r\n        && bettingPlayerCards[i].getRank() > 11) {\r\n          ++bet;\r\n          ++highTrumpCards;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()\r\n        && bettingPlayerCards[i].getRank() <= 11\r\n        && bettingPlayerCards[i].getRank() >= 9) {\r\n        if ((highTrumpCards > 1 || middleTrumpCards < 2) && round * nrOfPlayers <= 36) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n        ++middleTrumpCards;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()\r\n        && bettingPlayerCards[i].getRank() < 9) {\r\n        if (lowTrumpCards !== 0 && (lowTrumpCards + 1) % 2 === 0 && round * nrOfPlayers <= 36) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n        ++lowTrumpCards;\r\n      }\r\n    }\r\n\r\n    // ha van még fogadható lap, akkor ha van egy magas adu és mellette egy magas lap, akkor plusz egy ütés\r\n    if (totalCardsOut !== round) {\r\n      let remainingTrumpCards = (middleTrumpCards + lowTrumpCards) - (totalCardsOut - highTrumpCards);\r\n      for (let i = 0; i < round; ++i) {\r\n        if (cardsIn[i]\r\n          && trumpCardSuit !== bettingPlayerCards[i].getSuit()\r\n          && bettingPlayerCards[i].getRank() > 11\r\n          && remainingTrumpCards > 0) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n          --remainingTrumpCards;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (bet === 0) {\r\n      for (let i = 0; i < round; ++i) {\r\n        if (bettingPlayerCards[i].getRank() === 14 && round < 5 && nrOfPlayers < 5) {\r\n          ++bet;\r\n        }\r\n        if (bettingPlayerCards[i].getRank() === 13 && round < 5 && nrOfPlayers < 5) {\r\n          ++bet;\r\n          ++kings;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (bettingPlayerLast && (totalBets + bet === round)) {\r\n      if (bet === round) {\r\n        --bet;\r\n      } else if (bet === 0) {\r\n        ++bet;\r\n      } else {\r\n        if (highTrumpCards === bet) {\r\n          ++bet;\r\n        } else if (kings > 0) {\r\n          --bet;\r\n        } else {\r\n          --bet;\r\n        }\r\n      }\r\n    }\r\n\r\n    return bet;\r\n  }\r\n\r\n  betAI(\r\n    myTable: RikikiTable,\r\n    trumpCard: Card,\r\n    nrOfPlayers: number,\r\n    round: number,\r\n    bettingPlayerIdx: number\r\n  ): number {\r\n    const bettingPlayer = myTable.getPlayer(bettingPlayerIdx);\r\n    const bettingPlayerCards = bettingPlayer.getCards();\r\n    const totalBets = myTable.getBetTotal();\r\n    const trumpCardSuit = trumpCard.getSuit();\r\n    const bettingPlayerLast = bettingPlayer.isLast();\r\n    if (round === 1) {\r\n      return this.betAIRound1(\r\n        myTable,\r\n        nrOfPlayers,\r\n        bettingPlayerIdx,\r\n        bettingPlayer,\r\n        totalBets,\r\n        trumpCardSuit,\r\n        bettingPlayerLast\r\n      );\r\n    } else if (round === 2) {\r\n      return this.betAIRound2(\r\n        myTable,\r\n        nrOfPlayers,\r\n        round,\r\n        bettingPlayerCards,\r\n        totalBets,\r\n        trumpCardSuit,\r\n        bettingPlayerLast\r\n      );\r\n    } else {\r\n      return this.betAIRound3OrHigher(\r\n        nrOfPlayers,\r\n        round,\r\n        bettingPlayerCards,\r\n        bettingPlayerLast,\r\n        totalBets,\r\n        trumpCardSuit\r\n      );\r\n    }\r\n  }\r\n\r\n  private tryToBeatTrumpCard(\r\n    myTable: RikikiTable,\r\n    player: RikikiPlayer,\r\n    playerCards: Card[],\r\n    trumpCardSuit: number,\r\n  ): number {\r\n    let cardIdx = player.findHighestTrumpCard(trumpCardSuit);\r\n    const cardsOnTable = myTable.checkCardsOnTable();\r\n    // Az asztalon lévő adu kártyáknál van-e nagyobb adukártyája a játékosnak\r\n    // ha nincs a legkisebbet teszi\r\n    if (cardIdx !== -1) {\r\n      let higherRankFound = false;\r\n      for (let i = 0; !higherRankFound && i < cardsOnTable.length; ++i) {\r\n        if (cardsOnTable[i].getSuit() === trumpCardSuit\r\n          && cardsOnTable[i].getRank() > playerCards[cardIdx].getRank()) {\r\n          cardIdx = player.findLowestTrumpCard(trumpCardSuit);\r\n          higherRankFound = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cardIdx;\r\n  }\r\n\r\n  selectCardAI(\r\n    myTable: RikikiTable,\r\n    trumpCard: Card,\r\n    round: number,\r\n    playerIdx: number\r\n  ): number {\r\n    const trumpCardSuit = trumpCard.getSuit();\r\n    const player = myTable.getPlayer(playerIdx);\r\n    const playerCards = player.getCards();\r\n    const playerBet = player.getBet();\r\n    let cardIdx = -1;\r\n    let firstCardSuit = -1;\r\n\r\n    if (player.isStarter()) {\r\n      if (playerBet === round) {\r\n        cardIdx = player.findHighestTrumpCard(trumpCardSuit);\r\n        if (cardIdx === -1) {\r\n          cardIdx = player.findPlayerHighestCard();\r\n        }\r\n\r\n        return cardIdx;\r\n      }\r\n\r\n      if (playerBet <= 1) {\r\n        cardIdx = player.findHighestTrumpCard(trumpCardSuit);\r\n        if (cardIdx > -1) {\r\n          cardIdx = player.findLowestCard(trumpCardSuit, trumpCardSuit);\r\n        }\r\n        if (cardIdx === -1) {\r\n          cardIdx = player.findPlayerLowestCard();\r\n        }\r\n\r\n        return cardIdx;\r\n      }\r\n    }\r\n\r\n    if (!myTable.isTableEmpty()) {\r\n      firstCardSuit = myTable.getFirstCard().getSuit();\r\n    }\r\n\r\n    if (playerBet <= 0) {\r\n      if (playerBet === 0) {\r\n        for (let i = 0; cardIdx === -1 && i < playerCards.length; ++i) {\r\n          if (firstCardSuit !== trumpCardSuit && firstCardSuit === playerCards[i].getSuit()) {\r\n            cardIdx = player.findLowestSuitCard(firstCardSuit);\r\n          }\r\n        }\r\n\r\n        if (firstCardSuit === trumpCardSuit\r\n          || (firstCardSuit !== trumpCardSuit && player.getSortedCards()[suits[trumpCardSuit - 1]].length)) {\r\n          cardIdx = player.findLowestTrumpCard(trumpCardSuit);\r\n        }\r\n\r\n        if (cardIdx === -1) {\r\n          cardIdx = player.findHighestCard(trumpCardSuit, firstCardSuit);\r\n        }\r\n      }\r\n    } else {\r\n      // ha legalább egy ütés lett fogadva\r\n      // a nyitó színben, ha az nem adu, tegye a legnagyobbat\r\n      if (firstCardSuit !== trumpCardSuit) {\r\n        for (let i = 0; cardIdx === -1 && i < playerCards.length; ++i) {\r\n          if (firstCardSuit === playerCards[i].getSuit()) {\r\n            cardIdx = player.findHighestSuitCard(firstCardSuit);\r\n          }\r\n        }\r\n      // ha a nyitó szín adu\r\n      } else if (firstCardSuit === trumpCardSuit) {\r\n        let highTrumpCards = 0;\r\n        for (let i = 0; i < playerCards.length; ++i) {\r\n          if (trumpCardSuit === playerCards[i].getSuit() && playerCards[i].getRank() > 9) {\r\n            highTrumpCards += 1;\r\n          }\r\n        }\r\n        if (highTrumpCards > 2) {\r\n          cardIdx = this.tryToBeatTrumpCard(myTable, player, playerCards, trumpCardSuit);\r\n        } else {\r\n          cardIdx = player.findLowestTrumpCard(trumpCardSuit);\r\n        }\r\n      }\r\n      // ha nincs a nyitó színben lapja és a nyitó szín nem adu\r\n      if (cardIdx === -1) {\r\n        cardIdx = this.tryToBeatTrumpCard(myTable, player, playerCards, trumpCardSuit);\r\n      }\r\n      // ha nincs a nyitó színben lapja és a nyitó szín nem adu és nincs aduja, tegye a legkisebb kártyát\r\n      if (cardIdx === -1) {\r\n        cardIdx = player.findLowestCard(trumpCardSuit, firstCardSuit);\r\n      }\r\n    }\r\n\r\n    return cardIdx;\r\n  }\r\n\r\n}\r\n","export default \".home-container__settings-panel {\\n  width: 468px;\\n  margin: 250px auto;\\n  background-color: var(--primary-lighter-color);\\n}\\n.home-container__settings-panel_row {\\n  width: 100%;\\n  height: 48px;\\n}\\n.home-container__settings-panel_row .player-name {\\n  width: 108px;\\n  background-color: var(--primary-lighter-color);\\n  outline: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcZ2l0XFxjYXJkLWdhbWVzL3NyY1xcYXBwXFxob21lXFxob21lLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSw4Q0FBQTtBQ0FKO0FERUk7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQ0FOO0FERU07RUFDRSxZQUFBO0VBQ0EsOENBQUE7RUFDQSxhQUFBO0FDQVIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9tZS1jb250YWluZXIge1xyXG4gICZfX3NldHRpbmdzLXBhbmVsIHtcclxuICAgIHdpZHRoOiA0NjhweDtcclxuICAgIG1hcmdpbjogMjUwcHggYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHRlci1jb2xvcik7XHJcblxyXG4gICAgJl9yb3cge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiA0OHB4O1xyXG5cclxuICAgICAgLnBsYXllci1uYW1lIHtcclxuICAgICAgICB3aWR0aDogMTA4cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5ob21lLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWwge1xuICB3aWR0aDogNDY4cHg7XG4gIG1hcmdpbjogMjUwcHggYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcbn1cbi5ob21lLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWxfcm93IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDhweDtcbn1cbi5ob21lLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWxfcm93IC5wbGF5ZXItbmFtZSB7XG4gIHdpZHRoOiAxMDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcbiAgb3V0bGluZTogbm9uZTtcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {\r\n\r\n  public currLang: string;\r\n  public playerNameTemp: string;\r\n\r\n  private playerName: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private localStorage: LocalStorageService,\r\n    private translate: TranslateService,\r\n  ) {\r\n    this.currLang = this.localStorage.retrieve('lang');\r\n    this.langChange(this.currLang);\r\n    this.playerNameTemp = this.localStorage.retrieve('name');\r\n    if (this.playerNameTemp) {\r\n      this.setPlayerName();\r\n    } else {\r\n      this.playerName = 'player';\r\n    }\r\n  }\r\n\r\n  langChange(lang: string) {\r\n    this.translate.use(lang);\r\n    this.localStorage.store('lang', lang);\r\n  }\r\n\r\n  setPlayerName() {\r\n    this.playerName = this.playerNameTemp;\r\n    this.localStorage.store('name', this.playerName);\r\n  }\r\n\r\n  goToRikiki() {\r\n    this.router.navigate(['rikiki'], {\r\n      state: { data: { playerName: this.playerName } },\r\n    });\r\n  }\r\n\r\n  goToHearts() {\r\n    this.router.navigate(['hearts'], {\r\n      state: { data: { playerName: this.playerName } },\r\n    });\r\n  }\r\n}\r\n","export class Card {\r\n    private suit: number;\r\n    private rank: number;\r\n    /*\r\n    * CLUBS = 1;\r\n    * DIAMONDS = 2;\r\n    * HEARTS = 3;\r\n    * SPADES = 4;\r\n    * DEUCE = 2;\r\n    * THREE = 3;\r\n    * FOUR = 4;\r\n    * FIVE = 5;\r\n    * SIX = 6;\r\n    * SEVEN = 7;\r\n    * EIGHT = 8;\r\n    * NINE = 9;\r\n    * TEN = 10;\r\n    * JACK = 11;\r\n    * QUEEN = 12;\r\n    * KING = 13;\r\n    * ACE = 14;\r\n    */\r\n\r\n    constructor(suit: number, rank: number) {\r\n        if (this.isValidRank(rank) && this.isValidSuit(suit)) {\r\n            this.rank = rank;\r\n            this.suit = suit;\r\n        } else {\r\n            console.log(`Creat card failed suit ${suit} rank ${rank}`);\r\n        }\r\n    }\r\n\r\n    public getSuit(): number {\r\n        return this.suit;\r\n    }\r\n\r\n    public getRank(): number {\r\n        return this.rank;\r\n    }\r\n\r\n    public printCard(): string {\r\n        return `${this.rankToString(this.rank)}${this.suitToString(this.suit)}`;\r\n    }\r\n\r\n    public isValidRank(rank: number): boolean {\r\n        return rank === 0 || 2 <= rank && rank <= 14;\r\n    }\r\n\r\n    public isValidSuit(suit: number): boolean {\r\n        return suit === 0 || 1 <= suit && suit <= 4;\r\n    }\r\n\r\n    public rankToString(rank: number): string {\r\n        switch (rank) {\r\n            case 2:\r\n                return '2';\r\n            case 3:\r\n                return '3';\r\n            case 4:\r\n                return '4';\r\n            case 5:\r\n                return '5';\r\n            case 6:\r\n                return '6';\r\n            case 7:\r\n                return '7';\r\n            case 8:\r\n                return '8';\r\n            case 9:\r\n                return '9';\r\n            case 10:\r\n                return '10';\r\n            case 11:\r\n                return 'J';\r\n            case 12:\r\n                return 'Q';\r\n            case 13:\r\n                return 'K';\r\n            case 14:\r\n                return 'A';\r\n            default:\r\n                return '0';\r\n        }\r\n    }\r\n\r\n    public suitToString(suit: number): string {\r\n        switch (suit) {\r\n            case 1:\r\n                return 'C';\r\n            case 2:\r\n                return 'D';\r\n            case 3:\r\n                return 'H';\r\n            case 4:\r\n                return 'S';\r\n            default:\r\n                return '0';\r\n        }\r\n    }\r\n}\r\n","import { Card } from './card';\r\n\r\nexport const nullCard = new Card(0, 0);\r\nexport const clubTwo = new Card(1, 2);\r\nexport const spadeQueen = new Card(4, 12);\r\nexport const spadeKing = new Card(4, 13);\r\nexport const spadeAce = new Card(4, 14);\r\n\r\nexport const isSpecificCard = (cardToExamin: Card, cardToCompare: Card) => {\r\n  return cardToExamin.getSuit() === cardToCompare.getSuit() && cardToExamin.getRank() === cardToCompare.getRank();\r\n};\r\nexport const isSpecificCardIncluded = (cards: Card[], cardToFind: Card) => {\r\n  return cards?.filter(card => isSpecificCard(card, cardToFind)).length;\r\n};\r\n","import { Card } from '../card/card';\r\n\r\nexport class Deck {\r\n    private deck: Card[] = [];\r\n\r\n    constructor() {\r\n        for (let i = 1; i < 5; ++i) {\r\n            for (let j = 2; j < 15; ++j) {\r\n                this.deck.push(new Card(i, j));\r\n            }\r\n        }\r\n\r\n        Deck.shuffle(this.deck);\r\n    }\r\n\r\n    static shuffle(array: Card[]): Card[] {\r\n        let currentIndex = array.length;\r\n        let temporaryValue: Card;\r\n        let randomIndex: number;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n\r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n      }\r\n\r\n      public getDeck() {\r\n        return this.deck;\r\n    }\r\n}\r\n","import { Player } from './player';\r\nimport { Card } from '../card/card';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { Suit } from '../suit/suit';\r\nimport { suits } from '../suit/suits';\r\n\r\n\r\nexport class HeartsPlayer extends Player {\r\n\r\n  private startegyTakeAll = false;\r\n  private cardsToSwap: Card[] = [];\r\n\r\n  constructor(name: string) {\r\n    super(name);\r\n  }\r\n\r\n  setScore() {\r\n    this.score += this.real;\r\n  }\r\n\r\n  addCard(card: Card) {\r\n    super.addCard(card);\r\n    this.sortPlayerCards();\r\n  }\r\n\r\n  removeCard(cardToRemove: Card) {\r\n    const suit = suits[cardToRemove.getSuit() - 1];\r\n    const properSuitsArray = this.sortedCards[suit];\r\n    this.sortedCards[suit] = properSuitsArray.filter((card: { getRank: () => number; }) => card.getRank() !== cardToRemove.getRank());\r\n\r\n    this.sortPlayerCards();\r\n  }\r\n\r\n  removeCardByIdx(indexOf: number): Card {\r\n    const removedCard = super.removeCardByIdx(indexOf);\r\n    this.sortPlayerCards();\r\n\r\n    return removedCard;\r\n  }\r\n\r\n  sortPlayerCards() {\r\n    super.sortPlayerCards([Suit.HEART, Suit.SPADE, Suit.DIAMOND, Suit.CLUB]);\r\n  }\r\n\r\n  isStartegyTakeAll(): boolean {\r\n    return this.startegyTakeAll;\r\n  }\r\n\r\n  setStartegyTakeAll(takeAll: boolean) {\r\n    this.startegyTakeAll = takeAll;\r\n  }\r\n\r\n  addCardToSwap(card: Card) {\r\n    this.cardsToSwap.push(card);\r\n  }\r\n\r\n  getCardsToSwap(): Card[] {\r\n    const cardsToSwapTemp = cloneDeep(this.cardsToSwap);\r\n    this.cardsToSwap = [];\r\n    return cardsToSwapTemp;\r\n  }\r\n}\r\n","import { SortedCards } from 'src/app/interfaces/sorted-cards.interface';\r\nimport { Card } from '../card/card';\r\nimport { Suit } from '../suit/suit';\r\nimport { suits } from '../suit/suits';\r\n\r\nexport abstract class Player {\r\n  protected name: string;\r\n  protected cards: Card[] = [];\r\n  protected sortedCards: SortedCards = {\r\n    clubs: [],\r\n    diamonds: [],\r\n    hearts: [],\r\n    spades: [],\r\n  };\r\n  protected bet = -1;\r\n  protected real = 0;\r\n  protected score = 0;\r\n  protected starter = false;\r\n  protected last = false;\r\n\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  setName(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  hasCard(): boolean {\r\n    return !!this.cards.length;\r\n  }\r\n\r\n  addCard(card: Card) {\r\n    const cardSuitArray = this.sortedCards[suits[card.getSuit() - 1]];\r\n    let inserted = false;\r\n    if (!cardSuitArray.length) {\r\n      cardSuitArray.push(card);\r\n    } else {\r\n      for (let i = 0; !inserted && i < cardSuitArray.length; i++) {\r\n        if (card.getRank() < cardSuitArray[i].getRank()) {\r\n          inserted = true;\r\n          cardSuitArray.splice(i, 0, card);\r\n        }\r\n      }\r\n      if (!inserted) {\r\n        cardSuitArray.push(card);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCardByIdx(indexOf: number): Card {\r\n    const cardToRemove = this.cards.splice(indexOf, 1)[0];\r\n    const suit = suits[cardToRemove.getSuit() - 1];\r\n    const properSuitsArray = this.sortedCards[suit];\r\n    this.sortedCards[suit] = properSuitsArray.filter((card: { getRank: () => number; }) => card.getRank() !== cardToRemove.getRank());\r\n\r\n    return cardToRemove;\r\n  }\r\n\r\n  getCards(): Card[] {\r\n    return this.cards;\r\n  }\r\n\r\n  getSortedCards(): SortedCards {\r\n    return this.sortedCards;\r\n  }\r\n\r\n  getSortedCardsLength(): number {\r\n    return this.sortedCards.clubs.length\r\n      + this.sortedCards.diamonds.length\r\n      + this.sortedCards.hearts.length\r\n      + this.sortedCards.spades.length;\r\n  }\r\n\r\n  sortPlayerCards(suitOrder: number[]) {\r\n    this.cards = [\r\n      ...this.sortedCards[suits[suitOrder[0] - 1]],\r\n      ...this.sortedCards[suits[suitOrder[1] - 1]],\r\n      ...this.sortedCards[suits[suitOrder[2] - 1]],\r\n      ...this.sortedCards[suits[suitOrder[3] - 1]]\r\n    ];\r\n  }\r\n\r\n  private findCard(trumpSuit?: number, playerSuit?: number, highestCardRank?: number, lowestCardRank?: number): number {\r\n    let cardIndex = -1;\r\n\r\n    for (let i = 0; i < this.cards.length; ++i) {\r\n      const currentSuit = this.cards[i].getSuit();\r\n      const currentRank = this.cards[i].getRank();\r\n      const highestRank = highestCardRank !== undefined && highestCardRank < currentRank;\r\n      const lowestRank = lowestCardRank !== undefined && lowestCardRank > currentRank;\r\n      if (trumpSuit === undefined || playerSuit === undefined) {\r\n        const suit = trumpSuit !== undefined ? trumpSuit : playerSuit;\r\n        if (suit === currentSuit) {\r\n          if (highestRank) {\r\n            highestCardRank = currentRank;\r\n            cardIndex = i; // highest suit\r\n          } else if (lowestRank) {\r\n            lowestCardRank = currentRank;\r\n            cardIndex = i; // lowest suit\r\n          }\r\n        }\r\n      } else if (trumpSuit !== currentSuit && playerSuit !== currentSuit) {\r\n          if (highestRank) {\r\n            highestCardRank = currentRank;\r\n            cardIndex = i;\r\n          } else if (lowestRank) {\r\n            lowestCardRank = currentRank;\r\n            cardIndex = i;\r\n          }\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n\r\n  findHighestTrumpCard(trumpSuit: number): number {\r\n    return this.findCard(trumpSuit, undefined, 0, undefined);\r\n  }\r\n\r\n  findLowestTrumpCard(trumpSuit: number): number {\r\n    return this.findCard(trumpSuit, undefined, undefined, 15);\r\n  }\r\n\r\n  findHighestSuitCard(playerStarterSuit: number): number {\r\n    return this.findCard(undefined, playerStarterSuit, 0, undefined);\r\n  }\r\n\r\n  findLowestSuitCard(playerStarterSuit: number): number {\r\n    return this.findCard(undefined, playerStarterSuit, undefined, 15);\r\n  }\r\n\r\n  findHighestCard(trumpCardSuit: number, playerStarterSuit: number): number {\r\n    return this.findCard(trumpCardSuit, playerStarterSuit, 0, undefined);\r\n  }\r\n\r\n  findLowestCard(trumpCardSuit: number, playerStarterSuit: number): number {\r\n    return this.findCard(trumpCardSuit, playerStarterSuit, undefined, 15);\r\n  }\r\n\r\n  findPlayerHighestCard(): number {\r\n    let cardIndex = -1;\r\n    let highestCardRank = 0;\r\n\r\n    for (let i = 0; i < this.cards.length; ++i) {\r\n      const currentRank = this.cards[i].getRank();\r\n      if (highestCardRank < currentRank) {\r\n        highestCardRank = currentRank;\r\n        cardIndex = i;\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n\r\n  findPlayerLowestCard(): number {\r\n    let cardIndex = -1;\r\n    let lowestCardRank = 15;\r\n\r\n    for (let i = 0; i < this.cards.length; ++i) {\r\n      const currentRank = this.cards[i].getRank();\r\n      if (lowestCardRank > currentRank) {\r\n        lowestCardRank = currentRank;\r\n        cardIndex = i;\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n\r\n  /**\r\n  * Legnagyobb értékű kártya keresése a megadott színek között\r\n  *\r\n  * @param selectedSuits\r\n  * A megadott kártya színek amelyekben a keresés történjen\r\n  *\r\n  * @return\r\n  * A legnagyobb értékű kártya, ha több van a megadott prioritás szerint választódik\r\n  *\r\n  */\r\n findHighestCardInSortedCards(selectedSuits: number[]): Card {\r\n  const highCards: Card[] = [];\r\n\r\n  selectedSuits.forEach(suitNr => {\r\n    const suitCards = this.sortedCards[suits[suitNr - 1]];\r\n    if (suitCards.length) {\r\n      highCards.push(suitCards[suitCards.length - 1]);\r\n    }\r\n  });\r\n\r\n  highCards.sort((a, b) => (a.getRank() < b.getRank()) ? 1 : -1);\r\n\r\n  return highCards[0];\r\n}\r\n\r\n  /**\r\n  * Legkisebb értékű kártya keresése a megadott színek között\r\n  *\r\n  * @param selectedSuits\r\n  * A megadott kártya színek amelyekben a keresés történjen\r\n  *\r\n  * @return\r\n  * A legkisebb értékű kártya, ha több van a megadott prioritás szerint választódik\r\n  *\r\n  */\r\n  findLowestCardInSortedCards(selectedSuits: number[]): Card {\r\n    const lowestCards: Card[] = [];\r\n\r\n    selectedSuits.forEach(suitNr => {\r\n      const suitCards = this.sortedCards[suits[suitNr - 1]];\r\n      if (suitCards.length) {\r\n        lowestCards.push(suitCards[0]);\r\n      }\r\n    });\r\n\r\n    lowestCards.sort((a, b) => (a.getRank() > b.getRank()) ? 1 : -1);\r\n\r\n    return lowestCards[0];\r\n  }\r\n\r\n  getBet(): number {\r\n    return this.bet;\r\n  }\r\n\r\n  setBet(bet: number) {\r\n    this.bet = bet;\r\n  }\r\n\r\n  getReal(): number {\r\n    return this.real;\r\n  }\r\n\r\n  addReal(real: number) {\r\n    this.real += real;\r\n  }\r\n\r\n  resetReal() {\r\n    this.real = 0;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  resetScore() {\r\n    this.score = 0;\r\n  }\r\n\r\n  abstract setScore(): void;\r\n\r\n  isStarter(): boolean {\r\n    return this.starter;\r\n  }\r\n\r\n  setStarter(starter: boolean) {\r\n    this.starter = starter;\r\n  }\r\n\r\n  isLast(): boolean {\r\n    return this.last;\r\n  }\r\n\r\n  setLast(last: boolean) {\r\n    this.last = last;\r\n  }\r\n}\r\n","import { Card } from '../card/card';\r\nimport { Suit } from '../suit/suit';\r\nimport { Player } from './player';\r\n\r\nexport class RikikiPlayer extends Player {\r\n\r\n  constructor(name: string) {\r\n    super(name);\r\n  }\r\n\r\n  setScore() {\r\n    let score = 0;\r\n    if (this.bet === this.real) {\r\n      score += 10 + this.real * 2;\r\n    }\r\n\r\n    if (this.bet > this.real) {\r\n      score -= (this.bet - this.real) * 2;\r\n    }\r\n\r\n    if (this.bet < this.real) {\r\n      score -= (this.real - this.bet) * 2;\r\n    }\r\n\r\n    this.score += score;\r\n  }\r\n\r\n  addCard(card: Card) {\r\n    super.addCard(card);\r\n    this.sortPlayerCards();\r\n  }\r\n\r\n  removeCardByIdx(indexOf: number): Card {\r\n    const removedCard = super.removeCardByIdx(indexOf);\r\n    this.sortPlayerCards();\r\n\r\n    return removedCard;\r\n  }\r\n\r\n  sortPlayerCards() {\r\n    super.sortPlayerCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART, Suit.SPADE]);\r\n  }\r\n}\r\n","export enum Suit {\r\n    CLUB = 1,\r\n    DIAMOND = 2,\r\n    HEART = 3,\r\n    SPADE = 4,\r\n}\r\n","export const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\r\n","import { Table } from './table';\r\nimport { HeartsPlayer } from '../player/hearts-player';\r\nimport { Card } from '../card/card';\r\nimport { Suit } from '../suit/suit';\r\nimport { isSpecificCard, spadeQueen } from '../card/cards';\r\n\r\nexport class HeartsTable extends Table {\r\n\r\n  private players: HeartsPlayer[] = [];\r\n  private spadeQueenOut = false;\r\n  private heartsBroken = false;\r\n\r\n  constructor(nrOfPlayers: number) {\r\n    super(nrOfPlayers);\r\n\r\n    for (let i = 1; i <= nrOfPlayers; ++i) {\r\n      const str = `Player${i}`;\r\n      this.players.push(new HeartsPlayer(str));\r\n    }\r\n  }\r\n\r\n  getPlayers(): HeartsPlayer[] {\r\n    return this.players;\r\n  }\r\n\r\n  getPlayer(nrOfPlayer: number): HeartsPlayer {\r\n    return this.players[nrOfPlayer];\r\n  }\r\n\r\n  setStarterAndLastPlayer(starterPlayer: number) {\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (i === starterPlayer) {\r\n        this.getPlayer(i).setStarter(true);\r\n      } else {\r\n        this.getPlayer(i).setStarter(false);\r\n      }\r\n\r\n      if (i === (this.nrOfPlayers + starterPlayer - 1) % this.nrOfPlayers) {\r\n        this.getPlayer(i).setLast(true);\r\n      } else {\r\n        this.getPlayer(i).setLast(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  getStarter(): number {\r\n    let starter = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isStarter()) {\r\n        starter = i;\r\n      }\r\n    }\r\n\r\n    return starter;\r\n  }\r\n\r\n  getLastPlayer(): number {\r\n    let lastPlayer = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isLast()) {\r\n        lastPlayer = i;\r\n      }\r\n    }\r\n\r\n    return lastPlayer;\r\n  }\r\n\r\n  isSpadeQueenOut() {\r\n    return this.spadeQueenOut;\r\n  }\r\n\r\n  isHeartsBroken() {\r\n    return this.heartsBroken;\r\n  }\r\n\r\n  resetHeartsBroken() {\r\n    this.heartsBroken = false;\r\n    this.spadeQueenOut = false;\r\n  }\r\n\r\n  putCardOnTable(playerIdx: number, card: Card) {\r\n    super.putCardOnTable(playerIdx, card);\r\n    if (isSpecificCard(card, spadeQueen)) {\r\n      this.spadeQueenOut = true;\r\n      this.heartsBroken = true;\r\n    }\r\n    if (card.getSuit() === Suit.HEART) {\r\n      this.heartsBroken = true;\r\n    }\r\n  }\r\n\r\n  findTurnTaker(): number {\r\n    let playerIndex = -1;\r\n    let highestCardRank = 0;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const currentSuit = this.cardsOnTable[i].getSuit();\r\n      const currentRank = this.cardsOnTable[i].getRank();\r\n      if (this.firstCard.getSuit() === currentSuit && highestCardRank < currentRank) {\r\n        highestCardRank = currentRank;\r\n        playerIndex = i;\r\n      }\r\n    }\r\n\r\n    return playerIndex;\r\n  }\r\n\r\n  getCardPoints(): number {\r\n    let points = 0;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const currentCard = this.cardsOnTable[i];\r\n      if (currentCard.getSuit() === Suit.HEART) {\r\n        points += 1;\r\n      } else if (isSpecificCard(currentCard, spadeQueen)) {\r\n        points += 13;\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n}\r\n","import { Table } from './table';\r\nimport { RikikiPlayer } from '../player/rikiki-player';\r\n\r\nexport class RikikiTable extends Table {\r\n\r\n  private players: RikikiPlayer[] = [];\r\n  private betTotal = 0;\r\n\r\n  constructor(nrOfPlayers: number) {\r\n    super(nrOfPlayers);\r\n\r\n    for (let i = 1; i <= nrOfPlayers; ++i) {\r\n      const str = `Player${i}`;\r\n      this.players.push(new RikikiPlayer(str));\r\n    }\r\n  }\r\n\r\n  getPlayers(): RikikiPlayer[] {\r\n    return this.players;\r\n  }\r\n\r\n  getPlayer(nrOfPlayer: number): RikikiPlayer {\r\n    return this.players[nrOfPlayer];\r\n  }\r\n\r\n  setStarterAndLastPlayer(starterPlayer: number) {\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (i === starterPlayer) {\r\n        this.getPlayer(i).setStarter(true);\r\n      } else {\r\n        this.getPlayer(i).setStarter(false);\r\n      }\r\n\r\n      if (i === (this.nrOfPlayers + starterPlayer - 1) % this.nrOfPlayers) {\r\n        this.getPlayer(i).setLast(true);\r\n      } else {\r\n        this.getPlayer(i).setLast(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  getStarter(): number {\r\n    let starter = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isStarter()) {\r\n        starter = i;\r\n      }\r\n    }\r\n\r\n    return starter;\r\n  }\r\n\r\n  getLastPlayer(): number {\r\n    let lastPlayer = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isLast()) {\r\n        lastPlayer = i;\r\n      }\r\n    }\r\n\r\n    return lastPlayer;\r\n  }\r\n\r\n  getBetTotal(): number {\r\n    return this.betTotal;\r\n  }\r\n\r\n  setBetTotal(betTotal: number) {\r\n    this.betTotal = betTotal;\r\n  }\r\n\r\n}\r\n","import { Card } from '../card/card';\r\nimport { nullCard } from '../card/cards';\r\nimport { Deck } from '../deck/deck';\r\n\r\nexport class Table {\r\n  private deck: Card[] = [];\r\n  protected nrOfPlayers: number;\r\n  protected cardsOnTable: Card[] = [];\r\n  protected firstCard = nullCard;\r\n\r\n  constructor(nrOfPlayers: number) {\r\n    this.nrOfPlayers = nrOfPlayers;\r\n\r\n    const deckOfCards = new Deck();\r\n    this.deck = deckOfCards.getDeck();\r\n    this.initCardsOnTable();\r\n  }\r\n\r\n  initCardsOnTable() {\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      this.cardsOnTable[i] = nullCard;\r\n    }\r\n  }\r\n\r\n  shuffleDeck() {\r\n    Deck.shuffle(this.deck);\r\n  }\r\n\r\n  getDeck() {\r\n    return this.deck;\r\n  }\r\n\r\n  getCardFromDeck(): Card {\r\n    return this.deck.splice(0, 1)[0];\r\n  }\r\n\r\n  addCardToDeck(card: Card) {\r\n    this.deck.push(card);\r\n  }\r\n\r\n  getTrumpCard(): Card {\r\n    return this.getCardFromDeck();\r\n  }\r\n\r\n  nrOfCardsOnTable(): number {\r\n    let nrOfCards = 0;\r\n    for (let i = 0; i < this.cardsOnTable.length; i++) {\r\n      if (!!this.cardsOnTable[i].getSuit()) {\r\n        ++nrOfCards;\r\n      }\r\n    }\r\n    return nrOfCards;\r\n  }\r\n\r\n  getFirstCard(): Card {\r\n    return this.firstCard;\r\n  }\r\n\r\n  checkCardSlotsOnTable(): Card[] {\r\n    return this.cardsOnTable;\r\n  }\r\n\r\n  checkCardsOnTable(): Card[] {\r\n    const cardsOnTable: Card[] = [];\r\n    for (let i = 0; i < this.cardsOnTable.length; i++) {\r\n      if (this.cardsOnTable[i].getSuit()) {\r\n        cardsOnTable.push(this.cardsOnTable[i]);\r\n      }\r\n    }\r\n    return cardsOnTable;\r\n  }\r\n\r\n  checkCardOnTable(indexOf: number): Card {\r\n    return this.cardsOnTable[indexOf];\r\n  }\r\n\r\n  isTableEmpty(): boolean {\r\n    return !this.cardsOnTable.filter(card => card !== nullCard).length;\r\n  }\r\n\r\n  putCardOnTable(playerIdx: number, card: Card) {\r\n    if (!this.firstCard.getSuit()) {\r\n      this.firstCard = card;\r\n    }\r\n    this.cardsOnTable.splice(playerIdx, 1, card);\r\n  }\r\n\r\n  removeCardsFromTable() {\r\n    this.deck = [...this.deck, ...this.checkCardsOnTable()];\r\n    this.initCardsOnTable();\r\n    this.firstCard = nullCard;\r\n  }\r\n\r\n  findHighestCardOnTable(trumpCardSuit: number): number {\r\n    let cardIndex = -1;\r\n    let highestCardRank = 0;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const currentSuit = this.cardsOnTable[i].getSuit();\r\n      const currentRank = this.cardsOnTable[i].getRank();\r\n      if (trumpCardSuit === currentSuit && highestCardRank < currentRank) {\r\n        highestCardRank = currentRank;\r\n        cardIndex = i;\r\n      }\r\n    }\r\n\r\n    if (cardIndex === -1) {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        const currentSuit = this.cardsOnTable[i].getSuit();\r\n        const currentRank = this.cardsOnTable[i].getRank();\r\n        if (this.firstCard.getSuit() === currentSuit && highestCardRank < currentRank) {\r\n          highestCardRank = currentRank;\r\n          cardIndex = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}