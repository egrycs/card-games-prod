{"version":3,"sources":["webpack:///src/app/app.component.html","webpack:///src/app/games/hearts/hearts.component.html","webpack:///src/app/games/rikiki/rikiki.component.html","webpack:///src/app/home/home.component.html","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/games/hearts/hearts.component.scss","webpack:///src/app/games/hearts/hearts.component.ts","webpack:///src/app/games/hearts/hearts.service.ts","webpack:///src/app/games/rikiki/rikiki.component.scss","webpack:///src/app/games/rikiki/rikiki.component.ts","webpack:///src/app/games/rikiki/rikiki.service.ts","webpack:///src/app/home/home.component.scss","webpack:///src/app/home/home.component.ts","webpack:///src/app/table-parts/card/card.ts","webpack:///src/app/table-parts/card/cards.ts","webpack:///src/app/table-parts/deck/deck.ts","webpack:///src/app/table-parts/player/hearts-player.ts","webpack:///src/app/table-parts/player/player.ts","webpack:///src/app/table-parts/player/rikiki-player.ts","webpack:///src/app/table-parts/suit/suit.ts","webpack:///src/app/table-parts/suit/suits.ts","webpack:///src/app/table-parts/table/hearts-table.ts","webpack:///src/app/table-parts/table/rikiki-table.ts","webpack:///src/app/table-parts/table/table.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__createBinding","o","m","k","k2","undefined","__exportStar","exports","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","receiver","privateMap","has","get","__classPrivateFieldSet","set","webpackEmptyAsyncContext","req","Error","code","keys","module","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","imports","forRoot","onSameUrlNavigation","AppComponent","localStorage","translate","defaultLang","currLang","retrieve","setDefaultLang","store","selector","template","createTranslateLoader","http","AppModule","declarations","prefix","caseSensitive","loader","provide","useFactory","deps","providers","bootstrap","HeartsComponent","element","heartsService","imgUrlPrefix","imgUrlSuffix","defaultMsg","type","msg","subMsg","translateParams","deckSize","playerNames","nrOfPlayers","swapDirections","placeholderCardImgUrl","cardBackImgUrl","swapDirectionImgUrl","players","cardUrls","myCardUrl","allMessage","history","myTable","endOfGame","endOfRound","endOf3CardsSelection","selectedCardsToSwap","endOfSelection","playerName","state","data","leaveGame","card","printCard","initGame","newRound","round","resetHeartsBroken","swapDirectionIdx","showTableCards","player","resetReal","playerIdx","getPlayer","addCard","getCardFromDeck","sortPlayerCards","select3CardToSwap","moveToSwap","swapDirection","playerWhoGive","playerWhoRecieves","cardsOfPlayerWhoGive","getCardsToSwap","cardToGive","setStarterAndPlayTurn","playerIsStarter","selectedCard","playerCards","playerCardsLength","firstCardSuit","selectedCardSuit","getSuit","isOnlyHearts","hearts","isOnlyHeartsAndSpadeQueen","spades","heartsAndSpadeQueenException","notHeartsOrSpadeQueenSelected","HEART","clubTwoselected","isHeartsBroken","isSelectedValid","hasFirstCardSuit","invalidSuitSelection","openSuit","getSortedCards","getSortedCardsLength","getFirstCard","checkedCards","checkSelectedCard","isStarter","removeCard","putCardOnTable","handleRound","setPlayersTurn","suitNames","subscribe","translation","suit","alreadySelectedToSwap","includes","filter","selectedCardToSwap","toggleSelectedCard","hasCard","askPlayerToSelectCard","lastPlayerIdx","setScore","isScoreLimit","getScore","addToHistory","shuffle","findWinner","setName","getPlayers","resetScore","shuffleDeck","setPlayersCardsToSwap","askPlayerToSelect3CardsToSwap","selectedCardImg","nativeElement","querySelector","classList","toggle","nrOfCardsOnTable","starterIdx","findTurnTaker","addReal","getCardPoints","removeCardsFromTable","setStarterAndLastPlayer","getLastPlayer","getCards","selectCardAI","console","log","removeCardByIdx","getName","hasPlayerClub2","clubs","getRank","setStarter","playTurn","cardsOnTable","checkCardSlotsOnTable","convertCardToImgUrl","isCardRow","trunStarter","splice","cardRow","turnPerRound","turnTaker","scoreRow","hotTrickByPlayerIdx","getReal","winnerIdx","winner","HeartsService","suitSwapPriority","throwOutPriority","cardToSwap","addCardToSwap","takeAllStrategy","chooseTakeAllStrategy","setStartegyTakeAll","chooseLowCardsToSwap","chooseHighCardsToSwap","checkCardsOnTable","pointCardsOnTable","clubsLength","diamonds","diamondsLength","spadesLength","heartsLength","sortedCardsLength","hasSpadeQueen","haveOthersPoints","checkOthersPoints","isStrategyTakeAll","checkStartegyTakeAll","firstDiamond","firstSpade","lastSpade","isSpadeObligatory","firstCard","suitsFromOpenSuit","lastCardFromOpenSuit","suitsOnTable","highestCardRankOnTable","isTableEmpty","sort","findHighestCardInSortedCards","CLUB","DIAMOND","SPADE","isLast","findHigherThanOpenSuitCard","findLowestCardInSortedCards","findLowerThanOpenSuitCard","selectOpenSuitCard","spadeHighs","isSpadeQueenOut","suitCards","suitCardsLength","allOthersPointsInTurn","playerPointsInTurn","isStartegyTakeAll","hasAllHeartHighCards","remainNrOfSuitsToSwap","suitsToSwap","lowestCard","nrOfHeartsToSwap","cardsToSwapBySuit","swapLowestCards","lastNrOfSuitsToSwap","cardsBySuit","cardRanksToHold","cardsLength","cardsToHold","cardRank","nrOfSuitsToSwap","low","sortedPlayerCards","remainNrOfSuits","remainToSwap","highCardsToThrow","nrOfSuitToSwap","swapRemainNrOfSuits","suitsFromRemove","swappedNrOfSuits","suitToSwap","nrOfSuit","forEach","swapNrOfSuits","nextCard","lowerRankFound","hasPointCardsOnTable","RikikiComponent","rikikiService","nrOfPlayersMax","trumpCardUrl","playerBetMin","playerBetMax","endOfBet","nrOfRoundsMax","nrOfRounds","nrOfPlayersTemp","nrOfRoundsTemp","starterIdxTemp","maxRounds","Math","floor","playerBet","dealerIdx","relativeRound","starterPlayerIdx","setBet","trumpCard","getTrumpCard","setBets","getBetTotal","setBetTotalAndNextPlayer","setPlayersBet","selectedCardIdx","trumpCardSuit","hasTrumpCardSuit","playerCardSuit","isObligatedSuitTrump","suits","roundInc","addCardToDeck","betTotal","getBet","setBetTotal","turnInRound","betAI","invalidBet","invalidBetText","roundMinusBetTotal","askPlayerToBet","findHighestCardOnTable","peek","slice","turn","RikikiService","bettingPlayerIdx","bettingPlayer","totalBets","bettingPlayerLast","bet","seenBigSuits","otherPlayerSuit","bettingPlayerCards","cardsIn","totalCardsOut","highTrumpCards","lowTrumpCards","kings","middleTrumpCards","remainingTrumpCards","betAIRound1","betAIRound2","betAIRound3OrHigher","cardIdx","findHighestTrumpCard","higherRankFound","findLowestTrumpCard","findPlayerHighestCard","findLowestCard","findPlayerLowestCard","findLowestSuitCard","findHighestCard","findHighestSuitCard","tryToBeatTrumpCard","HomeComponent","router","langChange","playerNameTemp","setPlayerName","lang","use","navigate","Card","rank","isValidRank","isValidSuit","rankToString","suitToString","nullCard","clubTwo","spadeQueen","spadeKing","spadeAce","isSpecificCard","cardToExamin","cardToCompare","isSpecificCardIncluded","cards","cardToFind","Deck","deck","array","currentIndex","temporaryValue","randomIndex","random","HeartsPlayer","name","startegyTakeAll","cardsToSwap","score","real","cardToRemove","properSuitsArray","sortedCards","removedCard","takeAll","cardsToSwapTemp","Player","starter","last","cardSuitArray","inserted","suitOrder","trumpSuit","playerSuit","highestCardRank","lowestCardRank","cardIndex","currentSuit","currentRank","highestRank","lowestRank","findCard","playerStarterSuit","selectedSuits","highCards","suitNr","lowestCards","RikikiPlayer","Suit","HeartsTable","spadeQueenOut","heartsBroken","str","nrOfPlayer","starterPlayer","setLast","lastPlayer","playerIndex","points","currentCard","RikikiTable","Table","deckOfCards","getDeck","initCardsOnTable","nrOfCards","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"<router-outlet></router-outlet>\"","export default \"<mat-tab-group class=\\\"hearts-container\\\">\\r\\n  <mat-tab [label]=\\\"'PLAY' | translate\\\">\\r\\n    <div class=\\\"hearts-container__play-ground\\\">\\r\\n      <mat-card class=\\\"card-table-panel\\\">\\r\\n        <div class=\\\"flex-center\\\">\\r\\n          <div class=\\\"flex-center col-gap-6\\\">\\r\\n            <p\\r\\n              [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n              class=\\\"col-gap-1 text-semibold font-size-20\\\"\\r\\n            >{{ players.length ? players[1].getName() : '-' }}</p>\\r\\n            <img class=\\\"card-size\\\" [src]=\\\"cardUrls[1]\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"flex-col-space-between col-gap-6\\\">\\r\\n            <div class=\\\"flex-col-center\\\">\\r\\n              <p\\r\\n                [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n                class=\\\"flex-col-center card-size no-margin row-gap-1 text-semibold font-size-20\\\"\\r\\n              >{{ players.length ? players[2].getName() : '-' }}</p>\\r\\n              <img class=\\\"flex-col-center card-size\\\" [src]=\\\"cardUrls[2]\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"swap-direction-icon-wrapper\\\">\\r\\n              <img *ngIf=\\\"!endOf3CardsSelection\\\" class=\\\"swap-direction-icon\\\" [src]=\\\"swapDirectionImgUrl\\\"/>\\r\\n            </div>\\r\\n            <div class=\\\"flex-col-center my-card\\\">\\r\\n              <img class=\\\"card-size row-gap-1\\\" [src]=\\\"myCardUrl\\\"/>\\r\\n              <p\\r\\n                [class]=\\\"myTable ? 'text-white' : 'text-table-green'\\\"\\r\\n                class=\\\"flex-col-center card-size no-margin text-center text-semibold font-size-20\\\"\\r\\n              >{{ myTable ? myTable.getPlayer(0).getName() : '-'}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"flex-center\\\">\\r\\n            <img class=\\\"card-size col-gap-1\\\" [src]=\\\"cardUrls[3]\\\"/>\\r\\n            <p\\r\\n              [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n              class=\\\"text-semibold font-size-20\\\"\\r\\n            >{{ players.length ? players[3].getName() : '-' }}</p>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"my-cards-panel\\\">\\r\\n        <div class=\\\"flex-col-center\\\">\\r\\n          <p class=\\\"flex-center text-center text-semibold font-size-20\\\">\\r\\n            {{ 'MY_CARDS_PANEL.YOUR_CARDS' | translate }} ({{ myTable ? myTable.getPlayer(0).getName() : '-'}})\\r\\n          </p>\\r\\n          <div\\r\\n            [ngClass]=\\\"{'my-cards-panel_my-cards': myTable.getPlayer(0).hasCard()}\\\"\\r\\n            class=\\\"flex-center-end row-gap-2\\\"\\r\\n          >\\r\\n            <img *ngIf=\\\"!myTable?.getPlayer(0).hasCard()\\\" class=\\\"my-cards-panel_placeholder card-size\\\" [src]=\\\"placeholderCardImgUrl\\\"/>\\r\\n            <div *ngFor=\\\"let card of myTable?.getPlayer(0).getCards(); let idx=index\\\">\\r\\n              <div class=\\\"my-cards-panel_card-wrapper\\\">\\r\\n                <img\\r\\n                  [id]=\\\"'my-card-' + card.printCard()\\\"\\r\\n                  [ngClass]=\\\"{'my-card-in-hand': !endOf3CardsSelection}\\\"\\r\\n                  class=\\\"card-size\\\"\\r\\n                  [src]=\\\"convertCardToImgUrl(card)\\\"\\r\\n                  (click)=\\\"selectedCard(card)\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"my-cards-panel_info\\\">\\r\\n            <p\\r\\n              [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n              class=\\\"flex-center no-margin text-center font-size-20\\\"\\r\\n              [innerHTML]=\\\"allMessage.msg | translate: allMessage.translateParams\\\"\\r\\n            ></p>\\r\\n            <p\\r\\n              [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n              class=\\\"flex-center no-margin text-center font-size-14\\\"\\r\\n              [innerHTML]=\\\"allMessage.subMsg | translate: allMessage.translateParams\\\"\\r\\n            ></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"control-panel\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"control-panel_first-half flex-space-between\\\">\\r\\n            <div>\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"endOfGame || endOfRound || endOf3CardsSelection || selectedCardsToSwap.length !== 3\\\"\\r\\n                (click)=\\\"swapCards()\\\"\\r\\n              >{{ 'CONTROL_PANEL.SUBMIT_3_CARDS_SELECTION' | translate }}</button>\\r\\n            </div>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"confirmStand()\\\"\\r\\n              [disabled]=\\\"endOfGame || endOfRound || !endOf3CardsSelection || !endOfSelection\\\"\\r\\n            >{{ 'CONTROL_PANEL.CONFIRM_STAND' | translate }}</button>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"newRound()\\\"\\r\\n              [disabled]=\\\"endOfGame || !endOfRound\\\"\\r\\n            >{{ 'CONTROL_PANEL.NEXT_ROUND' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"control-panel_second-half flex-end\\\">\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"newGame()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'CONTROL_PANEL.NEW_GAME' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"score-board flex-center\\\">\\r\\n        <div class=\\\"score-board-header flex-center\\\">\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.NAME' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.REALIZED' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.SCORE' | translate }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"score-board-row flex-center\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">\\r\\n          <div class=\\\"flex-center text-semibold\\\">{{ player.getName() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-center\\\">{{ player.getReal() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-right\\\">{{ player.getScore() }}</div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab [label]=\\\"'HISTORY' | translate\\\">\\r\\n    <mat-card class=\\\"hearts-container__history history-score-board flex-center\\\">\\r\\n      <div class=\\\"history-score-board-header flex-center\\\">\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_PER_ROUND' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_STARTER' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col history-score-board-header-name flex-center text-bold\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">{{ player.getName() }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_TAKER' | translate }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"flex-col-center\\\" *ngFor=\\\"let record of history\\\">\\r\\n        <div *ngIf=\\\"record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col flex-center text-semibold\\\">{{ record.cardRow.turnPerRound }}</div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.trunStarter }}</div>\\r\\n          <div class=\\\"history-score-board-col flex-center text-bold\\\" *ngFor=\\\"let cardUrl of record.cardRow.cardUrls\\\">\\r\\n            <img class=\\\"flex-center history-card-size\\\" [src]=\\\"cardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.turnTaker }}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\">\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.REAL' | translate }}</div>\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.SCORE' | translate }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center\\\">\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\" *ngFor=\\\"let player of record.scoreRow.players\\\">\\r\\n            <div class=\\\"flex-center\\\">{{ player.getReal() }}</div>\\r\\n            <div class=\\\"flex-center\\\">{{ player.getScore() }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<mat-tab-group class=\\\"rikiki-container\\\">\\r\\n  <mat-tab [label]=\\\"'SETTINGS' | translate\\\">\\r\\n    <mat-card class=\\\"rikiki-container__settings-panel\\\">\\r\\n      <div class=\\\"flex-col-start\\\">\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              routerLink=\\\"/home\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n            >{{ 'SETTINGS_PANEL.GO_HOME' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-gap-1\\\">\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"leaveGame()\\\"\\r\\n              [disabled]=\\\"endOfGame\\\"\\r\\n            >{{ 'SETTINGS_PANEL.LEAVE_CURRENT_GAME' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.NR_OF_PLAYERS' | translate }}:</div>\\r\\n          <div class=\\\"flex-end\\\">\\r\\n            <mat-slider\\r\\n              class=\\\"col-gap-2\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              [step]=\\\"1\\\"\\r\\n              [tickInterval]=\\\"1\\\"\\r\\n              [thumbLabel]=\\\"true\\\"\\r\\n              [vertical]=\\\"false\\\"\\r\\n              [invert]=\\\"false\\\"\\r\\n              [min]=\\\"3\\\"\\r\\n              [max]=\\\"nrOfPlayersMax\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n              [(ngModel)]=\\\"nrOfPlayersTemp\\\"\\r\\n            ></mat-slider>\\r\\n            <div class=\\\"col-gap-1\\\">\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"setNrOfPlayers()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.NR_OF_ROUNDS' | translate }}:</div>\\r\\n          <div class=\\\"flex-end\\\">\\r\\n            <mat-slider\\r\\n              class=\\\"col-gap-2\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              [step]=\\\"1\\\"\\r\\n              [tickInterval]=\\\"1\\\"\\r\\n              [thumbLabel]=\\\"true\\\"\\r\\n              [vertical]=\\\"false\\\"\\r\\n              [invert]=\\\"false\\\"\\r\\n              [min]=\\\"3\\\"\\r\\n              [max]=\\\"nrOfRoundsMax\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n              [(ngModel)]=\\\"nrOfRoundsTemp\\\"\\r\\n            ></mat-slider>\\r\\n            <div class=\\\"col-gap-1\\\">\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"setNrOfRounds()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"rikiki-container__settings-panel_row flex-space-between\\\">\\r\\n          <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.START_PLAYER' | translate }}:</div>\\r\\n          <div class=\\\"flex-end\\\">\\r\\n            <mat-slider\\r\\n              class=\\\"col-gap-2\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              [step]=\\\"1\\\"\\r\\n              [tickInterval]=\\\"1\\\"\\r\\n              [thumbLabel]=\\\"true\\\"\\r\\n              [vertical]=\\\"false\\\"\\r\\n              [invert]=\\\"false\\\"\\r\\n              [min]=\\\"1\\\"\\r\\n              [max]=\\\"nrOfPlayersMax\\\"\\r\\n              [disabled]=\\\"!endOfGame\\\"\\r\\n              [(ngModel)]=\\\"starterIdxTemp\\\"\\r\\n            ></mat-slider>\\r\\n            <div class=\\\"col-gap-1\\\">\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"setStarter()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n  <mat-tab [label]=\\\"'PLAY' | translate\\\">\\r\\n    <div class=\\\"rikiki-container__play-ground\\\">\\r\\n      <mat-card class=\\\"card-table-panel flex\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"card-table-panel_first-half flex-col-center\\\">\\r\\n            <p class=\\\"flex-col-center card-size no-margin text-center text-bold text-white font-size-16\\\">{{ 'CARD_TABLE_PANEL.TRUMP_CARD' | translate }}</p>\\r\\n            <img class=\\\"card-size\\\" [src]=\\\"trumpCardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"card-table-panel_second-half flex-center\\\">\\r\\n            <div class=\\\"flex-col-center\\\">\\r\\n              <div class=\\\"card-table-other-players flex-center row-gap-2\\\">\\r\\n                <div *ngFor=\\\"let cardUrl of cardUrls; let idx=index\\\">\\r\\n                  <p\\r\\n                    [class]=\\\"players.length ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin col-gap-6 text-semibold font-size-20\\\"\\r\\n                  >{{ players.length ? players[idx].getName() : '-' }}</p>\\r\\n                  <img class=\\\"flex-col-center card-size col-gap-6\\\" [src]=\\\"cardUrl\\\"/>\\r\\n                  <p\\r\\n                    [class]=\\\"players.length && idx === dealerIdx ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin text-bold\\\"\\r\\n                  >\\r\\n                    {{ idx === dealerIdx ? 'Dealer' : '-' }}\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"trump-and-my-selected-card row-gap-2\\\">\\r\\n                <div class=\\\"flex-col-center-top my-card\\\">\\r\\n                  <img class=\\\"card-size\\\" [src]=\\\"myCardUrl\\\"/>\\r\\n                  <p\\r\\n                    [class]=\\\"myTable ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin text-center text-semibold font-size-20\\\"\\r\\n                  >{{ myTable ? myTable.getPlayer(0).getName() : '-'}}</p>\\r\\n                  <p\\r\\n                    [class]=\\\"dealerIdx === 0 ? 'text-white' : 'text-table-green'\\\"\\r\\n                    class=\\\"flex-col-center card-size no-margin text-bold\\\"\\r\\n                  >\\r\\n                    {{ dealerIdx === 0 ? 'Dealer' : '-' }}\\r\\n                  </p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"my-cards-panel\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"my-cards-panel__first-half flex-col-center\\\">\\r\\n            <p class=\\\"flex-col-center card-size no-margin text-center text-bold text-white font-size-16\\\">{{ 'MY_CARDS_PANEL.ROUND' | translate }}</p>\\r\\n            <p class=\\\"no-margin text-bold color-primary font-size-64\\\">{{ relativeRound }}</p>\\r\\n          </div>\\r\\n          <div class=\\\"my-cards-panel__second-half flex-col-center\\\">\\r\\n            <p class=\\\"flex-center text-center text-semibold font-size-20\\\">{{ 'MY_CARDS_PANEL.YOUR_CARDS' | translate }} ({{ myTable ? myTable.getPlayer(0).getName() : '-'}})</p>\\r\\n            <div class=\\\"my-cards-panel__second-half_my-cards flex-center row-gap-2\\\">\\r\\n              <img *ngIf=\\\"!myTable || !myTable.getPlayer(0).hasCard()\\\" class=\\\"card-size\\\" [src]=\\\"placeholderCardImgUrl\\\"/>\\r\\n              <div *ngFor=\\\"let card of myTable?.getPlayer(0).getCards(); let idx=index\\\">\\r\\n                <img\\r\\n                  [ngClass]=\\\"{'margin-left-1': idx === 0, 'my-card-in-hand': !endOfSelection}\\\"\\r\\n                  class=\\\"card-size col-gap-2\\\"\\r\\n                  [src]=\\\"round === 1 ? cardBackImgUrl : convertCardToImgUrl(card)\\\"\\r\\n                  (click)=\\\"selectedCard(idx)\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"my-cards-panel__second-half_info\\\">\\r\\n              <p\\r\\n                [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n                class=\\\"flex-center no-margin text-center font-size-20\\\"\\r\\n                [translate]=\\\"allMessage.msg\\\"\\r\\n                [translateParams]=\\\"allMessage.translateParams\\\"\\r\\n              ></p>\\r\\n              <p\\r\\n                [class]=\\\"allMessage.type === 'error' ? 'color-warn' : 'color-primary'\\\"\\r\\n                class=\\\"flex-center no-margin text-center font-size-14\\\"\\r\\n                [translate]=\\\"allMessage.subMsg\\\"\\r\\n                [translateParams]=\\\"allMessage.translateParams\\\"\\r\\n              ></p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"control-panel\\\">\\r\\n        <div class=\\\"flex\\\">\\r\\n          <div class=\\\"control-panel_first-half flex-space-between\\\">\\r\\n            <div >\\r\\n              <mat-slider\\r\\n                class=\\\"col-gap-2\\\"\\r\\n                color=\\\"primary\\\"\\r\\n                [step]=\\\"1\\\"\\r\\n                [tickInterval]=\\\"1\\\"\\r\\n                [thumbLabel]=\\\"true\\\"\\r\\n                [vertical]=\\\"false\\\"\\r\\n                [invert]=\\\"false\\\"\\r\\n                [min]=\\\"playerBetMin\\\"\\r\\n                [max]=\\\"playerBetMax\\\"\\r\\n                [disabled]=\\\"endOfGame || endOfRound || endOfBet\\\"\\r\\n                [(ngModel)]=\\\"playerBet\\\"\\r\\n              ></mat-slider>\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                [disabled]=\\\"endOfGame || endOfRound || endOfBet\\\"\\r\\n                (click)=\\\"bet()\\\"\\r\\n              >{{ 'CONTROL_PANEL.SUBMIT_BET' | translate }}</button>\\r\\n            </div>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"confirmStand()\\\"\\r\\n              [disabled]=\\\"endOfGame || endOfRound || !endOfBet || !endOfSelection\\\"\\r\\n            >{{ 'CONTROL_PANEL.CONFIRM_STAND' | translate }}</button>\\r\\n            <button\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"newRound()\\\"\\r\\n              [disabled]=\\\"endOfGame || !endOfRound\\\"\\r\\n            >{{ 'CONTROL_PANEL.NEXT_ROUND' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"control-panel_second-half flex-end\\\">\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"newGame()\\\"\\r\\n                [disabled]=\\\"!endOfGame\\\"\\r\\n              >{{ 'CONTROL_PANEL.NEW_GAME' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <mat-card class=\\\"score-board flex-center\\\">\\r\\n        <div class=\\\"score-board-header flex-center\\\">\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.NAME' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.ACTUAL_BET' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.REALIZED' | translate }}</div>\\r\\n          <div class=\\\"flex-center text-bold\\\">{{ 'CONTROL_PANEL.SCORE' | translate }}</div>\\r\\n        </div>\\r\\n        <div class=\\\"score-board-row flex-center\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">\\r\\n          <div class=\\\"flex-center text-semibold\\\">{{ player.getName() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-center\\\">{{ player.getBet() === -1 ? '-' : player.getBet() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-center\\\">{{ player.getReal() }}</div>\\r\\n          <div class=\\\"flex-center text-semibold text-right\\\">{{ player.getScore() }}</div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab [label]=\\\"'HISTORY' | translate\\\">\\r\\n    <mat-card class=\\\"rikiki-container__history history-score-board flex-center\\\">\\r\\n      <div class=\\\"history-score-board-header flex-center\\\">\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_PER_ROUND' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_STARTER' | translate }}</div>\\r\\n        <div class=\\\"history-score-board-col history-score-board-header-name flex-center text-bold\\\" *ngFor=\\\"let player of myTable?.getPlayers()\\\">{{ player.getName() }}</div>\\r\\n        <div class=\\\"history-score-board-col flex-center text-center text-bold\\\">{{ 'HISTORY_PANEL.TURN_TAKER' | translate }}</div>\\r\\n      </div>\\r\\n      <div class=\\\"flex-col-center\\\" *ngFor=\\\"let record of history\\\">\\r\\n        <div *ngIf=\\\"record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col flex-center text-semibold\\\">{{ record.cardRow.turnPerRound }}</div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.trunStarter }}</div>\\r\\n          <div class=\\\"history-score-board-col flex-center text-bold\\\" *ngFor=\\\"let cardUrl of record.cardRow.cardUrls\\\">\\r\\n            <img class=\\\"flex-center history-card-size\\\" [src]=\\\"cardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center text-semibold\\\">{{ record.cardRow.turnTaker }}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!record.isCardRow\\\" class=\\\"history-score-board-row flex-center\\\">\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\">\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.BET' | translate }}</div>\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.REAL' | translate }}</div>\\r\\n            <div class=\\\"flex-center text-bold\\\">{{ 'HISTORY_PANEL.SCORE' | translate }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-center\\\">\\r\\n            <img class=\\\"flex-center history-card-size\\\" [src]=\\\"record.scoreRow.trumpCardUrl\\\"/>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center text-semibold\\\" *ngFor=\\\"let player of record.scoreRow.players\\\">\\r\\n            <div class=\\\"flex-center\\\">{{ player.getBet() }}</div>\\r\\n            <div class=\\\"flex-center\\\">{{ player.getReal() }}</div>\\r\\n            <div class=\\\"flex-center\\\">{{ player.getScore() }}</div>\\r\\n          </div>\\r\\n          <div class=\\\"history-score-board-col history-score-board-col-height flex-col-center\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<div class=\\\"home-container\\\">\\r\\n  <mat-card class=\\\"home-container__settings-panel\\\">\\r\\n    <div class=\\\"flex-col-start\\\">\\r\\n      <div class=\\\"home-container__settings-panel_row flex-space-between row-gap-2\\\">\\r\\n        <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.SELECT_LANGUAGE' | translate }}:</div>\\r\\n        <div class=\\\"flex-end\\\">\\r\\n          <div class=\\\"col-gap-2 text-bold font-size-16\\\">{{ 'SETTINGS_PANEL.LANG_HU' | translate }}</div>\\r\\n          <mat-slide-toggle\\r\\n            class=\\\"col-gap-2\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            [checked]=\\\"currLang === 'en'\\\"\\r\\n            (change)=\\\"langChange($event.checked ? 'en' : 'hu')\\\"\\r\\n          ></mat-slide-toggle>\\r\\n          <div class=\\\"col-gap-2 text-bold font-size-16\\\">{{ 'SETTINGS_PANEL.LANG_EN' | translate }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"home-container__settings-panel_row flex-space-between row-gap-2\\\">\\r\\n        <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.ENTER_YOUR_NAME' | translate }}:</div>\\r\\n        <div class=\\\"flex-end\\\">\\r\\n          <input\\r\\n            class=\\\"player-name col-gap-3\\\"\\r\\n            type=\\\"text\\\"\\r\\n            maxlength=\\\"5\\\"\\r\\n            [(ngModel)]=\\\"playerNameTemp\\\"\\r\\n          >\\r\\n          <div class=\\\"col-gap-1\\\">\\r\\n            <button\\r\\n              class=\\\"font-size-16\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"setPlayerName()\\\"\\r\\n            >{{ 'SETTINGS_PANEL.SET' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"home-container__settings-panel_row flex-space-between\\\">\\r\\n        <div class=\\\"text-semibold font-size-24\\\">{{ 'SETTINGS_PANEL.SELECT_GAME' | translate }}:</div>\\r\\n        <div class=\\\"flex-end\\\">\\r\\n          <div class=\\\"col-gap-2\\\">\\r\\n            <button\\r\\n              class=\\\"font-size-16\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"goToRikiki()\\\"\\r\\n            >{{ 'RIKIKI' | translate }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-gap-1\\\">\\r\\n            <button\\r\\n              class=\\\"font-size-16\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"primary\\\"\\r\\n              (click)=\\\"goToHearts()\\\"\\r\\n            >{{ 'HEARTS' | translate }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeartsComponent } from './games/hearts/hearts.component';\r\nimport { RikikiComponent } from './games/rikiki/rikiki.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'rikiki',\r\n    component: RikikiComponent,\r\n  },\r\n  {\r\n    path: 'hearts',\r\n    component: HeartsComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      onSameUrlNavigation: 'reload',\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  /* TODO's\r\n  * kivezetni a material-t\r\n  * saját tailwind szerü class-ok gyártása\r\n  */\r\n\r\n  private readonly defaultLang = 'hu';\r\n\r\n  constructor(\r\n    private localStorage: LocalStorageService,\r\n    private translate: TranslateService\r\n  ) {\r\n    const currLang = this.localStorage.retrieve('lang');\r\n    this.translate.setDefaultLang(currLang || this.defaultLang);\r\n    if (!currLang) {\r\n      this.localStorage.store('lang', this.defaultLang);\r\n    }\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport hu from '@angular/common/locales/hu';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RikikiComponent } from './games/rikiki/rikiki.component';\r\nimport { HeartsComponent } from './games/hearts/hearts.component';\r\n\r\nimport { RikikiService } from './games/rikiki/rikiki.service';\r\nimport { HeartsService } from './games/hearts/hearts.service';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nregisterLocaleData(hu, 'hu');\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RikikiComponent,\r\n    HeartsComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxWebstorageModule.forRoot({\r\n      prefix: 'app-',\r\n      caseSensitive: true,\r\n    }),\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [RikikiService, HeartsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","export default \".hearts-container__play-ground .card-table-panel,\\n.hearts-container__play-ground .my-cards-panel {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n}\\n.hearts-container__play-ground .control-panel {\\n  margin: 0 auto;\\n  min-width: 820px;\\n  max-width: 820px;\\n}\\n.hearts-container__play-ground .score-board {\\n  margin: 0 auto;\\n  min-width: 400px;\\n  max-width: 400px;\\n}\\n.hearts-container__play-ground .card-table-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 100px;\\n  border-top-right-radius: 100px;\\n  border-bottom-left-radius: 0;\\n  border-bottom-right-radius: 0;\\n  min-height: 356px;\\n  max-height: 356px;\\n  padding: 16px 16px 0px 16px;\\n}\\n.hearts-container__play-ground .card-table-panel .swap-direction-icon-wrapper {\\n  height: 70px;\\n}\\n.hearts-container__play-ground .card-table-panel .swap-direction-icon {\\n  width: 60px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n.hearts-container__play-ground .my-cards-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n  border-bottom-left-radius: 100px;\\n  border-bottom-right-radius: 100px;\\n  min-height: 240px;\\n  max-height: 240px;\\n  padding: 0px 16px 16px 16px;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards {\\n  height: 130px;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards .my-card-in-hand:hover {\\n  cursor: pointer;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards .lifted {\\n  margin-bottom: 1rem;\\n}\\n.hearts-container__play-ground .my-cards-panel_info {\\n  min-height: 40px;\\n}\\n.hearts-container__play-ground .control-panel {\\n  padding: 0px 16px;\\n}\\n.hearts-container__play-ground .control-panel_first-half {\\n  flex: 0 1 75%;\\n}\\n.hearts-container__play-ground .control-panel_second-half {\\n  flex: auto;\\n}\\n.hearts-container__play-ground .control-panel,\\n.hearts-container__play-ground .score-board {\\n  background-color: var(--primary-lighter-color);\\n}\\n.hearts-container__play-ground .card-table-other-players {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.hearts-container__play-ground .card-table-other-players div:nth-child(1) {\\n  display: none;\\n}\\n.hearts-container__play-ground .card-table-other-players div:nth-child(2) {\\n  margin-left: 3rem;\\n}\\n.hearts-container__play-ground .my-card {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.hearts-container__play-ground .card-size {\\n  width: 80px;\\n}\\n.hearts-container__play-ground .my-cards-panel_placeholder {\\n  margin-left: 6px;\\n}\\n.hearts-container__play-ground .my-cards-panel_my-cards {\\n  margin-right: 34px;\\n}\\n.hearts-container__play-ground .my-cards-panel_card-wrapper {\\n  width: 40px;\\n}\\n.hearts-container__play-ground .mat-slider-horizontal {\\n  min-width: 100px;\\n}\\n.hearts-container__play-ground .score-board-header,\\n.hearts-container__play-ground .score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__play-ground .score-board-header div:nth-child(n+2),\\n.hearts-container__play-ground .score-board-row div:nth-child(n+2) {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__play-ground .score-board-header div {\\n  height: 36px;\\n}\\n.hearts-container__play-ground .score-board-header div,\\n.hearts-container__play-ground .score-board-row div {\\n  width: 80px;\\n  padding: 4px 8px;\\n  text-align: center;\\n}\\n.hearts-container__history {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n  background-color: var(--primary-lighter-color);\\n}\\n.hearts-container__history .history-score-board-header-name {\\n  height: 36px;\\n}\\n.hearts-container__history .history-score-board-header,\\n.hearts-container__history .history-score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__history .history-score-board-header div:nth-child(n+2).history-score-board-col,\\n.hearts-container__history .history-score-board-row div:nth-child(n+2).history-score-board-col {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.hearts-container__history .history-score-board-col {\\n  width: 60px;\\n  padding: 4px 8px;\\n}\\n.hearts-container__history .history-score-board-col-height {\\n  height: 56px;\\n}\\n.hearts-container__history .history-card-size {\\n  width: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, ElementRef } from '@angular/core';\r\nimport { Suit } from '../../table-parts/suit/suit';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { HeartsPlayer } from '../../table-parts/player/hearts-player';\r\nimport { HeartsTable } from '../../table-parts/table/hearts-table';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HeartsService } from './hearts.service';\r\nimport { TurnHistoryRow } from 'src/app/interfaces/turn-history-row.interface';\r\nimport { SortedCards } from 'src/app/interfaces/sorted-cards.interface';\r\nimport { suits } from 'src/app/table-parts/suit/suits';\r\nimport { clubTwo, isSpecificCard, isSpecificCardIncluded, nullCard, spadeQueen } from 'src/app/table-parts/card/cards';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'app-hearts',\r\n  templateUrl: 'hearts.component.html',\r\n  styleUrls: ['hearts.component.scss'],\r\n})\r\nexport class HeartsComponent {\r\n\r\n  /* TODO's\r\n  * game init-ben nem kell új asztal és a játékosok neve és száma sem változik\r\n  * megtanítani, hogy fogja meg a hot tricket\r\n  */\r\n\r\n  private readonly imgUrlPrefix = 'assets/images/';\r\n  private readonly imgUrlSuffix = '.svg';\r\n  private readonly defaultMsg = { type: '', msg: ' ', subMsg: ' ', translateParams: {} };\r\n  private readonly deckSize = 52;\r\n  private readonly playerNames: string[] = ['West', 'North', 'East'];\r\n  private readonly nrOfPlayers = 4;\r\n  private readonly swapDirections = [0, 1, 3, 2];\r\n\r\n  public placeholderCardImgUrl = `${this.imgUrlPrefix}card_placeholder${this.imgUrlSuffix}`;\r\n  public cardBackImgUrl = `${this.imgUrlPrefix}card_back_2${this.imgUrlSuffix}`;\r\n  public swapDirectionImgUrl = `${this.imgUrlPrefix}arrow_0${this.imgUrlSuffix}`;\r\n  public players: HeartsPlayer[] = [];\r\n  public cardUrls: string[] = [];\r\n  public myCardUrl = this.placeholderCardImgUrl;\r\n\r\n  public allMessage = this.defaultMsg;\r\n  public history: TurnHistoryRow[] = [];\r\n  public myTable = new HeartsTable(this.nrOfPlayers);\r\n  public round: number;\r\n\r\n  public endOfGame = true;\r\n  public endOfRound = true;\r\n  public endOf3CardsSelection = true;\r\n  public selectedCardsToSwap: Card[] = [];\r\n  public endOfSelection = true;\r\n\r\n  private playerName = history.state.data?.playerName;\r\n\r\n  private swapDirectionIdx: number;\r\n  private lastPlayerIdx: number;\r\n  private playerIdx: number;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private translate: TranslateService,\r\n    private heartsService: HeartsService,\r\n  ) {\r\n    this.leaveGame();\r\n  }\r\n\r\n  convertCardToImgUrl(card: Card) {\r\n    return `${this.imgUrlPrefix}${card.printCard()}${this.imgUrlSuffix}`;\r\n  }\r\n\r\n  leaveGame() {\r\n    this.myCardUrl = this.placeholderCardImgUrl;\r\n    this.allMessage = this.defaultMsg;\r\n    this.endOfGame = true;\r\n    this.endOfRound = true;\r\n    this.endOf3CardsSelection = true;\r\n    this.endOfSelection = true;\r\n    this.initGame();\r\n  }\r\n\r\n  newGame() {\r\n    this.endOfGame = false;\r\n    this.initGame();\r\n    this.newRound();\r\n  }\r\n\r\n  newRound() {\r\n    this.round += 1;\r\n    this.myTable.resetHeartsBroken();\r\n    this.endOfRound = false;\r\n    this.selectedCardsToSwap = [];\r\n    this.swapDirectionIdx = this.round % 4;\r\n    this.swapDirectionImgUrl = `${this.imgUrlPrefix}arrow_${this.swapDirectionIdx}${this.imgUrlSuffix}`;\r\n\r\n    this.showTableCards();\r\n\r\n    // pont számlálók beállítása\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const player = this.players[i];\r\n      player.resetReal();\r\n    }\r\n\r\n    // az összes kártya kiosztása a négy játékos között\r\n    let playerIdx = 0;\r\n    for (let i = 0; i < this.deckSize; ++i) {\r\n      playerIdx = i % 4;\r\n      this.myTable.getPlayer(playerIdx).addCard(this.myTable.getCardFromDeck());\r\n    }\r\n    // kártyák sorba rendezése\r\n    this.myTable.getPlayer(0).sortPlayerCards();\r\n\r\n    // 3 kártya választása cseréhez\r\n    if (this.swapDirectionIdx) {\r\n      this.select3CardToSwap();\r\n    } else {\r\n      this.endOf3CardsSelection = false;\r\n      for (let i = 0; i < 3; i++) {\r\n        this.selectedCardsToSwap.push(nullCard);\r\n      }\r\n      this.allMessage = {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.NO_SWAP',\r\n        subMsg: ' ',\r\n        translateParams: {}\r\n      };\r\n    }\r\n  }\r\n\r\n  swapCards() {\r\n    this.endOf3CardsSelection = true;\r\n    if (this.swapDirectionIdx) {\r\n      for (let i = 0; i < this.selectedCardsToSwap.length; i++) {\r\n        this.heartsService.moveToSwap(this.myTable.getPlayer(0), this.selectedCardsToSwap[i]);\r\n      }\r\n      const swapDirection = this.swapDirections[this.swapDirectionIdx];\r\n\r\n      // kiválasztott kártyák cseréje\r\n      for (let i = 0; i < this.nrOfPlayers; i++) {\r\n        const playerWhoGive = this.myTable.getPlayer(i);\r\n        const playerWhoRecieves = this.myTable.getPlayer((i + swapDirection) % 4);\r\n        const cardsOfPlayerWhoGive = playerWhoGive.getCardsToSwap();\r\n        for (let j = 0; j < cardsOfPlayerWhoGive.length; j++) {\r\n          const cardToGive = cardsOfPlayerWhoGive[j];\r\n          playerWhoRecieves.addCard(cardToGive);\r\n        }\r\n      }\r\n\r\n      // kártyák sorba rendezése\r\n      this.myTable.getPlayer(0).sortPlayerCards();\r\n    }\r\n    this.selectedCardsToSwap = [];\r\n\r\n    this.setStarterAndPlayTurn();\r\n  }\r\n\r\n  checkSelectedCard(\r\n    playerIsStarter: boolean,\r\n    selectedCard: Card,\r\n    playerCards: SortedCards,\r\n    playerCardsLength: number,\r\n    firstCardSuit: number\r\n  ): { isSelectedValid: boolean, hasFirstCardSuit?: boolean, invalidSuitSelection?: string } {\r\n    const selectedCardSuit = selectedCard.getSuit();\r\n    const isOnlyHearts = playerCards.hearts.length === playerCardsLength;\r\n    const isOnlyHeartsAndSpadeQueen =\r\n      playerCards.hearts.length === (playerCardsLength - 1) && isSpecificCardIncluded(playerCards.spades, spadeQueen);\r\n    const heartsAndSpadeQueenException = isOnlyHearts || (isOnlyHeartsAndSpadeQueen && isSpecificCard(selectedCard, spadeQueen));\r\n    const notHeartsOrSpadeQueenSelected = selectedCardSuit !== Suit.HEART && !isSpecificCard(selectedCard, spadeQueen);\r\n    const clubTwoselected = (playerCardsLength === 13 && isSpecificCard(selectedCard, clubTwo));\r\n\r\n    if (playerIsStarter) {\r\n      if (playerIsStarter\r\n        && (clubTwoselected\r\n          || (playerCardsLength < 13\r\n            && (this.myTable.isHeartsBroken()\r\n              || (!this.myTable.isHeartsBroken() && (notHeartsOrSpadeQueenSelected || heartsAndSpadeQueenException)))))) {\r\n        return { isSelectedValid: true };\r\n      }\r\n\r\n      if (playerCardsLength === 13 && !clubTwoselected) {\r\n        return { isSelectedValid: false, hasFirstCardSuit: false, invalidSuitSelection: 'clubTwo' };\r\n      }\r\n    } else {\r\n      const openSuit = suits[firstCardSuit - 1];\r\n      const hasFirstCardSuit = playerCards[openSuit].length;\r\n      // ha kezdő szín lett választva\r\n      if (selectedCardSuit === firstCardSuit\r\n        // vagy nincs kezdő színű kártyája és nem szív színű kártya vagy pikk dáma lett választva\r\n        || !hasFirstCardSuit && notHeartsOrSpadeQueenSelected\r\n        // vagy csak szív színű kártyák vannak vagy 12 szív színű kártya és a pikk Q, ilyenkor pikk Q-t kell választani\r\n        || heartsAndSpadeQueenException\r\n        // vagy nincs kezdő színű kártyája és nem az első kör van\r\n        || !hasFirstCardSuit && playerCardsLength < 13) {\r\n        return { isSelectedValid: true };\r\n      }\r\n\r\n      if (hasFirstCardSuit && selectedCardSuit !== firstCardSuit) {\r\n        return { isSelectedValid: false, hasFirstCardSuit };\r\n      }\r\n    }\r\n\r\n    if (selectedCardSuit === Suit.HEART || isSpecificCard(selectedCard, spadeQueen)) {\r\n      return { isSelectedValid: false, hasFirstCardSuit: false, invalidSuitSelection: 'hearts' };\r\n    }\r\n\r\n    return { isSelectedValid: true };\r\n  }\r\n\r\n  selectedCard(selectedCard: Card) {\r\n    if (!this.endOfSelection) {\r\n      const player = this.myTable.getPlayer(0);\r\n      const playerCards = player.getSortedCards();\r\n      const playerCardsLength = player.getSortedCardsLength();\r\n      const firstCardSuit = this.myTable.getFirstCard().getSuit();\r\n      const checkedCards = this.checkSelectedCard(player.isStarter(), selectedCard, playerCards, playerCardsLength, firstCardSuit);\r\n      if (checkedCards.isSelectedValid) {\r\n        this.myTable.getPlayer(0).removeCard(selectedCard);\r\n        this.myTable.putCardOnTable(0, selectedCard);\r\n        this.handleRound();\r\n        this.setPlayersTurn();\r\n        this.endOfSelection = true;\r\n        this.allMessage = this.defaultMsg;\r\n      } else {\r\n        if (checkedCards.hasFirstCardSuit) {\r\n          const suitNames = ['CLUB', 'DIAMOND', 'HEART', 'SPADE'];\r\n          this.translate.get(suitNames[firstCardSuit - 1])\r\n            .subscribe((translation) => {\r\n              this.allMessage = {\r\n                type: 'error',\r\n                msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n                subMsg: 'MY_CARDS_PANEL.MESSAGES.SELECT_FIRST_CARD_SUIT',\r\n                translateParams: { suit: translation }\r\n              };\r\n            });\r\n        } else if (checkedCards.invalidSuitSelection) {\r\n          if (checkedCards.invalidSuitSelection === 'clubTwo') {\r\n            this.allMessage = {\r\n              type: 'error',\r\n              msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n              subMsg: 'MY_CARDS_PANEL.MESSAGES.START_WITH_CLUB_TWO',\r\n              translateParams: {}\r\n            };\r\n          } else if (checkedCards.invalidSuitSelection === 'hearts') {\r\n            this.allMessage = {\r\n              type: 'error',\r\n              msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n              subMsg: 'MY_CARDS_PANEL.MESSAGES.HEARTS_NOT_BROKEN',\r\n              translateParams: {}\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!this.endOf3CardsSelection && this.swapDirectionIdx) {\r\n      const alreadySelectedToSwap = this.selectedCardsToSwap.includes(selectedCard);\r\n      if (alreadySelectedToSwap) {\r\n        this.selectedCardsToSwap =\r\n          this.selectedCardsToSwap.filter((selectedCardToSwap) => selectedCardToSwap !== selectedCard);\r\n          this.toggleSelectedCard(selectedCard);\r\n      } else if (!alreadySelectedToSwap && this.selectedCardsToSwap.length < 3) {\r\n        this.selectedCardsToSwap.push(selectedCard);\r\n        this.toggleSelectedCard(selectedCard);\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmStand() {\r\n    this.endOfSelection = false;\r\n    if (this.myTable.getPlayer(0).hasCard()) {\r\n      this.showTableCards();\r\n      this.askPlayerToSelectCard();\r\n    }\r\n    if (!this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      this.setScore();\r\n      let isScoreLimit = false;\r\n      for (let i = 0; !isScoreLimit && i < this.nrOfPlayers; ++i) {\r\n        isScoreLimit = this.myTable.getPlayer(i).getScore() > 99;\r\n      }\r\n      this.addToHistory();\r\n      this.endOfSelection = true;\r\n      this.endOfRound = true;\r\n      this.shuffle();\r\n      if (isScoreLimit) {\r\n        this.endOfGame = true;\r\n        this.findWinner();\r\n      }\r\n    }\r\n  }\r\n\r\n  private initGame() {\r\n    this.cardUrls = [];\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      this.cardUrls[i] = this.placeholderCardImgUrl;\r\n    }\r\n    if (this.playerName) {\r\n      this.myTable.getPlayer(0).setName(this.playerName);\r\n    }\r\n    for (let i = 1; i < this.nrOfPlayers; ++i) {\r\n      this.myTable.getPlayer(i).setName(this.playerNames[i - 1]);\r\n    }\r\n    this.players = this.myTable.getPlayers();\r\n    // pont számlálók beállítása\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const player = this.players[i];\r\n      player.resetScore();\r\n      player.resetReal();\r\n    }\r\n    this.round = 0;\r\n    this.swapDirectionIdx = 1;\r\n    this.swapDirectionImgUrl = `${this.imgUrlPrefix}arrow_${this.swapDirectionIdx}${this.imgUrlSuffix}`;\r\n    this.history = [];\r\n  }\r\n\r\n  private shuffle() {\r\n    this.myTable.shuffleDeck();\r\n  }\r\n\r\n  private setPlayersCardsToSwap() {\r\n    for (let i = 1; i < this.nrOfPlayers; ++i) {\r\n      this.heartsService.select3CardToSwap(this.myTable.getPlayer(i));\r\n    }\r\n  }\r\n\r\n  private askPlayerToSelect3CardsToSwap() {\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_3_CARD_TO_SWAP',\r\n      subMsg: ' ',\r\n      translateParams: {}\r\n    };\r\n  }\r\n\r\n  private select3CardToSwap() {\r\n      this.endOf3CardsSelection = false;\r\n      this.setPlayersCardsToSwap();\r\n      this.askPlayerToSelect3CardsToSwap();\r\n  }\r\n\r\n  private toggleSelectedCard(card: Card) {\r\n    const selectedCardImg = this.element.nativeElement.querySelector(`#my-card-${card.printCard()}`);\r\n    selectedCardImg.classList.toggle('lifted');\r\n  }\r\n\r\n  private handleRound() {\r\n    // ha pont annyi kártya van lent ahány játékos, akkor ebben a körben mindenki letette a lapját\r\n    if (this.myTable.nrOfCardsOnTable() === this.nrOfPlayers) {\r\n      const starterIdx = (this.playerIdx + 1) % this.nrOfPlayers;\r\n      this.showTableCards();\r\n      // aki viszi a kört, az lesz a kezdő\r\n      this.playerIdx = this.myTable.findTurnTaker();\r\n      this.myTable.getPlayer(this.playerIdx).addReal(this.myTable.getCardPoints());\r\n      this.addToHistory(true, starterIdx);\r\n      this.myTable.removeCardsFromTable();\r\n      this.myTable.setStarterAndLastPlayer(this.playerIdx);\r\n      this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    } else {\r\n      ++this.playerIdx;\r\n      this.playerIdx %= this.nrOfPlayers;\r\n    }\r\n  }\r\n\r\n  private setPlayersTurn() {\r\n    while (this.playerIdx !== 0 && this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      // ha a játékosnak több kártyája van\r\n      if (this.myTable.getPlayer(this.playerIdx).getCards().length > 1) {\r\n        const selectedCard = this.heartsService.selectCardAI(this.myTable, this.playerIdx);\r\n        console.log(this.myTable, this.playerIdx, selectedCard);\r\n        this.myTable.getPlayer(this.playerIdx).removeCard(selectedCard);\r\n        this.myTable.putCardOnTable(this.playerIdx, selectedCard);\r\n      } else {\r\n        // ha a játékosnak csak egy kártyája maradt, akkor azt azonnal leteszi\r\n        this.myTable.putCardOnTable(\r\n          this.playerIdx,\r\n          this.myTable.getPlayer(this.playerIdx).removeCardByIdx(0) // TODO: removeLastCard()\r\n        );\r\n      }\r\n      this.handleRound();\r\n    }\r\n  }\r\n\r\n  private askPlayerToSelectCard() {\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_CARD',\r\n      subMsg: ' ',\r\n      translateParams: {}\r\n    };\r\n  }\r\n\r\n  private playTurn() {\r\n    this.endOfSelection = false;\r\n    this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    for (let i = 1; i < this.nrOfPlayers; i++) {\r\n      const player = this.myTable.getPlayer(i);\r\n      const playerCards = cloneDeep(player.getSortedCards());\r\n      console.log(player.getName(), playerCards);\r\n    }\r\n    if (this.playerIdx !== 0) {\r\n      this.setPlayersTurn();\r\n    }\r\n    this.showTableCards();\r\n    this.askPlayerToSelectCard();\r\n  }\r\n\r\n  private setStarterAndPlayTurn() {\r\n    // kezdő kiválasztása\r\n    let hasPlayerClub2 = false;\r\n    for (let i = 0; !hasPlayerClub2 && i < this.nrOfPlayers; i++) {\r\n      const player = this.myTable.getPlayer(i);\r\n      hasPlayerClub2 = !!player.getSortedCards().clubs.filter((card) => card.getRank() === 2).length;\r\n      if (hasPlayerClub2) {\r\n        player.setStarter(true);\r\n        this.playerIdx = i;\r\n      }\r\n    }\r\n\r\n    this.myTable.setStarterAndLastPlayer(this.playerIdx);\r\n\r\n    this.playTurn();\r\n  }\r\n\r\n  private showTableCards() {\r\n    const cardsOnTable = this.myTable.checkCardSlotsOnTable();\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      if (i === 0) {\r\n        this.myCardUrl = cardsOnTable[0]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[0])\r\n          : this.placeholderCardImgUrl;\r\n      } else {\r\n        this.cardUrls[i] = cardsOnTable[i]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[i])\r\n          : this.placeholderCardImgUrl;\r\n      }\r\n    }\r\n  }\r\n\r\n  private addToHistory(isCardRow = false, starterIdx = 0) {\r\n    const trunStarter = this.myTable.getPlayer(starterIdx);\r\n    let cardUrls: string[] = [];\r\n    if (isCardRow) {\r\n      cardUrls = cloneDeep(this.cardUrls);\r\n      cardUrls.splice(0, 1, this.convertCardToImgUrl(this.myTable.checkCardSlotsOnTable()[0]));\r\n    }\r\n\r\n    this.history.push({\r\n      isCardRow,\r\n      cardRow: isCardRow\r\n        ? {\r\n          turnPerRound: `${13 - trunStarter.getSortedCardsLength()}/${this.round}`,\r\n          trunStarter: trunStarter.getName(),\r\n          cardUrls: cardUrls,\r\n          turnTaker: this.myTable.getPlayer(this.playerIdx).getName(),\r\n        }\r\n        : {},\r\n      scoreRow: isCardRow\r\n        ? {}\r\n        : {\r\n          players: cloneDeep(this.myTable.getPlayers())\r\n        }\r\n    });\r\n  }\r\n\r\n  private setScore() {\r\n    // pont számlálók beállítása\r\n    let hotTrickByPlayerIdx = -1;\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const player = this.myTable.getPlayer(i);\r\n      if (player.getReal() === 26) {\r\n        hotTrickByPlayerIdx = i;\r\n      }\r\n    }\r\n    if (hotTrickByPlayerIdx === -1) {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        const player = this.myTable.getPlayer(i);\r\n        player.setScore();\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        const player = this.myTable.getPlayer(i);\r\n        player.resetReal();\r\n        if (hotTrickByPlayerIdx !== i) {\r\n          player.addReal(26);\r\n        }\r\n        player.setScore();\r\n      }\r\n    }\r\n  }\r\n\r\n  private findWinner() {\r\n    const players = this.myTable.getPlayers();\r\n    let winnerIdx = 0;\r\n    let winner = players[winnerIdx];\r\n    for (let i = 1; i < players.length; i++) {\r\n      if (players[i].getScore() < winner.getScore()) {\r\n        winner = players[i];\r\n        winnerIdx = i;\r\n      }\r\n    }\r\n\r\n    this.allMessage = winnerIdx === 0\r\n      ? {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.YOU_WON',\r\n        subMsg: ' ',\r\n        translateParams: {}\r\n      }\r\n      : {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.ANOTHER_WON',\r\n        subMsg: ' ',\r\n        translateParams: { winner: winner.getName() }\r\n      };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NrOfSuits } from 'src/app/interfaces/nr-of-suits.interface';\r\nimport { SortedCards } from 'src/app/interfaces/sorted-cards.interface';\r\nimport {\r\n  clubTwo,\r\n  isSpecificCard,\r\n  isSpecificCardIncluded,\r\n  nullCard,\r\n  spadeAce,\r\n  spadeKing,\r\n  spadeQueen\r\n} from 'src/app/table-parts/card/cards';\r\nimport { Suit } from 'src/app/table-parts/suit/suit';\r\nimport { suits } from 'src/app/table-parts/suit/suits';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { HeartsPlayer } from '../../table-parts/player/hearts-player';\r\nimport { HeartsTable } from '../../table-parts/table/hearts-table';\r\n\r\n@Injectable()\r\nexport class HeartsService {\r\n\r\n  private readonly suitSwapPriority = [suits[2], suits[0], suits[1], suits[3]];\r\n  private readonly throwOutPriority = [suits[2], suits[3], suits[1], suits[0]];\r\n\r\n  constructor() {}\r\n\r\n  moveToSwap (player: HeartsPlayer, cardToSwap: Card) {\r\n    player.removeCard(cardToSwap);\r\n    player.addCardToSwap(cardToSwap);\r\n  }\r\n\r\n  select3CardToSwap(player: HeartsPlayer) {\r\n    const playerCards: SortedCards = player.getSortedCards();\r\n    const takeAllStrategy = this.chooseTakeAllStrategy(playerCards);\r\n\r\n    if (takeAllStrategy) {\r\n      player.setStartegyTakeAll(true);\r\n\r\n      this.chooseLowCardsToSwap(player, playerCards);\r\n    } else {\r\n      this.chooseHighCardsToSwap(player, playerCards);\r\n    }\r\n  }\r\n\r\n  selectCardAI(myTable: HeartsTable, playerIdx: number): Card {\r\n    const players = myTable.getPlayers();\r\n    const cardsOnTable = myTable.checkCardsOnTable();\r\n    const pointCardsOnTable = cardsOnTable.filter((card) => {\r\n      return card.getSuit() === Suit.HEART || isSpecificCard(card, spadeQueen);\r\n    });\r\n    const player = myTable.getPlayer(playerIdx);\r\n    const playerCards = player.getSortedCards();\r\n    const clubs = playerCards.clubs;\r\n    const clubsLength = playerCards.clubs.length;\r\n    const diamonds = playerCards.diamonds;\r\n    const diamondsLength = playerCards.diamonds.length;\r\n    const spades = playerCards.spades;\r\n    const spadesLength = playerCards.spades.length;\r\n    const hearts = playerCards.hearts;\r\n    const heartsLength = playerCards.hearts.length;\r\n    const sortedCardsLength = player.getSortedCardsLength();\r\n    const hasSpadeQueen = spadesLength ? isSpecificCardIncluded(spades, spadeQueen) : false;\r\n    const haveOthersPoints = this.checkOthersPoints(players, playerIdx);\r\n    const isStrategyTakeAll = this.checkStartegyTakeAll(player, haveOthersPoints);\r\n    let selectedCard = nullCard;\r\n\r\n    // ha első kör van\r\n    if (sortedCardsLength === 13) {\r\n      if (player.isStarter()) {\r\n        selectedCard = clubTwo;\r\n      } else {\r\n        // ha van treff\r\n        if (clubsLength) {\r\n          selectedCard = isStrategyTakeAll ? clubs[0] : clubs[clubsLength - 1];\r\n        // ha mindent vinni akar\r\n        } else if (isStrategyTakeAll) {\r\n          // ha van káró és pikkből kisebb mint pikk Q válassza a legkisebb kárót vagy pikket\r\n          if (diamondsLength && spadesLength && spades[0].getRank() < spadeQueen.getRank()) {\r\n            const firstDiamond = diamonds[0];\r\n            const firstSpade = spades[0];\r\n            selectedCard = firstDiamond.getRank() <= firstSpade.getRank()\r\n              ? firstDiamond\r\n              : firstSpade;\r\n          // ha van káró válassza a legkisebbet\r\n          } else if (diamondsLength) {\r\n            selectedCard = diamonds[0];\r\n          // ha csak pikk van válassza a legkisebbet a pikk Q-án kívül vagy ha csak a pikk Q van akkor azt\r\n          } else if (spadesLength) {\r\n            const lastSpade = spades[0];\r\n            selectedCard = isSpecificCard(selectedCard, lastSpade)\r\n              ? spadesLength > 1\r\n                ? spades[1]\r\n                : lastSpade\r\n              : lastSpade;\r\n          // ha csak szív van akkor a legnagyobbat (alig van esély erre az esetre és itt biztosan nem is fog vinni semmit)\r\n          } else {\r\n            selectedCard = hearts[heartsLength - 1];\r\n          }\r\n        // ha nincs treff és nem akar mindent vinni\r\n        } else {\r\n          const lastSpade = spadesLength ? spades[spadesLength - 1] : nullCard;\r\n          const isSpadeObligatory = !diamondsLength && lastSpade.getRank() > 0;\r\n          // ha kötelező pikket tenni (nincs káró) válassza a legnagyobbat, vagy ha van nála nagyobb, mint pikk Q\r\n          if (isSpadeObligatory || (!hasSpadeQueen && lastSpade.getRank() > spadeQueen.getRank())) {\r\n            selectedCard = isSpecificCard(selectedCard, lastSpade)\r\n              ? spadesLength > 1\r\n                ? spades[spadesLength - 2]\r\n                : lastSpade\r\n              : lastSpade;\r\n          // ha van káró válassza a legnagyobbat\r\n          } else if (diamondsLength) {\r\n            selectedCard = diamonds[diamondsLength - 1];\r\n          // ha csak szív van akkor a legnagyobbat (alig van esély erre az esetre és itt biztosan nem is fog vinni semmit)\r\n          } else {\r\n            selectedCard = hearts[heartsLength - 1];\r\n          }\r\n        }\r\n      }\r\n    // ha nem az első kör van\r\n    } else {\r\n      let firstCard = nullCard;\r\n      let openSuit = '';\r\n      let suitsFromOpenSuit: Card[] = [];\r\n      let lastCardFromOpenSuit = nullCard;\r\n      let suitsOnTable: Card[] = [];\r\n      // az asztalon lévő legnagyobb kártya értéke az adott színben\r\n      let highestCardRankOnTable = 0;\r\n      if (!myTable.isTableEmpty()) {\r\n        firstCard = myTable.getFirstCard();\r\n        openSuit = suits[firstCard.getSuit() - 1];\r\n        suitsFromOpenSuit = playerCards[openSuit];\r\n        lastCardFromOpenSuit = suitsFromOpenSuit[suitsFromOpenSuit.length - 1];\r\n        suitsOnTable = cardsOnTable.filter((card) => card.getSuit() === firstCard.getSuit())\r\n          .sort((a, b) => (a.getRank() > b.getRank()) ? 1 : -1);\r\n        highestCardRankOnTable = suitsOnTable[suitsOnTable.length - 1].getRank();\r\n      }\r\n\r\n      // ha mindent akar vinni\r\n      if (isStrategyTakeAll) {\r\n        // ha a játékos kezdő\r\n        if (player.isStarter()) {\r\n          if (hasSpadeQueen) {\r\n            selectedCard = spadeQueen;\r\n          } else {\r\n            selectedCard = player.findHighestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART, Suit.SPADE]);\r\n            /* if (heartsLength) {\r\n              selectedCard = hearts[heartsLength - 1];\r\n            } else {\r\n              selectedCard = player.findHighestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.SPADE]);\r\n            } */\r\n          }\r\n        // ha a játékos nem kezdő\r\n        } else {\r\n          // ha van a nyitó színben lapja\r\n          if (suitsFromOpenSuit.length) {\r\n            if (player.isLast()) {\r\n              selectedCard = this.findHigherThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable);\r\n            } else {\r\n              selectedCard = lastCardFromOpenSuit;\r\n            }\r\n          // ha nincs a nyitó színben lapja\r\n          } else {\r\n            if (pointCardsOnTable && (hasSpadeQueen || heartsLength)) {\r\n              selectedCard = hasSpadeQueen\r\n                ? spadeQueen\r\n                : hearts[heartsLength - 1];\r\n              player.setStartegyTakeAll(false);\r\n            } else {\r\n              if (clubsLength || diamondsLength) {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND]);\r\n              } else if (spadesLength) {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.SPADE]);\r\n                if (isSpecificCard(selectedCard, spadeQueen)) {\r\n                  player.setStartegyTakeAll(false);\r\n                }\r\n              } else {\r\n                selectedCard = hearts[heartsLength - 1];\r\n                player.setStartegyTakeAll(false);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      // ha nem akar mindent vinni\r\n      } else {\r\n        // ha nála van a pikk Q\r\n        if (hasSpadeQueen) {\r\n          // ha a játékos kezdő\r\n          if (player.isStarter()) {\r\n            if (spadesLength !== sortedCardsLength) {\r\n              if (!myTable.isHeartsBroken()) {\r\n                // ha van pikken kívüli színe, akkor nyisson a legkisebb értékű lapjával\r\n                if (clubsLength || diamondsLength) {\r\n                  selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND]);\r\n                // ha csak pikk és szívszínű kártyák maradtak\r\n                } else if (spadesLength > 1) {\r\n                  selectedCard = isSpecificCard(spades[0], spadeQueen)\r\n                    ? spades[1]\r\n                    : spades[0];\r\n                } else if (spadesLength === 1) {\r\n                  selectedCard = spadeQueen;\r\n                } else {\r\n                  selectedCard = hearts[0];\r\n                }\r\n              } else {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART]);\r\n              }\r\n            } else {\r\n              selectedCard = spadesLength > 1 && isSpecificCard(spades[0], spadeQueen)\r\n                ? spades[1]\r\n                : spades[0];\r\n            }\r\n          // ha a játékos nem kezdő\r\n          } else {\r\n            // ha nincs a nyitó színben lapja és nem pikk a kezdő szín\r\n            // vagy a pikk K,A ki lett játszva,\r\n            // vagy pikk a kezdő szín és csak pikk Q van nála, akkor pikk Q-t tesz\r\n            if (!suitsFromOpenSuit.length\r\n              || isSpecificCardIncluded(cardsOnTable, spadeAce)\r\n              || isSpecificCardIncluded(cardsOnTable, spadeKing)\r\n              || firstCard.getSuit() === Suit.SPADE && spadesLength === 1) {\r\n              selectedCard = spadeQueen;\r\n            // ha pikk a kezdő szín és minimum kettő van,\r\n            // és van benne pont, válassza azasztalon lévő legnagyobbtól számított első kisebbet (de ne a pikk Q-t)\r\n            // vagy nincs benne pont és válassza a legnagyobbat (de ne a pikk Q-t),\r\n            } else if (firstCard.getSuit() === Suit.SPADE && spadesLength > 1) {\r\n              selectedCard = pointCardsOnTable.length\r\n                ? this.findLowerThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable)\r\n                : isSpecificCard(lastCardFromOpenSuit, spadeQueen)\r\n                  ? spades[spadesLength - 2]\r\n                  : lastCardFromOpenSuit;\r\n            // ha van a nyitó színben lapja és nem pikk a kezdő szín\r\n            } else if (suitsFromOpenSuit.length) {\r\n              selectedCard = this.selectOpenSuitCard(\r\n                !!pointCardsOnTable.length,\r\n                highestCardRankOnTable,\r\n                suitsFromOpenSuit,\r\n                lastCardFromOpenSuit,\r\n                player.isLast()\r\n              );\r\n            }\r\n          }\r\n        // ha nincs nála a pikk Q\r\n        } else {\r\n          // ha kezdő nyisson a legkisebbel vagy ha még nincs pikk Q akkor attól kisebb pikkel\r\n          if (player.isStarter()) {\r\n            const spadeHighs = (isSpecificCardIncluded(spades, spadeKing) ? 1 : 0) + (isSpecificCardIncluded(spades, spadeAce) ? 1 : 0);\r\n            // ha a pikk Q még nincs kijátszva és van kisebb pikkje\r\n            if (!myTable.isSpadeQueenOut() && ((spadesLength - spadeHighs) > 1)) {\r\n              selectedCard = this.findLowerThanOpenSuitCard(spades, spades[spadesLength - 1], spadeQueen.getRank());\r\n            // ha a pikk Q kijátszva vagy nincs csak nagyobb pikkje, akkor nyisson a legkisebb értékű lapjával\r\n            } else  {\r\n              if (!myTable.isHeartsBroken()) {\r\n                // ha van pikken kívüli színe, akkor nyisson a legkisebb értékű lapjával\r\n                if (clubsLength || diamondsLength) {\r\n                  selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND]);\r\n                // ha csak pikk és szívszínű kártyák maradtak\r\n                } else if (spadesLength > 1) {\r\n                  selectedCard = spades[0];\r\n                } else {\r\n                  selectedCard = hearts[0];\r\n                }\r\n              } else {\r\n                selectedCard = player.findLowestCardInSortedCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART, Suit.SPADE]);\r\n              }\r\n            }\r\n          // ha a játékos nem kezdő\r\n          } else {\r\n            // ha van a nyitó színben lapja\r\n            if (suitsFromOpenSuit.length) {\r\n              selectedCard = this.selectOpenSuitCard(\r\n                !!pointCardsOnTable.length,\r\n                highestCardRankOnTable,\r\n                suitsFromOpenSuit,\r\n                lastCardFromOpenSuit,\r\n                player.isLast()\r\n              );\r\n            // ha nincs a nyitó színben lapja\r\n            } else {\r\n              // tehet pikk K,A-t, legnagyobb szívet, legnagyobb színt\r\n              if (isSpecificCardIncluded(spades, spadeAce)) {\r\n                selectedCard = spadeAce;\r\n              } else if (isSpecificCardIncluded(spades, spadeKing)) {\r\n                selectedCard = spadeKing;\r\n              } else {\r\n                for (let i = 0; selectedCard === nullCard && i < this.throwOutPriority.length; i++) {\r\n                  const suit = this.throwOutPriority[i];\r\n                  const suitCards = playerCards[suit];\r\n                  const suitCardsLength = suitCards.length;\r\n\r\n                  if (suitCardsLength) {\r\n                    selectedCard = suitCards[suitCardsLength - 1];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (selectedCard === nullCard) {\r\n      console.error(`${player.getName()} did not select any card!`);\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n\r\n  private checkOthersPoints(players: HeartsPlayer[], playerIdx: number): boolean {\r\n    let allOthersPointsInTurn = 0;\r\n    for (let i = 0; i < players.length; i++) {\r\n      if (i !== playerIdx) {\r\n        const playerPointsInTurn = players[i].getReal();\r\n        if (playerPointsInTurn) {\r\n          allOthersPointsInTurn += playerPointsInTurn;\r\n        }\r\n      }\r\n    }\r\n\r\n    return !!allOthersPointsInTurn;\r\n  }\r\n\r\n  private checkStartegyTakeAll(player: HeartsPlayer, haveOthersPoints: boolean): boolean {\r\n    let isStrategyTakeAll = player.isStartegyTakeAll();\r\n    if (haveOthersPoints) {\r\n      isStrategyTakeAll = false;\r\n      player.setStartegyTakeAll(false);\r\n    } else if (player.getReal() >= 13) {\r\n      isStrategyTakeAll = true;\r\n      player.setStartegyTakeAll(true);\r\n    }\r\n\r\n    return isStrategyTakeAll;\r\n  }\r\n\r\n  private hasAllHeartHighCards(hearts: Card[]): boolean {\r\n    if (hearts.length < 4) {\r\n      return false;\r\n    }\r\n\r\n    // ha szívből megvan a J,Q,K,A\r\n    return hearts[hearts.length - 1].getRank() === 14\r\n      && hearts[hearts.length - 2].getRank() === 13\r\n      && hearts[hearts.length - 3].getRank() === 12\r\n      && hearts[hearts.length - 4].getRank() === 11;\r\n  }\r\n\r\n  // ha megvan a pikk Q és a szív J,Q,K,A, akkor próbálhat all in-re menni\r\n  private chooseTakeAllStrategy(playerCards: SortedCards): boolean {\r\n    const spades = playerCards.spades;\r\n    const spadesLength = spades.length;\r\n    const hasSpadeQueen = spadesLength ? isSpecificCardIncluded(spades, spadeQueen) : false;\r\n\r\n    return hasSpadeQueen\r\n      ? this.hasAllHeartHighCards(playerCards.hearts)\r\n      : false;\r\n  }\r\n\r\n  private swapLowestCards(player: HeartsPlayer, remainNrOfSuitsToSwap: number, suitsToSwap: number[]) {\r\n    for (let i = 0; i < remainNrOfSuitsToSwap; i++) {\r\n      const lowestCard = player.findLowestCardInSortedCards(suitsToSwap);\r\n      this.moveToSwap(player, lowestCard);\r\n    }\r\n  }\r\n\r\n  // kiválogatja a legkisebb lapokat, amiket el kell dobni\r\n  private chooseLowCardsToSwap(player: HeartsPlayer, playerCards: SortedCards) {\r\n    const clubsLength = playerCards.clubs.length;\r\n    const diamondsLength = playerCards.diamonds.length;\r\n    const spadesLength = playerCards.spades.length;\r\n    const hearts = playerCards.hearts;\r\n    const heartsLength = playerCards.hearts.length;\r\n\r\n    let nrOfHeartsToSwap = 0;\r\n    if (heartsLength < 8) {\r\n      for (let i = 0; i < hearts.length - 3; i++) {\r\n        if (hearts[i].getRank() < 9) {\r\n          nrOfHeartsToSwap += 1;\r\n        }\r\n      }\r\n    }\r\n    let remainNrOfSuitsToSwap = 3;\r\n\r\n    if (nrOfHeartsToSwap > 0) {\r\n      remainNrOfSuitsToSwap -= nrOfHeartsToSwap;\r\n      this.cardsToSwapBySuit(player, hearts, nrOfHeartsToSwap, true);\r\n    }\r\n    // A maradék színekből a legkisebbeket\r\n    if (remainNrOfSuitsToSwap > 0) {\r\n      this.swapLowestCards(player, remainNrOfSuitsToSwap, [Suit.CLUB, Suit.DIAMOND, Suit.SPADE]);\r\n    }\r\n    // ha a maradék három színből nem lenne meg a maradék cserélendő pl.: maradék 3, szíven kívüli színek 2\r\n    const lastNrOfSuitsToSwap = remainNrOfSuitsToSwap - clubsLength - diamondsLength - spadesLength;\r\n    if (lastNrOfSuitsToSwap > 0) {\r\n      this.swapLowestCards(player, lastNrOfSuitsToSwap, [Suit.HEART]);\r\n    }\r\n  }\r\n\r\n  private highCardsToThrow(cardsBySuit: Card[], cardRanksToHold: number[]): number {\r\n    const cardsLength = cardsBySuit.length;\r\n    let cardsToHold = 0;\r\n    for (let i = 0; i < cardsLength && i < 3; i++) {\r\n      const cardRank = cardsBySuit[i].getRank();\r\n      if (cardRanksToHold.includes(cardRank)) {\r\n        cardsToHold += 1;\r\n      }\r\n    }\r\n\r\n    return cardsLength - cardsToHold;\r\n  }\r\n\r\n  private cardsToSwapBySuit(player: HeartsPlayer, cardsBySuit: Card[], nrOfSuitsToSwap: number, low: boolean) {\r\n      let i = low ? 0 : cardsBySuit.length - 1;\r\n      for (i; low ? i < nrOfSuitsToSwap : i >= (cardsBySuit.length - nrOfSuitsToSwap); low ? i++ : i--) {\r\n        const cardToSwap = cardsBySuit[i];\r\n        this.moveToSwap(player, cardToSwap);\r\n      }\r\n  }\r\n\r\n  private swapRemainNrOfSuits(\r\n    player: HeartsPlayer,\r\n    sortedPlayerCards: SortedCards,\r\n    suitsToSwap: string[],\r\n    remainNrOfSuits: number,\r\n  ) {\r\n    let remainToSwap = remainNrOfSuits;\r\n    for (let i = 0; remainToSwap > 0 && i < suitsToSwap.length; i++) {\r\n      const suit = suitsToSwap[i];\r\n      const suitCards = sortedPlayerCards[suit];\r\n      const suitCardsLength = suitCards.length;\r\n      const cardsToHold = [ 2, 3 ];\r\n      const highCardsToThrow = this.highCardsToThrow(suitCards, cardsToHold);\r\n      if (highCardsToThrow\r\n        && (suit !== suits[2]\r\n          || (suit === suits[2] && (suitCardsLength <= 5 || suitCardsLength >= 11)))) {\r\n          const nrOfSuitToSwap = highCardsToThrow >= remainNrOfSuits\r\n            ? remainNrOfSuits\r\n            : highCardsToThrow;\r\n          this.cardsToSwapBySuit(player, suitCards, nrOfSuitToSwap, false);\r\n          remainToSwap -= nrOfSuitToSwap;\r\n      }\r\n    }\r\n    if (remainToSwap > 0) {\r\n      this.swapRemainNrOfSuits(player, sortedPlayerCards, this.suitSwapPriority, remainToSwap);\r\n    }\r\n  }\r\n\r\n  private swapNrOfSuits(\r\n    player: HeartsPlayer,\r\n    sortedPlayerCards: SortedCards,\r\n    suitsFromRemove: string[],\r\n    highCardsToThrow: NrOfSuits,\r\n  ) {\r\n    let swappedNrOfSuits = 0;\r\n    if (suitsFromRemove.length) {\r\n      for (let i = 0; i < this.suitSwapPriority.length; i++) {\r\n        if (swappedNrOfSuits < 3) {\r\n          const suitToSwap = this.suitSwapPriority[i];\r\n          let nrOfSuitsToSwap = 3 - swappedNrOfSuits;\r\n\r\n          if (suitsFromRemove.includes(suitToSwap)) {\r\n            const nrOfSuit = highCardsToThrow[suitToSwap];\r\n\r\n            nrOfSuitsToSwap = nrOfSuitsToSwap >= nrOfSuit\r\n              ? nrOfSuit\r\n              : nrOfSuitsToSwap;\r\n            this.cardsToSwapBySuit(player, sortedPlayerCards[suitToSwap], nrOfSuitsToSwap, false);\r\n            swappedNrOfSuits += nrOfSuitsToSwap;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (swappedNrOfSuits < 3) {\r\n      const remainNrOfSuits = 3 - swappedNrOfSuits;\r\n      const suitsToSwap = this.suitSwapPriority.filter(suit => !suitsFromRemove.includes(suit));\r\n      this.swapRemainNrOfSuits(player, sortedPlayerCards, suitsToSwap, remainNrOfSuits);\r\n    }\r\n  }\r\n\r\n  // ha egy színből van 3 vagy kevesebb azt cserélje szín prioritás szerint, a 2,3,4-es kártyákat tartsa meg\r\n  private chooseHighCardsToSwap(player: HeartsPlayer, sortedPlayerCards: SortedCards) {\r\n    const cardsToHold = [ 2, 3, 4 ];\r\n    const highCardsToThrow: NrOfSuits = {\r\n      clubs: this.highCardsToThrow(sortedPlayerCards.clubs, cardsToHold),\r\n      diamonds: this.highCardsToThrow(sortedPlayerCards.diamonds, cardsToHold),\r\n      hearts: this.highCardsToThrow(sortedPlayerCards.hearts, cardsToHold),\r\n      spades: this.highCardsToThrow(sortedPlayerCards.spades, cardsToHold),\r\n    };\r\n    const suitsFromRemove: string[] = [];\r\n\r\n    Object.keys(highCardsToThrow).forEach(suit => {\r\n      if (highCardsToThrow[suit] && highCardsToThrow[suit] <= 3) {\r\n        suitsFromRemove.push(suit);\r\n      }\r\n    });\r\n\r\n    this.swapNrOfSuits(player, sortedPlayerCards, suitsFromRemove, highCardsToThrow);\r\n  }\r\n\r\n  private findHigherThanOpenSuitCard(suitsFromOpenSuit: Card[], lastCardFromOpenSuit: Card, highestCardRankOnTable: number): Card {\r\n    let selectedCard = suitsFromOpenSuit[0];\r\n    if (suitsFromOpenSuit.length > 1 && lastCardFromOpenSuit.getRank() > highestCardRankOnTable) {\r\n        selectedCard = lastCardFromOpenSuit;\r\n        for (let i = suitsFromOpenSuit.length - 1; i >= 0; i--) {\r\n          const nextCard = suitsFromOpenSuit[i];\r\n          if (nextCard.getRank() > highestCardRankOnTable) {\r\n            selectedCard = nextCard;\r\n          }\r\n        }\r\n\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n\r\n  private findLowerThanOpenSuitCard(suitsFromOpenSuit: Card[], lastCardFromOpenSuit: Card, highestCardRankOnTable: number): Card {\r\n    let selectedCard = lastCardFromOpenSuit;\r\n    if (lastCardFromOpenSuit.getRank() > highestCardRankOnTable) {\r\n        let lowerRankFound = false;\r\n        for (let i = suitsFromOpenSuit.length - 1; !lowerRankFound && i >= 0; i--) {\r\n          const nextCard = suitsFromOpenSuit[i];\r\n          if (nextCard.getRank() < highestCardRankOnTable || i === 0) {\r\n            selectedCard = nextCard;\r\n            lowerRankFound = true;\r\n          }\r\n        }\r\n\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n\r\n  private selectOpenSuitCard (\r\n    hasPointCardsOnTable: boolean,\r\n    highestCardRankOnTable: number,\r\n    suitsFromOpenSuit: Card[],\r\n    lastCardFromOpenSuit: Card,\r\n    isLast: boolean,\r\n  ): Card {\r\n    let selectedCard = nullCard;\r\n\r\n    // ha a játékos utolsó\r\n    // és van az asztalon pontot érő kártya próbáljon kisebbet tenni, ha nem tud a legnagyobbat\r\n    // vagy nincs az asztalon pontot érő kártya és a legnagyobbat teszi\r\n    if (isLast) {\r\n      selectedCard = hasPointCardsOnTable\r\n        ? this.findLowerThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable)\r\n        : lastCardFromOpenSuit;\r\n    // ha a játékos nem utolsó\r\n    } else {\r\n      // tegye a kintlévőknél kisebbet, ha tudja, ha nem a legnagyobbat\r\n      selectedCard = this.findLowerThanOpenSuitCard(suitsFromOpenSuit, lastCardFromOpenSuit, highestCardRankOnTable);\r\n    }\r\n\r\n    return selectedCard;\r\n  }\r\n}\r\n","export default \".rikiki-container {\\n  background-color: black;\\n}\\n.rikiki-container__settings-panel {\\n  width: 468px;\\n  margin: 200px auto;\\n  background-color: var(--primary-lighter-color);\\n}\\n.rikiki-container__settings-panel_row {\\n  width: 100%;\\n  height: 48px;\\n}\\n.rikiki-container__settings-panel_row .player-name {\\n  width: 108px;\\n  background-color: var(--primary-lighter-color);\\n  outline: none;\\n}\\n.rikiki-container__play-ground .card-table-panel,\\n.rikiki-container__play-ground .my-cards-panel {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n}\\n.rikiki-container__play-ground .control-panel {\\n  margin: 0 auto;\\n  min-width: 820px;\\n  max-width: 820px;\\n}\\n.rikiki-container__play-ground .score-board {\\n  margin: 0 auto;\\n  min-width: 400px;\\n  max-width: 400px;\\n}\\n.rikiki-container__play-ground .card-table-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 100px;\\n  border-top-right-radius: 100px;\\n  border-bottom-left-radius: 0;\\n  border-bottom-right-radius: 0;\\n  min-height: 356px;\\n  max-height: 356px;\\n  padding: 16px 16px 0px 16px;\\n}\\n.rikiki-container__play-ground .card-table-panel_first-half {\\n  flex: 0 1 10%;\\n}\\n.rikiki-container__play-ground .card-table-panel_second-half {\\n  flex: 0 1 90%;\\n}\\n.rikiki-container__play-ground .my-cards-panel {\\n  background-color: var(--table-green);\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n  border-bottom-left-radius: 100px;\\n  border-bottom-right-radius: 100px;\\n  min-height: 240px;\\n  max-height: 240px;\\n  padding: 0px 16px 16px 16px;\\n}\\n.rikiki-container__play-ground .my-cards-panel__first-half {\\n  flex: 0 1 10%;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half {\\n  flex: 0 1 90%;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half_my-cards .margin-left-1 {\\n  margin-left: 1rem;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half_my-cards .my-card-in-hand:hover {\\n  cursor: pointer;\\n}\\n.rikiki-container__play-ground .my-cards-panel__second-half_info {\\n  min-height: 40px;\\n}\\n.rikiki-container__play-ground .control-panel {\\n  padding: 0px 16px;\\n}\\n.rikiki-container__play-ground .control-panel_first-half {\\n  flex: 0 1 75%;\\n}\\n.rikiki-container__play-ground .control-panel_second-half {\\n  flex: auto;\\n}\\n.rikiki-container__play-ground .control-panel,\\n.rikiki-container__play-ground .score-board {\\n  background-color: var(--primary-lighter-color);\\n}\\n.rikiki-container__play-ground .card-table-other-players {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.rikiki-container__play-ground .card-table-other-players div:nth-child(1) {\\n  display: none;\\n}\\n.rikiki-container__play-ground .card-table-other-players div:nth-child(2) {\\n  margin-left: 3rem;\\n}\\n.rikiki-container__play-ground .mat-slider-horizontal {\\n  min-width: 100px;\\n}\\n.rikiki-container__play-ground .card-size {\\n  width: 80px;\\n}\\n.rikiki-container__play-ground .my-card {\\n  flex: 0 1 calc(100% - 96px);\\n}\\n.rikiki-container__play-ground .score-board-header,\\n.rikiki-container__play-ground .score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__play-ground .score-board-header div:nth-child(n+2),\\n.rikiki-container__play-ground .score-board-row div:nth-child(n+2) {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__play-ground .score-board-header div {\\n  height: 36px;\\n}\\n.rikiki-container__play-ground .score-board-header div,\\n.rikiki-container__play-ground .score-board-row div {\\n  width: 80px;\\n  padding: 4px 8px;\\n  text-align: center;\\n}\\n.rikiki-container__history {\\n  margin: 0 auto;\\n  min-width: calc((1024 - 2 * 16) * 1px);\\n  max-width: calc((1024 - 2 * 16) * 1px);\\n  background-color: var(--primary-lighter-color);\\n}\\n.rikiki-container__history .history-score-board-header-name {\\n  height: 36px;\\n}\\n.rikiki-container__history .history-score-board-header,\\n.rikiki-container__history .history-score-board-row {\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__history .history-score-board-header div:nth-child(n+2).history-score-board-col,\\n.rikiki-container__history .history-score-board-row div:nth-child(n+2).history-score-board-col {\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n  border-color: rgba(0, 0, 0, 0.12);\\n}\\n.rikiki-container__history .history-score-board-col {\\n  width: 60px;\\n  padding: 4px 8px;\\n}\\n.rikiki-container__history .history-score-board-col-height {\\n  height: 56px;\\n}\\n.rikiki-container__history .history-card-size {\\n  width: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component } from '@angular/core';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { RikikiPlayer } from '../../table-parts/player/rikiki-player';\r\nimport { RikikiTable } from '../../table-parts/table/rikiki-table';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { RikikiService } from './rikiki.service';\r\nimport { TurnHistoryRow } from 'src/app/interfaces/turn-history-row.interface';\r\n\r\n@Component({\r\n  selector: 'app-rikiki',\r\n  templateUrl: 'rikiki.component.html',\r\n  styleUrls: ['rikiki.component.scss'],\r\n})\r\nexport class RikikiComponent {\r\n\r\n  /* TODO's\r\n  * refaktorálni a kártya választásokat a rendezett kártya lista alapján\r\n  */\r\n\r\n  private readonly imgUrlPrefix = 'assets/images/';\r\n  private readonly imgUrlSuffix = '.svg';\r\n  private readonly defaultMsg = { type: '', msg: ' ', subMsg: ' ', translateParams: {} };\r\n  private readonly deckSize = 52;\r\n  private readonly playerNames: string[] = ['Eve', 'Luke', 'Jane', 'Sam', 'Tim', 'Tom'];\r\n  public readonly nrOfPlayersMax = 7;\r\n\r\n  public placeholderCardImgUrl = `${this.imgUrlPrefix}card_placeholder${this.imgUrlSuffix}`;\r\n  public cardBackImgUrl = `${this.imgUrlPrefix}card_back_2${this.imgUrlSuffix}`;\r\n  public players: RikikiPlayer[] = [];\r\n  public cardUrls: string[] = [];\r\n  public myCardUrl = this.placeholderCardImgUrl;\r\n  public trumpCardUrl = this.placeholderCardImgUrl;\r\n\r\n  public allMessage = this.defaultMsg;\r\n  public history: TurnHistoryRow[] = [];\r\n  public myTable: RikikiTable;\r\n  public round: number;\r\n  public relativeRound: number;\r\n  public playerBet: number;\r\n  public playerBetMin = 0;\r\n  public playerBetMax = 1;\r\n\r\n  public dealerIdx: number;\r\n  public endOfGame = true;\r\n  public endOfRound = true;\r\n  public endOfBet = true;\r\n  public endOfSelection = true;\r\n\r\n  public nrOfPlayersTemp: number;\r\n  public nrOfRoundsTemp: number;\r\n  public nrOfRoundsMax = 9;\r\n  public starterIdxTemp: number;\r\n  public starterIdxMax: number;\r\n\r\n  private nrOfPlayers = 3;\r\n  private nrOfRounds = 3;\r\n  private starterIdx = 1;\r\n  private playerName = history.state.data?.playerName;\r\n\r\n  private trumpCard: Card;\r\n  private roundInc: boolean;\r\n  private turnInRound: number;\r\n  private betTotal: number;\r\n  private playerIdx: number;\r\n  private lastPlayerIdx: number;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private rikikiService: RikikiService,\r\n  ) {\r\n    this.nrOfPlayersTemp = this.nrOfPlayers;\r\n    this.nrOfRoundsTemp = this.nrOfRounds;\r\n    this.starterIdxTemp = this.starterIdx;\r\n    this.leaveGame();\r\n  }\r\n\r\n  setNrOfPlayers() {\r\n    this.nrOfPlayers = this.nrOfPlayersTemp;\r\n    const maxRounds = Math.floor(this.deckSize / this.nrOfPlayers);\r\n    this.nrOfRoundsMax =  maxRounds > 9 ? 9 : maxRounds;\r\n    this.nrOfRoundsTemp = this.nrOfRounds;\r\n    this.starterIdxTemp = this.starterIdx;\r\n  }\r\n\r\n  setNrOfRounds() {\r\n    this.nrOfRounds = this.nrOfRoundsTemp;\r\n    this.nrOfPlayersTemp = this.nrOfPlayers;\r\n    this.starterIdxTemp = this.starterIdx;\r\n  }\r\n\r\n  setStarter() {\r\n    this.starterIdx = this.starterIdxTemp;\r\n    this.nrOfPlayersTemp = this.nrOfPlayers;\r\n    this.nrOfRoundsTemp = this.nrOfRounds;\r\n  }\r\n\r\n  convertCardToImgUrl(card: Card) {\r\n    return `${this.imgUrlPrefix}${card.printCard()}${this.imgUrlSuffix}`;\r\n  }\r\n\r\n  leaveGame() {\r\n    this.myCardUrl = this.placeholderCardImgUrl;\r\n    this.trumpCardUrl = this.placeholderCardImgUrl;\r\n    this.allMessage = this.defaultMsg;\r\n    this.playerBet = 0;\r\n    this.dealerIdx = 0;\r\n    this.endOfGame = true;\r\n    this.endOfRound = true;\r\n    this.endOfBet = true;\r\n    this.endOfSelection = true;\r\n    this.playerBetMax = this.round;\r\n    this.initGame();\r\n  }\r\n\r\n  newGame() {\r\n    this.endOfGame = false;\r\n    this.initGame();\r\n    this.newRound();\r\n  }\r\n\r\n  newRound() {\r\n    this.endOfRound = false;\r\n    ++this.relativeRound;\r\n    this.playerBet = 0;\r\n    this.playerBetMax = this.round;\r\n    this.trumpCardUrl = this.placeholderCardImgUrl;\r\n    this.showTableCards();\r\n    // az adott körben kezdő játékos (osztó) váltása\r\n    const starterPlayerIdx = (this.round - 1 + this.starterIdx - 1) % this.nrOfPlayers;\r\n    this.dealerIdx = (starterPlayerIdx - 1 + this.nrOfPlayers) % this.nrOfPlayers;\r\n    this.myTable.setStarterAndLastPlayer(starterPlayerIdx);\r\n\r\n    // fogadás és megvalósulás számlálók inicializálása\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        this.myTable.getPlayer(i).setBet(-1);\r\n        this.myTable.getPlayer(i).resetReal();\r\n    }\r\n\r\n    // minden játékos kap egy kártyát, annyiszor amennyi kör van\r\n    for (let i = 1; i <= this.round; ++i) {\r\n        for (let j = 0; j < this.nrOfPlayers; ++j) {\r\n            this.myTable.getPlayer(j).addCard(this.myTable.getCardFromDeck());\r\n        }\r\n    }\r\n    // kártyák sorba rendezése\r\n    if (this.round > 1) {\r\n      this.myTable.getPlayer(0).sortPlayerCards();\r\n    }\r\n    // adu kártya húzása\r\n    this.trumpCard = this.myTable.getTrumpCard();\r\n    this.trumpCardUrl = this.convertCardToImgUrl(this.trumpCard);\r\n\r\n    this.setBets(starterPlayerIdx);\r\n  }\r\n\r\n  bet() {\r\n    if (this.playerBet === this.round - this.myTable.getBetTotal() && this.myTable.getPlayer(0).isLast()) {\r\n      this.allMessage = {\r\n        type: 'error',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.INVALID_BET_MSG',\r\n        subMsg: 'MY_CARDS_PANEL.MESSAGES.INVALID_BET_SUBMSG',\r\n        translateParams: { playerBet: this.playerBet, round: this.round}\r\n      };\r\n    } else {\r\n      this.allMessage = this.defaultMsg;\r\n      this.myTable.getPlayer(0).setBet(this.playerBet);\r\n      this.setBetTotalAndNextPlayer();\r\n      this.setPlayersBet();\r\n      this.endOfBet = true;\r\n      this.playTurn();\r\n    }\r\n  }\r\n\r\n  checkSelectedCard(\r\n    selectedCardIdx: number,\r\n    playerCards: Card[],\r\n    trumpCardSuit: number,\r\n    firstCardSuit: number\r\n  ): { isSelectedValid: boolean, hasFirstCardSuit?: boolean, hasTrumpCardSuit?: boolean } {\r\n    const selectedCardSuit = playerCards[selectedCardIdx].getSuit();\r\n\r\n    // TODO firstCardSuti lehet, hogy 0, mert a firstCard még nullCard, mert kezdő a játékos, mégis működik?! Kivizsgálni!\r\n    if (selectedCardSuit === firstCardSuit) {\r\n      return { isSelectedValid: true };\r\n    }\r\n\r\n    let hasFirstCardSuit = false;\r\n    let hasTrumpCardSuit = false;\r\n    for (let i = 0; (!hasFirstCardSuit || !hasTrumpCardSuit) && i < playerCards.length; i++) {\r\n      const playerCardSuit = playerCards[i].getSuit();\r\n      if (!hasFirstCardSuit) {\r\n        hasFirstCardSuit = playerCardSuit === firstCardSuit;\r\n      }\r\n      if (!hasTrumpCardSuit) {\r\n        hasTrumpCardSuit = playerCardSuit === trumpCardSuit;\r\n      }\r\n    }\r\n\r\n    if (hasFirstCardSuit && selectedCardSuit !== firstCardSuit) {\r\n      return { isSelectedValid: false, hasFirstCardSuit, hasTrumpCardSuit };\r\n    }\r\n\r\n    if (hasTrumpCardSuit && selectedCardSuit !== trumpCardSuit) {\r\n      return { isSelectedValid: false, hasFirstCardSuit, hasTrumpCardSuit };\r\n    }\r\n\r\n    return { isSelectedValid: true };\r\n  }\r\n\r\n  selectedCard(selectedCardIdx: number) {\r\n    if (!this.endOfSelection) {\r\n      const player = this.myTable.getPlayer(0);\r\n      const playerCards = player.getCards();\r\n      if (selectedCardIdx <= this.round && selectedCardIdx <= playerCards.length) {\r\n        const trumpCardSuit = this.trumpCard.getSuit();\r\n        const firstCardSuit = this.myTable.getFirstCard().getSuit();\r\n        const checkedCards = this.checkSelectedCard(selectedCardIdx, playerCards, trumpCardSuit, firstCardSuit);\r\n        if (playerCards.length === 1 || player.isStarter() || checkedCards.isSelectedValid) {\r\n          this.myTable.putCardOnTable(this.playerIdx, player.removeCardByIdx(selectedCardIdx));\r\n          this.handleRound();\r\n          this.setPlayersTurn();\r\n          this.endOfSelection = true;\r\n          this.allMessage = this.defaultMsg;\r\n        } else {\r\n          const isObligatedSuitTrump =\r\n            firstCardSuit === trumpCardSuit || checkedCards.hasTrumpCardSuit && !checkedCards.hasFirstCardSuit;\r\n          if (isObligatedSuitTrump) {\r\n            this.allMessage = {\r\n              type: 'error',\r\n              msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n              subMsg: 'MY_CARDS_PANEL.MESSAGES.SELECT_TRUMP_CARD_SUIT',\r\n              translateParams: {}\r\n            };\r\n          } else {\r\n            const suits = ['CLUB', 'DIAMOND', 'HEART', 'SPADE'];\r\n            this.translate.get(suits[firstCardSuit - 1])\r\n              .subscribe((translation) => {\r\n                this.allMessage = {\r\n                  type: 'error',\r\n                  msg: 'MY_CARDS_PANEL.MESSAGES.INCORRECT_SELECTION',\r\n                  subMsg: 'MY_CARDS_PANEL.MESSAGES.SELECT_FIRST_CARD_SUIT',\r\n                  translateParams: { suit: translation }\r\n                };\r\n              });\r\n          }\r\n        }\r\n      } else {\r\n        this.allMessage = {\r\n          type: 'error',\r\n          msg: 'MY_CARDS_PANEL.MESSAGES.INVALID_SELECTION',\r\n          subMsg: ' ',\r\n          translateParams: { selectedCardIdx: selectedCardIdx }\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmStand() {\r\n    this.endOfSelection = false;\r\n    if (this.myTable.getPlayer(0).hasCard()) {\r\n      this.showTableCards();\r\n      this.askPlayerToSelectCard();\r\n    }\r\n    if (!this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        this.myTable.getPlayer(i).setScore();\r\n      }\r\n      this.addToHistory();\r\n      this.endOfSelection = true;\r\n      this.endOfRound = true;\r\n      this.shuffle();\r\n      if (this.roundInc && this.round < this.nrOfRounds) {\r\n        ++this.round;\r\n      } else if (this.roundInc && this.round === this.nrOfRounds) {\r\n        ++this.starterIdx;\r\n        this.roundInc = false;\r\n      } else if (this.round > 1) {\r\n        --this.round;\r\n      } else if (this.round <= 1) {\r\n        this.endOfGame = true;\r\n        this.findWinner();\r\n      }\r\n    }\r\n  }\r\n\r\n  private initGame() {\r\n    this.cardUrls = [];\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      this.cardUrls[i] = this.placeholderCardImgUrl;\r\n    }\r\n    this.relativeRound = 0;\r\n    this.roundInc = true;\r\n    this.myTable = new RikikiTable(this.nrOfPlayers);\r\n    if (this.playerName) {\r\n      this.myTable.getPlayer(0).setName(this.playerName);\r\n    }\r\n    for (let i = 1; i < this.nrOfPlayers; ++i) {\r\n      this.myTable.getPlayer(i).setName(this.playerNames[i - 1]);\r\n    }\r\n    this.players = this.myTable.getPlayers();\r\n    this.round = 1;\r\n    this.history = [];\r\n  }\r\n\r\n  private shuffle() {\r\n    this.myTable.addCardToDeck(this.trumpCard);\r\n    this.myTable.shuffleDeck();\r\n  }\r\n\r\n  private sortPlayerCards() {\r\n    this.myTable.getPlayer(0).getCards()\r\n      .sort((a, b) => (\r\n        a.getSuit() > b.getSuit()\r\n          ? 1\r\n          : (a.getSuit() === b.getSuit())\r\n            ? ((a.getRank() > b.getRank()) ? 1 : -1)\r\n            : -1\r\n      ));\r\n  }\r\n\r\n  private setBetTotalAndNextPlayer() {\r\n    this.betTotal += this.myTable.getPlayer(this.playerIdx).getBet();\r\n    this.myTable.setBetTotal(this.betTotal);\r\n    ++this.turnInRound;\r\n    this.playerIdx = (this.turnInRound - 1 + this.starterIdx - 1) % this.nrOfPlayers;\r\n  }\r\n\r\n  private setPlayersBet() {\r\n    while (this.playerIdx !== 0 && this.myTable.getPlayer(this.playerIdx).getBet() < 0) {\r\n      this.myTable.getPlayer(this.playerIdx)\r\n        .setBet(\r\n          this.rikikiService.betAI(\r\n            this.myTable,\r\n            this.trumpCard,\r\n            this.nrOfPlayers,\r\n            this.round,\r\n            this.playerIdx,\r\n          )\r\n        );\r\n      this.setBetTotalAndNextPlayer();\r\n    }\r\n  }\r\n\r\n  private askPlayerToBet() {\r\n    const invalidBet = this.round - this.betTotal >= 0;\r\n    const invalidBetText = this.myTable.getPlayer(0).isLast() && invalidBet\r\n      ? 'MY_CARDS_PANEL.MESSAGES.CHOOSE_VALID_BET_SUBMSG'\r\n      : ' ';\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_VALID_BET_MSG',\r\n      subMsg: invalidBetText,\r\n      translateParams: { roundMinusBetTotal: this.round - this.betTotal }\r\n    };\r\n  }\r\n\r\n  private setBets(starterPlayerIdx: number) {\r\n    this.endOfBet = false;\r\n    this.turnInRound = this.round;\r\n    this.betTotal = 0;\r\n    this.playerIdx = starterPlayerIdx;\r\n    if (this.playerIdx !== 0) {\r\n      this.setPlayersBet();\r\n    }\r\n    if (this.round === 1) {\r\n      this.showTableCards(true);\r\n    }\r\n    this.askPlayerToBet();\r\n  }\r\n\r\n  private handleRound() {\r\n    // ha pont annyi kártya van lent ahány játékos, akkor ebben a körben mindenki letette a lapját\r\n    if (this.myTable.nrOfCardsOnTable() === this.nrOfPlayers) {\r\n      const starterIdx = (this.playerIdx + 1) % this.nrOfPlayers;\r\n      this.showTableCards();\r\n      this.askPlayerToSelectCard();\r\n      // aki viszi a kört, az lesz a kezdő\r\n      this.playerIdx = this.myTable.findHighestCardOnTable(this.trumpCard.getSuit());\r\n      this.myTable.getPlayer(this.playerIdx).addReal(1);\r\n      this.addToHistory(true, starterIdx);\r\n      this.myTable.removeCardsFromTable();\r\n      this.myTable.setStarterAndLastPlayer(this.playerIdx);\r\n      this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    } else {\r\n      ++this.playerIdx;\r\n      this.playerIdx %= this.nrOfPlayers;\r\n    }\r\n  }\r\n\r\n  private setPlayersTurn() {\r\n    while (this.playerIdx !== 0 && this.myTable.getPlayer(this.lastPlayerIdx).hasCard()) {\r\n      // ha a játékosnak több kártyája van\r\n      if (this.myTable.getPlayer(this.playerIdx).getCards().length > 1) {\r\n        const selectedCard = this.rikikiService.selectCardAI(this.myTable, this.trumpCard, this.round, this.playerIdx);\r\n        this.myTable.putCardOnTable(\r\n          this.playerIdx,\r\n          this.myTable.getPlayer(this.playerIdx).removeCardByIdx(selectedCard)\r\n        );\r\n      } else {\r\n        // ha a játékosnak csak egy kártyája maradt, akkor azt azonnal leteszi\r\n        this.myTable.putCardOnTable(\r\n          this.playerIdx,\r\n          this.myTable.getPlayer(this.playerIdx).removeCardByIdx(0)\r\n        );\r\n      }\r\n      this.handleRound();\r\n    }\r\n  }\r\n\r\n  private askPlayerToSelectCard() {\r\n    this.allMessage = {\r\n      type: 'info',\r\n      msg: 'MY_CARDS_PANEL.MESSAGES.CHOOSE_CARD',\r\n      subMsg: ' ',\r\n      translateParams: {}\r\n    };\r\n  }\r\n\r\n  private playTurn() {\r\n    this.endOfSelection = false;\r\n    this.lastPlayerIdx = this.myTable.getLastPlayer();\r\n    if (this.playerIdx !== 0) {\r\n      this.setPlayersTurn();\r\n    }\r\n    // ha a játékosnak több kártyája van\r\n    // TODO this.playerIdx mindig 0-ra értendő\r\n    const playerCardsLength = this.myTable.getPlayer(this.playerIdx).getCards().length;\r\n    if (playerCardsLength > 1) {\r\n      this.showTableCards();\r\n    }\r\n    this.askPlayerToSelectCard();\r\n  }\r\n\r\n  private showTableCards(peek = false) {\r\n    let cardsOnTable: Card[] = [];\r\n\r\n    if (peek) {\r\n      const players = this.myTable.getPlayers().slice(1);\r\n      for (let i = 0; i < players.length; i++) {\r\n        cardsOnTable[i + 1] = players[i].getCards()[0];\r\n      }\r\n    } else {\r\n      cardsOnTable = this.myTable.checkCardSlotsOnTable();\r\n    }\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      if (i === 0) {\r\n        this.myCardUrl = cardsOnTable[0]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[0])\r\n          : this.placeholderCardImgUrl;\r\n      } else {\r\n        this.cardUrls[i] = cardsOnTable[i]?.getSuit()\r\n          ? this.convertCardToImgUrl(cardsOnTable[i])\r\n          : this.placeholderCardImgUrl;\r\n      }\r\n    }\r\n  }\r\n\r\n  private addToHistory(isCardRow = false, starterIdx = 0) {\r\n    let turn = this.myTable.getPlayer(0).getCards().length;\r\n    turn = this.round === 1 ? 1 : this.round - turn;\r\n\r\n    let cardUrls: string[] = [];\r\n    if (isCardRow) {\r\n      cardUrls = cloneDeep(this.cardUrls);\r\n      cardUrls.splice(0, 1, this.convertCardToImgUrl(this.myTable.checkCardSlotsOnTable()[0]));\r\n    }\r\n\r\n    this.history.push({\r\n      isCardRow,\r\n      cardRow: isCardRow\r\n        ? {\r\n          turnPerRound: `${turn}/${this.round}`,\r\n          trunStarter: this.myTable.getPlayer(starterIdx).getName(),\r\n          cardUrls: cardUrls,\r\n          turnTaker: this.myTable.getPlayer(this.playerIdx).getName(),\r\n        }\r\n        : {},\r\n      scoreRow: isCardRow\r\n        ? {}\r\n        : {\r\n          trumpCardUrl: this.trumpCardUrl,\r\n          players: cloneDeep(this.myTable.getPlayers())\r\n        }\r\n    });\r\n  }\r\n\r\n  private findWinner() {\r\n    const players = this.myTable.getPlayers();\r\n    let winnerIdx = 0;\r\n    let winner = players[winnerIdx];\r\n    for (let i = 1; i < players.length; i++) {\r\n      if (players[i].getScore() > winner.getScore()) {\r\n        winner = players[i];\r\n        winnerIdx = i;\r\n      }\r\n    }\r\n\r\n    this.allMessage = winnerIdx === 0\r\n      ? {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.YOU_WON',\r\n        subMsg: ' ',\r\n        translateParams: {}\r\n      }\r\n      : {\r\n        type: 'info',\r\n        msg: 'MY_CARDS_PANEL.MESSAGES.ANOTHER_WON',\r\n        subMsg: ' ',\r\n        translateParams: { winner: winner.getName() }\r\n      };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { suits } from 'src/app/table-parts/suit/suits';\r\nimport { Card } from '../../table-parts/card/card';\r\nimport { RikikiPlayer } from '../../table-parts/player/rikiki-player';\r\nimport { RikikiTable } from '../../table-parts/table/rikiki-table';\r\n\r\n@Injectable()\r\nexport class RikikiService {\r\n\r\n  constructor() {}\r\n\r\n  private betAIRound1(\r\n    myTable: RikikiTable,\r\n    nrOfPlayers: number,\r\n    bettingPlayerIdx: number,\r\n    bettingPlayer: RikikiPlayer,\r\n    totalBets: number,\r\n    trumpCardSuit: number,\r\n    bettingPlayerLast: boolean\r\n  ): number {\r\n    let bet: number;\r\n    if (bettingPlayerLast) {\r\n      if (totalBets === 1) {\r\n        return 1; // az összfogadás nem egyezhet a körszámmal\r\n      } else if (totalBets === 0) {\r\n        return 0; // az összfogadás nem egyezhet a körszámmal\r\n      }\r\n    }\r\n\r\n    bet = -1;\r\n    for (let playerIdx = 0; bet !== 0 && playerIdx < nrOfPlayers; ++playerIdx) {\r\n      if (playerIdx !== bettingPlayerIdx\r\n        && trumpCardSuit === myTable.getPlayer(playerIdx).getCards()[0].getSuit()) {\r\n        bet = 0; // van másnál adu\r\n      }\r\n    }\r\n\r\n    if (bet < 0) {\r\n      const seenBigSuits: number[] = []; // adun kívüli más színben lévő nagy lapok (nincs másnál adu)\r\n      for (let playerIdx = 0; playerIdx < nrOfPlayers; ++playerIdx) {\r\n        if (playerIdx !== bettingPlayerIdx\r\n          && myTable.getPlayer(playerIdx).getCards()[0].getRank() > 9) {\r\n          const otherPlayerSuit = myTable.getPlayer(playerIdx).getCards()[0].getSuit();\r\n          if (!seenBigSuits.includes(otherPlayerSuit)) {\r\n            seenBigSuits.push(otherPlayerSuit);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (seenBigSuits.length === 3) {\r\n        bet = 0;\r\n      } else if (bettingPlayer.isStarter()) {\r\n        bet = 1; // nincs másnál adu vagy adun kívüli három különböző színben lévő nagy lapok és a játékos az első fogadó\r\n      } else {\r\n        for (let playerIdx = 0; playerIdx < nrOfPlayers; ++playerIdx) {\r\n          if (playerIdx !== bettingPlayerIdx\r\n            && myTable.getPlayer(playerIdx).isStarter()\r\n            && myTable.getPlayer(playerIdx).getBet() === 0) {\r\n            // nincs másnál adu vagy adun kívüli három különböző színben lévő nagy lapok\r\n            // és az első játékos nem fogadott magára\r\n            bet = 1;\r\n          }\r\n        }\r\n\r\n        if (bet < 0) {\r\n          bet = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    return bet;\r\n  }\r\n\r\n  private betAIRound2(\r\n    myTable: RikikiTable,\r\n    nrOfPlayers: number,\r\n    round: number,\r\n    bettingPlayerCards: Card[],\r\n    totalBets: number,\r\n    trumpCardSuit: number,\r\n    bettingPlayerLast: boolean\r\n  ): number {\r\n    let bet = 0;\r\n    const cardsIn = [true, true];\r\n    let totalCardsOut = 0;\r\n    let highTrumpCards = 0;\r\n    let lowTrumpCards = 0;\r\n\r\n    // adu kártya keresés\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()) {\r\n        if (bettingPlayerCards[i].getRank() > 9) {\r\n          ++bet;\r\n          ++highTrumpCards;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        } else if (bettingPlayerCards[i].getRank() <= 9) {\r\n          if (lowTrumpCards === 0) {\r\n            ++bet;\r\n          }\r\n          ++lowTrumpCards;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // ha van még fogadható lap, akkor ha van egy magas adu és mellette egy magas lap, akkor plusz egy ütés\r\n    if (totalCardsOut !== 2) {\r\n      for (let i = 0; i < round; ++i) {\r\n        if (cardsIn[i]\r\n          && highTrumpCards > 0\r\n          && bettingPlayerCards[i].getRank() > 10) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // ha a fogadás idáig nulla, akkor két nem adu színű magas lapra, ha az összegük nagyobb mint 23\r\n    // pl. minimum J + Q kombó, akkor a fogadás 1\r\n    if (bet === 0\r\n      && bettingPlayerCards[0].getRank() >= 11\r\n      && bettingPlayerCards[1].getRank() >= 11\r\n      && bettingPlayerCards[0].getRank() + bettingPlayerCards[1].getRank() > 23) {\r\n      ++bet;\r\n      // az összfogadás nem egyezhet a körszámmal ezért vissza kell vonni egy ütést\r\n      if (bettingPlayerLast && totalBets === 1) {\r\n        --bet;\r\n      }\r\n    } else if (totalCardsOut === 2) {\r\n      if (bettingPlayerLast) {\r\n        // két magas vagy egy magas és egy alacsony adura vagy egy magas adura és egy magas lapra a fogadás 2 volt,\r\n        // de az összfogadás 0 és az összegük nem egyezhet a körszámmal\r\n        if (totalBets === 0 && lowTrumpCards !== 2) {\r\n          --bet;\r\n        } else if (totalBets === 1 && lowTrumpCards === 2) {\r\n        // két alacsony adura a fogadás 1 volt, de az összfogadás is 1 és az összegük nem egyezhet a körszámmal\r\n          ++bet;\r\n        }\r\n      }\r\n    } else {\r\n      // ha legalább egy adu van\r\n      if (totalCardsOut === 1) {\r\n        // egy alacsony adu esetén a fogadás 1, de ha megelőzi 2-es fogadás, akkor 0-t fogad\r\n        if (lowTrumpCards === 1) {\r\n          for (let i = 0; i < nrOfPlayers; ++i) {\r\n            if (myTable.getPlayer(i).getBet() === 2) {\r\n              --bet;\r\n            }\r\n          }\r\n        }\r\n        // egy magas adu esetén a fogadás 1\r\n        // vagy egy alacsony adu esetén, ha nem előzi meg 2-es fogadás, akkor a fogadás 1\r\n        // de az összfogadás is 1 és az összegük nem egyezhet a körszámmal\r\n        if (bettingPlayerLast && totalBets === 1 && bet === 1) {\r\n          if (highTrumpCards > 0) {\r\n            ++bet;\r\n          } else {\r\n            --bet;\r\n          }\r\n        }\r\n      }\r\n      // rossz lapok vagy alacsony adura fogadás visszavonása (megelőzi 2-es fogadás) esetén a fogadás 0,\r\n      // de az összfogadás 2 és az összegük nem egyezhet a körszámmal\r\n      if (bettingPlayerLast && totalBets === 2 && bet === 0) {\r\n        ++bet;\r\n      }\r\n    }\r\n\r\n    return bet;\r\n  }\r\n\r\n  private betAIRound3OrHigher(\r\n    nrOfPlayers: number,\r\n    round: number,\r\n    bettingPlayerCards: Card[],\r\n    bettingPlayerLast: boolean,\r\n    totalBets: number,\r\n    trumpCardSuit: number\r\n  ): number {\r\n    const cardsIn: boolean[] = [];\r\n    let bet = 0;\r\n    let kings = 0;\r\n    let totalCardsOut = 0;\r\n    let highTrumpCards = 0;\r\n    let middleTrumpCards = 0;\r\n    let lowTrumpCards = 0;\r\n\r\n    for (let i = 0; i < round; i++) {\r\n      cardsIn.push(true);\r\n    }\r\n\r\n    // adu kártya keresés\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()\r\n        && bettingPlayerCards[i].getRank() > 11) {\r\n          ++bet;\r\n          ++highTrumpCards;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()\r\n        && bettingPlayerCards[i].getRank() <= 11\r\n        && bettingPlayerCards[i].getRank() >= 9) {\r\n        if ((highTrumpCards > 1 || middleTrumpCards < 2) && round * nrOfPlayers <= 36) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n        ++middleTrumpCards;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < round; ++i) {\r\n      if (trumpCardSuit === bettingPlayerCards[i].getSuit()\r\n        && bettingPlayerCards[i].getRank() < 9) {\r\n        if (lowTrumpCards !== 0 && (lowTrumpCards + 1) % 2 === 0 && round * nrOfPlayers <= 36) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n        }\r\n        ++lowTrumpCards;\r\n      }\r\n    }\r\n\r\n    // ha van még fogadható lap, akkor ha van egy magas adu és mellette egy magas lap, akkor plusz egy ütés\r\n    if (totalCardsOut !== round) {\r\n      let remainingTrumpCards = (middleTrumpCards + lowTrumpCards) - (totalCardsOut - highTrumpCards);\r\n      for (let i = 0; i < round; ++i) {\r\n        if (cardsIn[i]\r\n          && trumpCardSuit !== bettingPlayerCards[i].getSuit()\r\n          && bettingPlayerCards[i].getRank() > 11\r\n          && remainingTrumpCards > 0) {\r\n          ++bet;\r\n          ++totalCardsOut;\r\n          cardsIn[i] = false;\r\n          --remainingTrumpCards;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (bet === 0) {\r\n      for (let i = 0; i < round; ++i) {\r\n        if (bettingPlayerCards[i].getRank() === 14 && round < 5 && nrOfPlayers < 5) {\r\n          ++bet;\r\n        }\r\n        if (bettingPlayerCards[i].getRank() === 13 && round < 5 && nrOfPlayers < 5) {\r\n          ++bet;\r\n          ++kings;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (bettingPlayerLast && (totalBets + bet === round)) {\r\n      if (bet === round) {\r\n        --bet;\r\n      } else if (bet === 0) {\r\n        ++bet;\r\n      } else {\r\n        if (highTrumpCards === bet) {\r\n          ++bet;\r\n        } else if (kings > 0) {\r\n          --bet;\r\n        } else {\r\n          --bet;\r\n        }\r\n      }\r\n    }\r\n\r\n    return bet;\r\n  }\r\n\r\n  betAI(\r\n    myTable: RikikiTable,\r\n    trumpCard: Card,\r\n    nrOfPlayers: number,\r\n    round: number,\r\n    bettingPlayerIdx: number\r\n  ): number {\r\n    const bettingPlayer = myTable.getPlayer(bettingPlayerIdx);\r\n    const bettingPlayerCards = bettingPlayer.getCards();\r\n    const totalBets = myTable.getBetTotal();\r\n    const trumpCardSuit = trumpCard.getSuit();\r\n    const bettingPlayerLast = bettingPlayer.isLast();\r\n    if (round === 1) {\r\n      return this.betAIRound1(\r\n        myTable,\r\n        nrOfPlayers,\r\n        bettingPlayerIdx,\r\n        bettingPlayer,\r\n        totalBets,\r\n        trumpCardSuit,\r\n        bettingPlayerLast\r\n      );\r\n    } else if (round === 2) {\r\n      return this.betAIRound2(\r\n        myTable,\r\n        nrOfPlayers,\r\n        round,\r\n        bettingPlayerCards,\r\n        totalBets,\r\n        trumpCardSuit,\r\n        bettingPlayerLast\r\n      );\r\n    } else {\r\n      return this.betAIRound3OrHigher(\r\n        nrOfPlayers,\r\n        round,\r\n        bettingPlayerCards,\r\n        bettingPlayerLast,\r\n        totalBets,\r\n        trumpCardSuit\r\n      );\r\n    }\r\n  }\r\n\r\n  private tryToBeatTrumpCard(\r\n    myTable: RikikiTable,\r\n    player: RikikiPlayer,\r\n    playerCards: Card[],\r\n    trumpCardSuit: number,\r\n  ): number {\r\n    let cardIdx = player.findHighestTrumpCard(trumpCardSuit);\r\n    const cardsOnTable = myTable.checkCardsOnTable();\r\n    // Az asztalon lévő adu kártyáknál van-e nagyobb adukártyája a játékosnak\r\n    // ha nincs a legkisebbet teszi\r\n    if (cardIdx !== -1) {\r\n      let higherRankFound = false;\r\n      for (let i = 0; !higherRankFound && i < cardsOnTable.length; ++i) {\r\n        if (cardsOnTable[i].getSuit() === trumpCardSuit\r\n          && cardsOnTable[i].getRank() > playerCards[cardIdx].getRank()) {\r\n          cardIdx = player.findLowestTrumpCard(trumpCardSuit);\r\n          higherRankFound = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cardIdx;\r\n  }\r\n\r\n  selectCardAI(\r\n    myTable: RikikiTable,\r\n    trumpCard: Card,\r\n    round: number,\r\n    playerIdx: number\r\n  ): number {\r\n    const trumpCardSuit = trumpCard.getSuit();\r\n    const player = myTable.getPlayer(playerIdx);\r\n    const playerCards = player.getCards();\r\n    const playerBet = player.getBet();\r\n    let cardIdx = -1;\r\n    let firstCardSuit = -1;\r\n\r\n    if (player.isStarter()) {\r\n      if (playerBet === round) {\r\n        cardIdx = player.findHighestTrumpCard(trumpCardSuit);\r\n        if (cardIdx === -1) {\r\n          cardIdx = player.findPlayerHighestCard();\r\n        }\r\n\r\n        return cardIdx;\r\n      }\r\n\r\n      if (playerBet <= 1) {\r\n        cardIdx = player.findHighestTrumpCard(trumpCardSuit);\r\n        if (cardIdx > -1) {\r\n          cardIdx = player.findLowestCard(trumpCardSuit, trumpCardSuit);\r\n        }\r\n        if (cardIdx === -1) {\r\n          cardIdx = player.findPlayerLowestCard();\r\n        }\r\n\r\n        return cardIdx;\r\n      }\r\n    }\r\n\r\n    if (!myTable.isTableEmpty()) {\r\n      firstCardSuit = myTable.getFirstCard().getSuit();\r\n    }\r\n\r\n    if (playerBet <= 0) {\r\n      if (playerBet === 0) {\r\n        for (let i = 0; cardIdx === -1 && i < playerCards.length; ++i) {\r\n          if (firstCardSuit !== trumpCardSuit && firstCardSuit === playerCards[i].getSuit()) {\r\n            cardIdx = player.findLowestSuitCard(firstCardSuit);\r\n          }\r\n        }\r\n\r\n        if (firstCardSuit === trumpCardSuit\r\n          || (firstCardSuit !== trumpCardSuit && player.getSortedCards()[suits[trumpCardSuit - 1]].length)) {\r\n          cardIdx = player.findLowestTrumpCard(trumpCardSuit);\r\n        }\r\n\r\n        if (cardIdx === -1) {\r\n          cardIdx = player.findHighestCard(trumpCardSuit, firstCardSuit);\r\n        }\r\n      }\r\n    } else {\r\n      // ha legalább egy ütés lett fogadva\r\n      // a nyitó színben, ha az nem adu, tegye a legnagyobbat\r\n      if (firstCardSuit !== trumpCardSuit) {\r\n        for (let i = 0; cardIdx === -1 && i < playerCards.length; ++i) {\r\n          if (firstCardSuit === playerCards[i].getSuit()) {\r\n            cardIdx = player.findHighestSuitCard(firstCardSuit);\r\n          }\r\n        }\r\n      // ha a nyitó szín adu\r\n      } else if (firstCardSuit === trumpCardSuit) {\r\n        let highTrumpCards = 0;\r\n        for (let i = 0; i < playerCards.length; ++i) {\r\n          if (trumpCardSuit === playerCards[i].getSuit() && playerCards[i].getRank() > 9) {\r\n            highTrumpCards += 1;\r\n          }\r\n        }\r\n        if (highTrumpCards > 2) {\r\n          cardIdx = this.tryToBeatTrumpCard(myTable, player, playerCards, trumpCardSuit);\r\n        } else {\r\n          cardIdx = player.findLowestTrumpCard(trumpCardSuit);\r\n        }\r\n      }\r\n      // ha nincs a nyitó színben lapja és a nyitó szín nem adu\r\n      if (cardIdx === -1) {\r\n        cardIdx = this.tryToBeatTrumpCard(myTable, player, playerCards, trumpCardSuit);\r\n      }\r\n      // ha nincs a nyitó színben lapja és a nyitó szín nem adu és nincs aduja, tegye a legkisebb kártyát\r\n      if (cardIdx === -1) {\r\n        cardIdx = player.findLowestCard(trumpCardSuit, firstCardSuit);\r\n      }\r\n    }\r\n\r\n    return cardIdx;\r\n  }\r\n\r\n}\r\n","export default \".home-container__settings-panel {\\n  width: 468px;\\n  margin: 250px auto;\\n  background-color: var(--primary-lighter-color);\\n}\\n.home-container__settings-panel_row {\\n  width: 100%;\\n  height: 48px;\\n}\\n.home-container__settings-panel_row .player-name {\\n  width: 108px;\\n  background-color: var(--primary-lighter-color);\\n  outline: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcZ2l0XFxjYXJkLWdhbWVzL3NyY1xcYXBwXFxob21lXFxob21lLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSw4Q0FBQTtBQ0FKO0FERUk7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQ0FOO0FERU07RUFDRSxZQUFBO0VBQ0EsOENBQUE7RUFDQSxhQUFBO0FDQVIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9tZS1jb250YWluZXIge1xyXG4gICZfX3NldHRpbmdzLXBhbmVsIHtcclxuICAgIHdpZHRoOiA0NjhweDtcclxuICAgIG1hcmdpbjogMjUwcHggYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHRlci1jb2xvcik7XHJcblxyXG4gICAgJl9yb3cge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiA0OHB4O1xyXG5cclxuICAgICAgLnBsYXllci1uYW1lIHtcclxuICAgICAgICB3aWR0aDogMTA4cHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5ob21lLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWwge1xuICB3aWR0aDogNDY4cHg7XG4gIG1hcmdpbjogMjUwcHggYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcbn1cbi5ob21lLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWxfcm93IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDhweDtcbn1cbi5ob21lLWNvbnRhaW5lcl9fc2V0dGluZ3MtcGFuZWxfcm93IC5wbGF5ZXItbmFtZSB7XG4gIHdpZHRoOiAxMDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodGVyLWNvbG9yKTtcbiAgb3V0bGluZTogbm9uZTtcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent {\r\n\r\n  public currLang: string;\r\n  public playerNameTemp: string;\r\n\r\n  private playerName: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private localStorage: LocalStorageService,\r\n    private translate: TranslateService,\r\n  ) {\r\n    this.currLang = this.localStorage.retrieve('lang');\r\n    this.langChange(this.currLang);\r\n    this.playerNameTemp = this.localStorage.retrieve('name');\r\n    if (this.playerNameTemp) {\r\n      this.setPlayerName();\r\n    } else {\r\n      this.playerName = 'player';\r\n    }\r\n  }\r\n\r\n  langChange(lang: string) {\r\n    this.translate.use(lang);\r\n    this.localStorage.store('lang', lang);\r\n  }\r\n\r\n  setPlayerName() {\r\n    this.playerName = this.playerNameTemp;\r\n    this.localStorage.store('name', this.playerName);\r\n  }\r\n\r\n  goToRikiki() {\r\n    this.router.navigate(['rikiki'], {\r\n      state: { data: { playerName: this.playerName } },\r\n    });\r\n  }\r\n\r\n  goToHearts() {\r\n    this.router.navigate(['hearts'], {\r\n      state: { data: { playerName: this.playerName } },\r\n    });\r\n  }\r\n}\r\n","export class Card {\r\n    private suit: number;\r\n    private rank: number;\r\n    /*\r\n    * CLUBS = 1;\r\n    * DIAMONDS = 2;\r\n    * HEARTS = 3;\r\n    * SPADES = 4;\r\n    * DEUCE = 2;\r\n    * THREE = 3;\r\n    * FOUR = 4;\r\n    * FIVE = 5;\r\n    * SIX = 6;\r\n    * SEVEN = 7;\r\n    * EIGHT = 8;\r\n    * NINE = 9;\r\n    * TEN = 10;\r\n    * JACK = 11;\r\n    * QUEEN = 12;\r\n    * KING = 13;\r\n    * ACE = 14;\r\n    */\r\n\r\n    constructor(suit: number, rank: number) {\r\n        if (this.isValidRank(rank) && this.isValidSuit(suit)) {\r\n            this.rank = rank;\r\n            this.suit = suit;\r\n        } else {\r\n            console.log(`Creat card failed suit ${suit} rank ${rank}`);\r\n        }\r\n    }\r\n\r\n    public getSuit(): number {\r\n        return this.suit;\r\n    }\r\n\r\n    public getRank(): number {\r\n        return this.rank;\r\n    }\r\n\r\n    public printCard(): string {\r\n        return `${this.rankToString(this.rank)}${this.suitToString(this.suit)}`;\r\n    }\r\n\r\n    public isValidRank(rank: number): boolean {\r\n        return rank === 0 || 2 <= rank && rank <= 14;\r\n    }\r\n\r\n    public isValidSuit(suit: number): boolean {\r\n        return suit === 0 || 1 <= suit && suit <= 4;\r\n    }\r\n\r\n    public rankToString(rank: number): string {\r\n        switch (rank) {\r\n            case 2:\r\n                return '2';\r\n            case 3:\r\n                return '3';\r\n            case 4:\r\n                return '4';\r\n            case 5:\r\n                return '5';\r\n            case 6:\r\n                return '6';\r\n            case 7:\r\n                return '7';\r\n            case 8:\r\n                return '8';\r\n            case 9:\r\n                return '9';\r\n            case 10:\r\n                return '10';\r\n            case 11:\r\n                return 'J';\r\n            case 12:\r\n                return 'Q';\r\n            case 13:\r\n                return 'K';\r\n            case 14:\r\n                return 'A';\r\n            default:\r\n                return '0';\r\n        }\r\n    }\r\n\r\n    public suitToString(suit: number): string {\r\n        switch (suit) {\r\n            case 1:\r\n                return 'C';\r\n            case 2:\r\n                return 'D';\r\n            case 3:\r\n                return 'H';\r\n            case 4:\r\n                return 'S';\r\n            default:\r\n                return '0';\r\n        }\r\n    }\r\n}\r\n","import { Card } from './card';\r\n\r\nexport const nullCard = new Card(0, 0);\r\nexport const clubTwo = new Card(1, 2);\r\nexport const spadeQueen = new Card(4, 12);\r\nexport const spadeKing = new Card(4, 13);\r\nexport const spadeAce = new Card(4, 14);\r\n\r\nexport const isSpecificCard = (cardToExamin: Card, cardToCompare: Card) => {\r\n  return cardToExamin.getSuit() === cardToCompare.getSuit() && cardToExamin.getRank() === cardToCompare.getRank();\r\n};\r\nexport const isSpecificCardIncluded = (cards: Card[], cardToFind: Card) => {\r\n  return cards?.filter(card => isSpecificCard(card, cardToFind)).length;\r\n};\r\n","import { Card } from '../card/card';\r\n\r\nexport class Deck {\r\n    private deck: Card[] = [];\r\n\r\n    constructor() {\r\n        for (let i = 1; i < 5; ++i) {\r\n            for (let j = 2; j < 15; ++j) {\r\n                this.deck.push(new Card(i, j));\r\n            }\r\n        }\r\n\r\n        Deck.shuffle(this.deck);\r\n    }\r\n\r\n    static shuffle(array: Card[]): Card[] {\r\n        let currentIndex = array.length;\r\n        let temporaryValue: Card;\r\n        let randomIndex: number;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n\r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n      }\r\n\r\n      public getDeck() {\r\n        return this.deck;\r\n    }\r\n}\r\n","import { Player } from './player';\r\nimport { Card } from '../card/card';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { Suit } from '../suit/suit';\r\nimport { suits } from '../suit/suits';\r\n\r\n\r\nexport class HeartsPlayer extends Player {\r\n\r\n  private startegyTakeAll = false;\r\n  private cardsToSwap: Card[] = [];\r\n\r\n  constructor(name: string) {\r\n    super(name);\r\n  }\r\n\r\n  setScore() {\r\n    this.score += this.real;\r\n  }\r\n\r\n  addCard(card: Card) {\r\n    super.addCard(card);\r\n    this.sortPlayerCards();\r\n  }\r\n\r\n  removeCard(cardToRemove: Card) {\r\n    const suit = suits[cardToRemove.getSuit() - 1];\r\n    const properSuitsArray = this.sortedCards[suit];\r\n    this.sortedCards[suit] = properSuitsArray.filter((card: { getRank: () => number; }) => card.getRank() !== cardToRemove.getRank());\r\n\r\n    this.sortPlayerCards();\r\n  }\r\n\r\n  removeCardByIdx(indexOf: number): Card {\r\n    const removedCard = super.removeCardByIdx(indexOf);\r\n    this.sortPlayerCards();\r\n\r\n    return removedCard;\r\n  }\r\n\r\n  sortPlayerCards() {\r\n    super.sortPlayerCards([Suit.HEART, Suit.SPADE, Suit.DIAMOND, Suit.CLUB]);\r\n  }\r\n\r\n  isStartegyTakeAll(): boolean {\r\n    return this.startegyTakeAll;\r\n  }\r\n\r\n  setStartegyTakeAll(takeAll: boolean) {\r\n    this.startegyTakeAll = takeAll;\r\n  }\r\n\r\n  addCardToSwap(card: Card) {\r\n    this.cardsToSwap.push(card);\r\n  }\r\n\r\n  getCardsToSwap(): Card[] {\r\n    const cardsToSwapTemp = cloneDeep(this.cardsToSwap);\r\n    this.cardsToSwap = [];\r\n    return cardsToSwapTemp;\r\n  }\r\n}\r\n","import { SortedCards } from 'src/app/interfaces/sorted-cards.interface';\r\nimport { Card } from '../card/card';\r\nimport { Suit } from '../suit/suit';\r\nimport { suits } from '../suit/suits';\r\n\r\nexport abstract class Player {\r\n  protected name: string;\r\n  protected cards: Card[] = [];\r\n  protected sortedCards: SortedCards = {\r\n    clubs: [],\r\n    diamonds: [],\r\n    hearts: [],\r\n    spades: [],\r\n  };\r\n  protected bet = -1;\r\n  protected real = 0;\r\n  protected score = 0;\r\n  protected starter = false;\r\n  protected last = false;\r\n\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  setName(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  hasCard(): boolean {\r\n    return !!this.cards.length;\r\n  }\r\n\r\n  addCard(card: Card) {\r\n    const cardSuitArray = this.sortedCards[suits[card.getSuit() - 1]];\r\n    let inserted = false;\r\n    if (!cardSuitArray.length) {\r\n      cardSuitArray.push(card);\r\n    } else {\r\n      for (let i = 0; !inserted && i < cardSuitArray.length; i++) {\r\n        if (card.getRank() < cardSuitArray[i].getRank()) {\r\n          inserted = true;\r\n          cardSuitArray.splice(i, 0, card);\r\n        }\r\n      }\r\n      if (!inserted) {\r\n        cardSuitArray.push(card);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCardByIdx(indexOf: number): Card {\r\n    const cardToRemove = this.cards.splice(indexOf, 1)[0];\r\n    const suit = suits[cardToRemove.getSuit() - 1];\r\n    const properSuitsArray = this.sortedCards[suit];\r\n    this.sortedCards[suit] = properSuitsArray.filter((card: { getRank: () => number; }) => card.getRank() !== cardToRemove.getRank());\r\n\r\n    return cardToRemove;\r\n  }\r\n\r\n  getCards(): Card[] {\r\n    return this.cards;\r\n  }\r\n\r\n  getSortedCards(): SortedCards {\r\n    return this.sortedCards;\r\n  }\r\n\r\n  getSortedCardsLength(): number {\r\n    return this.sortedCards.clubs.length\r\n      + this.sortedCards.diamonds.length\r\n      + this.sortedCards.hearts.length\r\n      + this.sortedCards.spades.length;\r\n  }\r\n\r\n  sortPlayerCards(suitOrder: number[]) {\r\n    this.cards = [\r\n      ...this.sortedCards[suits[suitOrder[0] - 1]],\r\n      ...this.sortedCards[suits[suitOrder[1] - 1]],\r\n      ...this.sortedCards[suits[suitOrder[2] - 1]],\r\n      ...this.sortedCards[suits[suitOrder[3] - 1]]\r\n    ];\r\n  }\r\n\r\n  private findCard(trumpSuit?: number, playerSuit?: number, highestCardRank?: number, lowestCardRank?: number): number {\r\n    let cardIndex = -1;\r\n\r\n    for (let i = 0; i < this.cards.length; ++i) {\r\n      const currentSuit = this.cards[i].getSuit();\r\n      const currentRank = this.cards[i].getRank();\r\n      const highestRank = highestCardRank !== undefined && highestCardRank < currentRank;\r\n      const lowestRank = lowestCardRank !== undefined && lowestCardRank > currentRank;\r\n      if (trumpSuit === undefined || playerSuit === undefined) {\r\n        const suit = trumpSuit !== undefined ? trumpSuit : playerSuit;\r\n        if (suit === currentSuit) {\r\n          if (highestRank) {\r\n            highestCardRank = currentRank;\r\n            cardIndex = i; // highest suit\r\n          } else if (lowestRank) {\r\n            lowestCardRank = currentRank;\r\n            cardIndex = i; // lowest suit\r\n          }\r\n        }\r\n      } else if (trumpSuit !== currentSuit && playerSuit !== currentSuit) {\r\n          if (highestRank) {\r\n            highestCardRank = currentRank;\r\n            cardIndex = i;\r\n          } else if (lowestRank) {\r\n            lowestCardRank = currentRank;\r\n            cardIndex = i;\r\n          }\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n\r\n  findHighestTrumpCard(trumpSuit: number): number {\r\n    return this.findCard(trumpSuit, undefined, 0, undefined);\r\n  }\r\n\r\n  findLowestTrumpCard(trumpSuit: number): number {\r\n    return this.findCard(trumpSuit, undefined, undefined, 15);\r\n  }\r\n\r\n  findHighestSuitCard(playerStarterSuit: number): number {\r\n    return this.findCard(undefined, playerStarterSuit, 0, undefined);\r\n  }\r\n\r\n  findLowestSuitCard(playerStarterSuit: number): number {\r\n    return this.findCard(undefined, playerStarterSuit, undefined, 15);\r\n  }\r\n\r\n  findHighestCard(trumpCardSuit: number, playerStarterSuit: number): number {\r\n    return this.findCard(trumpCardSuit, playerStarterSuit, 0, undefined);\r\n  }\r\n\r\n  findLowestCard(trumpCardSuit: number, playerStarterSuit: number): number {\r\n    return this.findCard(trumpCardSuit, playerStarterSuit, undefined, 15);\r\n  }\r\n\r\n  findPlayerHighestCard(): number {\r\n    let cardIndex = -1;\r\n    let highestCardRank = 0;\r\n\r\n    for (let i = 0; i < this.cards.length; ++i) {\r\n      const currentRank = this.cards[i].getRank();\r\n      if (highestCardRank < currentRank) {\r\n        highestCardRank = currentRank;\r\n        cardIndex = i;\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n\r\n  findPlayerLowestCard(): number {\r\n    let cardIndex = -1;\r\n    let lowestCardRank = 15;\r\n\r\n    for (let i = 0; i < this.cards.length; ++i) {\r\n      const currentRank = this.cards[i].getRank();\r\n      if (lowestCardRank > currentRank) {\r\n        lowestCardRank = currentRank;\r\n        cardIndex = i;\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n\r\n  /**\r\n  * Legnagyobb értékű kártya keresése a megadott színek között\r\n  *\r\n  * @param selectedSuits\r\n  * A megadott kártya színek amelyekben a keresés történjen\r\n  *\r\n  * @return\r\n  * A legnagyobb értékű kártya, ha több van a megadott prioritás szerint választódik\r\n  *\r\n  */\r\n findHighestCardInSortedCards(selectedSuits: number[]): Card {\r\n  const highCards: Card[] = [];\r\n\r\n  selectedSuits.forEach(suitNr => {\r\n    const suitCards = this.sortedCards[suits[suitNr - 1]];\r\n    if (suitCards.length) {\r\n      highCards.push(suitCards[suitCards.length - 1]);\r\n    }\r\n  });\r\n\r\n  highCards.sort((a, b) => (a.getRank() < b.getRank()) ? 1 : -1);\r\n\r\n  return highCards[0];\r\n}\r\n\r\n  /**\r\n  * Legkisebb értékű kártya keresése a megadott színek között\r\n  *\r\n  * @param selectedSuits\r\n  * A megadott kártya színek amelyekben a keresés történjen\r\n  *\r\n  * @return\r\n  * A legkisebb értékű kártya, ha több van a megadott prioritás szerint választódik\r\n  *\r\n  */\r\n  findLowestCardInSortedCards(selectedSuits: number[]): Card {\r\n    const lowestCards: Card[] = [];\r\n\r\n    selectedSuits.forEach(suitNr => {\r\n      const suitCards = this.sortedCards[suits[suitNr - 1]];\r\n      if (suitCards.length) {\r\n        lowestCards.push(suitCards[0]);\r\n      }\r\n    });\r\n\r\n    lowestCards.sort((a, b) => (a.getRank() > b.getRank()) ? 1 : -1);\r\n\r\n    return lowestCards[0];\r\n  }\r\n\r\n  getBet(): number {\r\n    return this.bet;\r\n  }\r\n\r\n  setBet(bet: number) {\r\n    this.bet = bet;\r\n  }\r\n\r\n  getReal(): number {\r\n    return this.real;\r\n  }\r\n\r\n  addReal(real: number) {\r\n    this.real += real;\r\n  }\r\n\r\n  resetReal() {\r\n    this.real = 0;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  resetScore() {\r\n    this.score = 0;\r\n  }\r\n\r\n  abstract setScore(): void;\r\n\r\n  isStarter(): boolean {\r\n    return this.starter;\r\n  }\r\n\r\n  setStarter(starter: boolean) {\r\n    this.starter = starter;\r\n  }\r\n\r\n  isLast(): boolean {\r\n    return this.last;\r\n  }\r\n\r\n  setLast(last: boolean) {\r\n    this.last = last;\r\n  }\r\n}\r\n","import { Card } from '../card/card';\r\nimport { Suit } from '../suit/suit';\r\nimport { Player } from './player';\r\n\r\nexport class RikikiPlayer extends Player {\r\n\r\n  constructor(name: string) {\r\n    super(name);\r\n  }\r\n\r\n  setScore() {\r\n    let score = 0;\r\n    if (this.bet === this.real) {\r\n      score += 10 + this.real * 2;\r\n    }\r\n\r\n    if (this.bet > this.real) {\r\n      score -= (this.bet - this.real) * 2;\r\n    }\r\n\r\n    if (this.bet < this.real) {\r\n      score -= (this.real - this.bet) * 2;\r\n    }\r\n\r\n    this.score += score;\r\n  }\r\n\r\n  addCard(card: Card) {\r\n    super.addCard(card);\r\n    this.sortPlayerCards();\r\n  }\r\n\r\n  removeCardByIdx(indexOf: number): Card {\r\n    const removedCard = super.removeCardByIdx(indexOf);\r\n    this.sortPlayerCards();\r\n\r\n    return removedCard;\r\n  }\r\n\r\n  sortPlayerCards() {\r\n    super.sortPlayerCards([Suit.CLUB, Suit.DIAMOND, Suit.HEART, Suit.SPADE]);\r\n  }\r\n}\r\n","export enum Suit {\r\n    CLUB = 1,\r\n    DIAMOND = 2,\r\n    HEART = 3,\r\n    SPADE = 4,\r\n}\r\n","export const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\r\n","import { Table } from './table';\r\nimport { HeartsPlayer } from '../player/hearts-player';\r\nimport { Card } from '../card/card';\r\nimport { Suit } from '../suit/suit';\r\nimport { isSpecificCard, spadeQueen } from '../card/cards';\r\n\r\nexport class HeartsTable extends Table {\r\n\r\n  private players: HeartsPlayer[] = [];\r\n  private spadeQueenOut = false;\r\n  private heartsBroken = false;\r\n\r\n  constructor(nrOfPlayers: number) {\r\n    super(nrOfPlayers);\r\n\r\n    for (let i = 1; i <= nrOfPlayers; ++i) {\r\n      const str = `Player${i}`;\r\n      this.players.push(new HeartsPlayer(str));\r\n    }\r\n  }\r\n\r\n  getPlayers(): HeartsPlayer[] {\r\n    return this.players;\r\n  }\r\n\r\n  getPlayer(nrOfPlayer: number): HeartsPlayer {\r\n    return this.players[nrOfPlayer];\r\n  }\r\n\r\n  setStarterAndLastPlayer(starterPlayer: number) {\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (i === starterPlayer) {\r\n        this.getPlayer(i).setStarter(true);\r\n      } else {\r\n        this.getPlayer(i).setStarter(false);\r\n      }\r\n\r\n      if (i === (this.nrOfPlayers + starterPlayer - 1) % this.nrOfPlayers) {\r\n        this.getPlayer(i).setLast(true);\r\n      } else {\r\n        this.getPlayer(i).setLast(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  getStarter(): number {\r\n    let starter = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isStarter()) {\r\n        starter = i;\r\n      }\r\n    }\r\n\r\n    return starter;\r\n  }\r\n\r\n  getLastPlayer(): number {\r\n    let lastPlayer = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isLast()) {\r\n        lastPlayer = i;\r\n      }\r\n    }\r\n\r\n    return lastPlayer;\r\n  }\r\n\r\n  isSpadeQueenOut() {\r\n    return this.spadeQueenOut;\r\n  }\r\n\r\n  isHeartsBroken() {\r\n    return this.heartsBroken;\r\n  }\r\n\r\n  resetHeartsBroken() {\r\n    this.heartsBroken = false;\r\n    this.spadeQueenOut = false;\r\n  }\r\n\r\n  putCardOnTable(playerIdx: number, card: Card) {\r\n    super.putCardOnTable(playerIdx, card);\r\n    if (isSpecificCard(card, spadeQueen)) {\r\n      this.spadeQueenOut = true;\r\n      this.heartsBroken = true;\r\n    }\r\n    if (card.getSuit() === Suit.HEART) {\r\n      this.heartsBroken = true;\r\n    }\r\n  }\r\n\r\n  findTurnTaker(): number {\r\n    let playerIndex = -1;\r\n    let highestCardRank = 0;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const currentSuit = this.cardsOnTable[i].getSuit();\r\n      const currentRank = this.cardsOnTable[i].getRank();\r\n      if (this.firstCard.getSuit() === currentSuit && highestCardRank < currentRank) {\r\n        highestCardRank = currentRank;\r\n        playerIndex = i;\r\n      }\r\n    }\r\n\r\n    return playerIndex;\r\n  }\r\n\r\n  getCardPoints(): number {\r\n    let points = 0;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const currentCard = this.cardsOnTable[i];\r\n      if (currentCard.getSuit() === Suit.HEART) {\r\n        points += 1;\r\n      } else if (isSpecificCard(currentCard, spadeQueen)) {\r\n        points += 13;\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n}\r\n","import { Table } from './table';\r\nimport { RikikiPlayer } from '../player/rikiki-player';\r\n\r\nexport class RikikiTable extends Table {\r\n\r\n  private players: RikikiPlayer[] = [];\r\n  private betTotal = 0;\r\n\r\n  constructor(nrOfPlayers: number) {\r\n    super(nrOfPlayers);\r\n\r\n    for (let i = 1; i <= nrOfPlayers; ++i) {\r\n      const str = `Player${i}`;\r\n      this.players.push(new RikikiPlayer(str));\r\n    }\r\n  }\r\n\r\n  getPlayers(): RikikiPlayer[] {\r\n    return this.players;\r\n  }\r\n\r\n  getPlayer(nrOfPlayer: number): RikikiPlayer {\r\n    return this.players[nrOfPlayer];\r\n  }\r\n\r\n  setStarterAndLastPlayer(starterPlayer: number) {\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (i === starterPlayer) {\r\n        this.getPlayer(i).setStarter(true);\r\n      } else {\r\n        this.getPlayer(i).setStarter(false);\r\n      }\r\n\r\n      if (i === (this.nrOfPlayers + starterPlayer - 1) % this.nrOfPlayers) {\r\n        this.getPlayer(i).setLast(true);\r\n      } else {\r\n        this.getPlayer(i).setLast(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  getStarter(): number {\r\n    let starter = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isStarter()) {\r\n        starter = i;\r\n      }\r\n    }\r\n\r\n    return starter;\r\n  }\r\n\r\n  getLastPlayer(): number {\r\n    let lastPlayer = -1;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      if (this.getPlayer(i).isLast()) {\r\n        lastPlayer = i;\r\n      }\r\n    }\r\n\r\n    return lastPlayer;\r\n  }\r\n\r\n  getBetTotal(): number {\r\n    return this.betTotal;\r\n  }\r\n\r\n  setBetTotal(betTotal: number) {\r\n    this.betTotal = betTotal;\r\n  }\r\n\r\n}\r\n","import { Card } from '../card/card';\r\nimport { nullCard } from '../card/cards';\r\nimport { Deck } from '../deck/deck';\r\n\r\nexport class Table {\r\n  private deck: Card[] = [];\r\n  protected nrOfPlayers: number;\r\n  protected cardsOnTable: Card[] = [];\r\n  protected firstCard = nullCard;\r\n\r\n  constructor(nrOfPlayers: number) {\r\n    this.nrOfPlayers = nrOfPlayers;\r\n\r\n    const deckOfCards = new Deck();\r\n    this.deck = deckOfCards.getDeck();\r\n    this.initCardsOnTable();\r\n  }\r\n\r\n  initCardsOnTable() {\r\n    for (let i = 0; i < this.nrOfPlayers; i++) {\r\n      this.cardsOnTable[i] = nullCard;\r\n    }\r\n  }\r\n\r\n  shuffleDeck() {\r\n    Deck.shuffle(this.deck);\r\n  }\r\n\r\n  getDeck() {\r\n    return this.deck;\r\n  }\r\n\r\n  getCardFromDeck(): Card {\r\n    return this.deck.splice(0, 1)[0];\r\n  }\r\n\r\n  addCardToDeck(card: Card) {\r\n    this.deck.push(card);\r\n  }\r\n\r\n  getTrumpCard(): Card {\r\n    return this.getCardFromDeck();\r\n  }\r\n\r\n  nrOfCardsOnTable(): number {\r\n    let nrOfCards = 0;\r\n    for (let i = 0; i < this.cardsOnTable.length; i++) {\r\n      if (!!this.cardsOnTable[i].getSuit()) {\r\n        ++nrOfCards;\r\n      }\r\n    }\r\n    return nrOfCards;\r\n  }\r\n\r\n  getFirstCard(): Card {\r\n    return this.firstCard;\r\n  }\r\n\r\n  checkCardSlotsOnTable(): Card[] {\r\n    return this.cardsOnTable;\r\n  }\r\n\r\n  checkCardsOnTable(): Card[] {\r\n    const cardsOnTable: Card[] = [];\r\n    for (let i = 0; i < this.cardsOnTable.length; i++) {\r\n      if (this.cardsOnTable[i].getSuit()) {\r\n        cardsOnTable.push(this.cardsOnTable[i]);\r\n      }\r\n    }\r\n    return cardsOnTable;\r\n  }\r\n\r\n  checkCardOnTable(indexOf: number): Card {\r\n    return this.cardsOnTable[indexOf];\r\n  }\r\n\r\n  isTableEmpty(): boolean {\r\n    return !this.cardsOnTable.filter(card => card !== nullCard).length;\r\n  }\r\n\r\n  putCardOnTable(playerIdx: number, card: Card) {\r\n    if (!this.firstCard.getSuit()) {\r\n      this.firstCard = card;\r\n    }\r\n    this.cardsOnTable.splice(playerIdx, 1, card);\r\n  }\r\n\r\n  removeCardsFromTable() {\r\n    this.deck = [...this.deck, ...this.checkCardsOnTable()];\r\n    this.initCardsOnTable();\r\n    this.firstCard = nullCard;\r\n  }\r\n\r\n  findHighestCardOnTable(trumpCardSuit: number): number {\r\n    let cardIndex = -1;\r\n    let highestCardRank = 0;\r\n\r\n    for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n      const currentSuit = this.cardsOnTable[i].getSuit();\r\n      const currentRank = this.cardsOnTable[i].getRank();\r\n      if (trumpCardSuit === currentSuit && highestCardRank < currentRank) {\r\n        highestCardRank = currentRank;\r\n        cardIndex = i;\r\n      }\r\n    }\r\n\r\n    if (cardIndex === -1) {\r\n      for (let i = 0; i < this.nrOfPlayers; ++i) {\r\n        const currentSuit = this.cardsOnTable[i].getSuit();\r\n        const currentRank = this.cardsOnTable[i].getRank();\r\n        if (this.firstCard.getSuit() === currentSuit && highestCardRank < currentRank) {\r\n          highestCardRank = currentRank;\r\n          cardIndex = i;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cardIndex;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}